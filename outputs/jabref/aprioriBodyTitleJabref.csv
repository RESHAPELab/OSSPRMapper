1,new sorting/export preferences,this will add a new  file sorting  tab to the preferences that allows to exactly specify the sort and export order of entries  rather than the rather limited set of choices that were available to date.,Network,IO,UI,Logging,Interpreter,Util,App
7,i have implemented 2 features requested in ticket #841.,the user can now specify an arbitrary number of file-link columns in te  entry table columns  preferences tab  to be added to the main table. the user can any file types specified in the list of external file types. the extra columns work exactly like the original file-link column.  for each file-link column whenever there are multiple files  the letter  m  is displayed at the bottom right corner of the icon.       committer: noravanq   on branch master  changes to be committed:    (use  git reset head <file>  to unstage)      modified:   src/main/java/net/sf/jabref/guiglobals.java modified:   src/main/java/net/sf/jabref/jabrefpreferences.java modified:   src/main/java/net/sf/jabref/tablecolumnstab.java modified:   src/main/java/net/sf/jabref/gui/maintableformat.java modified:   src/main/java/net/sf/jabref/gui/maintableselectionlistener.java modified:   src/main/java/net/sf/jabref/gui/preventdraggingjtableheader.java,UI,IO,Network,App,Util,Logging
10,try to fix some obvious bugs about  groups,hi all  i just upgraded to 2.10 and i found some bugs immediately. 1. in the right-click-menu there is no  move-to-group  but 2  remove from group  instead. 2. i like the new add/remove/move panel  but the scrolling is not working  which is a big problem. because i have lots of groups which cannot even fit into the full screen height after expansion. 3. no way to expand or collapse all nodes  i tried the dev version  all problems still exist. here is my fixation.  cheers   w.l.,App
11,bugfix for bug  #880 pubmed import broken,found bug: pubmed/medline plain format recognized as ris format. provided solution:     - modified ris importfilter. now ris format is identified by looking for the  ty  tag (it is a mandatory tag in ris format and it is not conflictual with other filters)     - added new importfilter  medlineplain . this import filter parses medline files in plain format (not xml). the import filter has been produced referring to the official medline documentation (     - updated the net.sf.jabref.core plugin.xml file in order to include the newly added medlineplain import filter,Util,IO,App
13,language locale fix for bug959,i tried to change hard code with in-code strings to global.lang and changed icon for dialogue window from warning to error.,Util,IO
15,make (un)abbreviating journal titles also work on the journaltitle field,i ve (i) added the toggle button to the  journaltitle  field editor and (ii) made the abbreviate/unabbreviate actions change both the  journal  and  journaltitle  fields. the latter might be a bit simple-minded --  should the field to consider depend on whether biblatex mode is actually turned on?,App,Util,Logging
18,fix edits getting lost in biblatex mode,this fixes a bug where edits made in a field on a compressedentryeditortab wouldn t get stored when the field editor lost focus. the bug was caused by entryeditortabfocuslistener accessing the unused inherited parent field of compressedentryeditortab instances instead of the latter class s own (private) parent field. instead of doing just a quick fix  i decided to eliminate the excessive code and data duplication in the two classes altogether and consolidate them into one class (with an additional flag to the constructor)  since i don t think an extra class is warranted here (and easily and sensibly implementable by derivation).,Logging,UI,Network,Util,Interpreter,App,IO
19,fix error when setting unset field in source panel,when the user tries to set a previously unset field of an entry via the source panel of the entry editor  the program complains with an error message and refuses to store the field values. this change fixes that behaviour.,IO,UI,Logging,Util,App,Interpreter
22,extended the  unknown entry type  error message,i had problems locating which entry had this unknown entry type and hence extended the error message to also include the bibtex key.,App,Logging,IO,Util
24,extend biblatex: support for alias fields,- added support for aliased fields. for example  the content in the  journaltitle  field is also shown in the  journal  table. - added cleanup option to convert to the new biblatex format - modified the required/optional fields for biblatex entries to reflect the above changes (the  year  field is no longer required),App
27,partial fix for bug #913,realized many fields were not being exported  not only in .csv and .ods formats as stated in the bug report  but in .sxc as well. i fixed the export for both .ods and .sxc  but couldn t figure out how to fix it for .csv.,Logging,App,Util,Network,Interpreter
28,added special fields  printed  and  read status,added special fields  printed  and  read status   thereby implementing (at least partially): - feature #762 printed attribute - feature #692 marking of new entries and often read entries - feature #685 highlight new entries that were  forgotten  - feature #602 could add the mark as read feature - feature #225 read? checkbox  printed is just a boolean toggle and for the read field currently the values  skimmed  and  read  are possible (if you have any suggestions for further possibilities  i m happy to implement them). the icons are taken from  and should probably be replaced with icons from the same collection as the other currently used ones.,Interpreter,UI,IO,Util,Logging,Network,App
29,fixed bug #1240. 1-char strings working correctly.,fixed bug #1240  about an error thrown when trying to add a string with length of one character.,Util
44,add entry under the  view  menu to hide the toolbar,in addition  i would suggest to hide the toolbar by default.,Logging,Util,UI,Network,IO,App
45,added the option to change the table row height padding.,previously  the padding added to the row height for the main table was hardcoded. the padding value can now be modified by the user through the preferences dialog. the old hardcoded value is used as the default value for the new preference.,Network,App,UI,Logging,Interpreter,IO,Util
46,add option to hide/show gridlines in the main table,cleaned-up version of older pull request 43,Interpreter,App,Network,Util,UI,IO,Logging
47,added the ability to reorder the panels in the side pane.,side pane panels now feature an up arrow button and a down arrow button immediately to the left of the close button. these buttons allow panes to be swapped with the pane above or below them  respectively.  whenever the panes are reordered  the current position of each visible pane is recorded in the application preferences  so the user s custom ordering can be preserved when jabref is next run.,App,Util
48,add the option to save selected entries as plain bibtex.,adds a new menu option called  save selected as plain bibtex  .  this option behaves the same way as the existing  save selected as   option  except that the jabref metadata and signature comment are not written to the resulting output file.,Logging,Util,App,IO,UI
49,minor ui fix: add  save selected as plain bibtex  to the list of open database-only actions.,the  save selected as plain bibtex  menu option is now correctly enabled and disabled based on whether or not a database is currently open.  i haven t included a changelog entry  since this commit effectively just corrects a minor oversight on my behalf when adding this menu entry in [a previous pull request](  but i m happy to add one if deemed necessary.,IO,App,Logging,Util,UI
55,mac bundle and integration for java 7,these changes creates a new compilation target for jabref  in order to make a mac application bundle which can work with the newer oracle jvm for mac (versions 7 and 8)  and change the code of the wrapper to integrate the apple events with the non-deprecated api in com.apple.eawt.  main changes are: - create a new target based on oracle s appbundler to create a bundle compatible with newer jvms. (not compatible with apple s jvm). - move the older target to jabref-legacy.app. - remove the old deprecated wrapper osxadapter  which does not work with oracle s jvm. - create new wrapper based on com.apple.eawt (compatible with both jvms). - improve the quit behaviour. - add support for the fullscreen feature.  the code changes are compatible with both oracle s jvms and apple legacy one  but the legacy bundle is currently broken as the code requires java 1.7+. tested with apple s jvm (1.6.0_65) and oracle s jvm (1.8.0_45).,Util,App,UI,IO,Logging
56,fix double-click opening of files on mac,moving the registration of apple events ensures that double-clicking on a file to open it works even if jabref is not yet running.,Logging,UI,Util,IO,App
65,replace usages of preferences by string through constants,i checked all the usage of strings for getting or setting preferences and replaced them by a the usage of a constant  if one existed. this gives some more static checking and consistency throughout the project. changes are limited to  src/main/java .   again this changes nothing functionwise  but only improves code quality.,Logic,APM,Interpreter,App,IO,UI,Util,DB,Logging,Search,Network
66,fixed incompatibility with inspire output page,due to a change in the html output of the inspire search  jabref was no more able to distinguish the interesting output from the rest of the page. it was due to a missing newline character.,Util,IO
74,refactor globals,this pull request reduces the infamous globals class to one third of its size. this is achieved by extracting every variable or method that is only used once to the position of its usage. in the case of char maps several map classes have been extracted.,Network,App,Util,Test,IO,Logging
75,code style,some minor code style cleanups.,Interpreter,UI,Util,App
77,code style,more minor code style cleanups.,Util,UI,App,Logging,Test,IO,Network,Logic
89,removes splash screen,this pr removes both the splash screen and the cli option to disable the splash screen.   why? - splash screen on modern systems is shown only for a very short period of time as jabref starts fast - we should focus on making jabref to start as fast as possible. a splash screen reduces the time to start the software as additional code needs to be executed.  - for each new version (even for beta and dev versions)  we have to check in a png with 200kb file size into the repository. this increases the amount of storage required for the git repository by 200kb for each version/dev-version. - the splash screen interferes with using jabref via the cli.  - it reduces code in jabref. hence  less code needs to be maintained.  this is a pr that is open for discussion. please add any pros/cons as you see fit.,Logging,Interpreter,Util,App
93,logic improvements (java 1.7+),this pull request features various improvements of the classes in the logic package with the aim to transition beyond java 1.6 and improve quality. in particular: - updates license headers with current date - syntax optimizations: java 1.7 use of generics (diamond operator) - format code according to java conventions (c-style curly brackets  i am looking at you) - improves exception handling with logging - replace usages of exception with more precise exceptions - improves variable names - removes commented-out code  unused private methods (unused public methods/constructors are not eliminated) - use try-with-resources if possible - delete stale comments - replace stringbuffer with stringbuilder - remove history information from javadoc  (i am aware that i could push this directly  since i am now a contributor. as this started out as a pull request  i want to finish it as such. future cotributions will be made directly to jabref/master),Test
99,rewrite doi parsing,i rewrote the doi parser as it was hard to understand and missing quite a few valid dois. it s not 100% but should be a lot better than before. - clearer and more permissive regex - better url encoding and decoding - more test coverage  any comments before merging this into master are appreciated.,App
100,move and refactor entryeditor,moves the classes related to the entryeditor into a separate gui package and performs a few refactorings and quality improvements on the way.,UI,App
101,full text crawlers,**this pr enables automatic pdf fulltext downloads.**  current catalogs:   - acs - arxiv - springer - sciencedirect (elsevier) - google scholar  questions:  - do we want to include more crawlers? if yes  which? - action was in the  tools  menu. imho it should be either auto downloaded or included with the  download or  auto  button in the detailed entry view.  todo: -  make it nonblocking and keep the progress bar! -  add an option to delete the local file if a wrong file was downloaded -  tests on travis & circleci are blocked by google by  403 forbidden  (bot detection),App,Logging,IO,Network,Util,Test
105,move jabrefframe and basepanel to the gui package,this pull request moves the two central gui classes   jabrefframe  and  basepanel  to the gui package.   to preserve visibility constraints  this requires the relocation of many more classes that have package-local dependencies on the above two classes.   variables / methods in  jabrefframe  with reduced visibility that are accessed from  jabref  were made  public   since the latter class clearly does not belong to the gui package.,Logic,Logging,IO,APM,UI,Interpreter,DB,Util,Network,App,i18n
108,extract model package with core data classes,this pull request extracts the most central data classes from the root package and puts them into a separate model package. it was possible to remove all gui dependencies from these classes.  additionally  all classes in the model package are refactored and adjusted to java 8 syntax.,Util
127,minor improvement in googleurlcleaner #126,fixes detection of domains such as google.co.uk / co.jp / etc. and moves test class to test folder.,Test,App
137,unify and simplify gui actions,- using lambdas for the simpler actions - some code cleanup - extract string commands as string constants to actions.java and use the constants in jabrefframe  basepanel and rightclickmenu - use the constants already defined in keybinds to get keystrokes for the actions (in jabrefframe  basepanel  entryeditor and rightclickmenu) - 8e3ad9d: remove quickfix for [sf.net bug #1277]( and implement feature properly: instead of deactivating  show/hide toolbar  when no database is open  the action has been move to jabrefframe and works now even if no database is open.  see also #136,App,IO,Logging,UI,Util,Interpreter
143,fix sf bug #1285,restores the cursor resp.  caret  position when a field is store during editing. this fixes [sf.net bug #1285](  to be done:  - backport to dev_2.11 - ask for confirmation on sf.net and close the issue there.,App,UI
147,remove option to set custom icon theme,the setting of a custom icon theme is not available in the gui. because of this  i removed it.   what is changed: - no support for custom icon themes anymore - a smaller guiglobals class - more explicit referencing of icons - less setup logic that is required to be called explicitly - when no icon is available  the default one (red.png at the moment) will be used. this allows to detect icon errors -> see below - less code  uncovered issues through this change: - the action openfolder is used in the icon bar  but as it had no icon  it was never displayed to the user. this is now marked explicitly in red  allowing us developers to fix this.  i am open for feedback.,App,UI,Logging,Util,IO,Network
150,removes the legacy-action integrity check,removes the **legacy**-action  tools--> legacy tools --> integrity check  with all its files.   what it helps: - removes 1000 lines of code - removes a feature that is marked as a legacy tool  what does the feature do at the moment: - check year: raise error if it contains a 4digit number - check title: warn only about wrong braces - check author/editor: check that the structure is correct using  and  and the     separator.  anyone who wants this feature to stay?  is there any other validation facility in place where we could add the checks instead?,Util,App,UI,Interpreter,IO,Network,Logging
164,small changes to default preferences,- fields in table are not colored (required/optional) - owner column is not shown - slightly increasing row padding in table,Network,IO,Util,App,UI,Logging
165,timestamp is not displayed by defaut,as discussed in #164 the timestamp column shouldn t be displayed by default.,Util,App,IO,Network,UI,Logging
175,increase saving speed,intended to 122  this pr turned into a major api change. it replaces  string  in the return types of  bibtexentrytype  with  list<string> . this allows to return immutable lists instead of mutable arrays and improves the stability of the program. additionally  the rewrite allowed to replace a lot of duplicate object creation with instance variables.  with respect to #122  the immutability of the new lists removes the necessity to create defensive copies and therefore avoids a lot of cloning.,Util,UI,Network,IO,App,Logging,Interpreter
178,auto detect user language #177,jabref now uses the system locale as default with this pr.  i simplified some methods in the process and implemented a fallback to  en  when there is no bundle for the default locale.  any suggestions?,Logging,Util
187,fix linebreaking,evaluating the usage and problems of #114. what is fieldcontentparser really doing? what is jabref style formatting?,DB,Logic,Test,IO,APM,UI,Network,Logging,Util,App,Interpreter
192,improved casechangers,new attempt with the same code and same limitations  but using branches. so hopefully possible to merge. i also used the jabref formatter and clean up. hopefully  i got it correct.,Util,Test,App
204,added pushing citations to texmaker,implements sourceforge feature requests #318 and #582.,Logging,App,UI,Network,Util,IO
205,replaced defaultformbuilder with formbuilder,replaced the deprecated defaultformbuilder with formbuilder in about ten instances.  as i was working with the external programs code  the strings there were unified to ease the translation work a bit.,Util,IO,UI,Logging,App
206,added ability to merge from a downloaded doi based bibtex entry,- refactored mergeentriesdialog by splitting into a mergeentries providing a jpanel for merging and the dialog and moved these into gui.mergeentries - added mergeentrydoidialog to merge with a bibtex entry downloaded based on doi  e.g.  to add missing information or correct - added that functionality to the right-click menu for the entry table - made getentryfromdoi in doitobibtexfecther public to be able to use that to get the bibtex entry - added a new icon for doi (which probably should be used in other places),App,UI,Util
215,adding an advanced data structure for title/word in the casechangers …,…implementation.  @koppor this is what i ment. what do you think?,Test,App,Util
217,remove the option move-to-systray,why? - only applications that do background work are put in the systray  e.g.  dropbox or anti-virus-software.  - other software stays in the normal task bar - jabref currently does no background stuff  hence  should stay in the task bar only  gains? - less code - lesser quirky workarounds (see commit),UI,Logging,Util,App,Interpreter,IO
219,ieee journal abbreviations,why? - see #173   what is does: - bugfix: correct abbreviations are loaded when storing preferences through the advanced tab - ieee abbreviations are either plain (text) or in latex (code) form. for each of them  a separate file exist now. the config option  use_ieee  loads the latex one if it is true  and the plain one otherwise.,App
225,replaced defaultformbuilder with formbuilder,another batch of replacing the deprecated defaultformbuilder with formbuilder: autosetexternalfileforentries  basepanel  colorsetuppanel  dbconnectdialog  fromauxdialog  managekeywordsaction  masssetfieldaction  and synchronizefilefield.  clean up in util.java.,Interpreter,Logic,UI,Util,App,IO,Logging,Network
227,merge entries in duplicate detection,added a  merged entry  tab and preview/textbox in the duplicateresolverdialog and added handling of this at import and duplicate checking.  also fixed a bug leading to that if import was done without the importinspectiondialog  nullpointerexception happened as the metadata was not properly initialized.,App,UI,Util
229,removes non-compact rank symbols in favor of compact rank,why? - because it is ugly :taxi:  - keep consistent icon width - removes 140 lines of code  five icons  one preference check box,Util,Network,IO,UI,App,Logging,Interpreter
232,architecture,adds a the architecturetests class that ensures that specific packages stay independent from other packages.  why? - ensure that the architecture of jabref stays healthy.,IO,Test,App,Util
235,clean ups,purpose was to replace more defaultformbuilders  but ended up cleaning up minor issues and removed quite a bit of disabled code from ieeexplorefetcher (bibtex fetching and multi-page search results)  which has not been working for years  and added support for a few more publication types that ieee xplore has added.,Logging,IO,Util,Interpreter
236,simplify key bindings,currently  there is a key binding for  push to application  but there can be key bindings for each specific application  e.g.  lyx  vim  etc.  to simplify  there should only be a key binding for the currently selected application  hence  only the  push to application  key binding.,i18n,Logging,App,IO,Logic,Util,UI
237,less console output in tests,reduces console output during tests dramatically. this reduces the console output in travis  helping to find the cause for a failing test faster with less scrolling.,IO,App,Logic,Logging,Util,Test
239,remove edit preamble and edit strings from toolbar. it is still avail…,…able under the bibtex menu.,App,UI,Util,Logging,IO
241,set default encoding to utf-8,the utf-8 support of latex  [biber]( and [latex editors]( is really mature. to have interoperable  .bib  files  jabref should set the default encoding (for new users) to  utf-8,Network,Logging,UI,Util,App,IO
248,removes button to merge entries and keep the old ones.,- renames merge button into  merge entries . - removes button to merge entries and keep the old ones. the old ones are now always deleted.,UI,App
251,removes legacy options to sync files in the  pdf  or  ps  field,why? - these legacy actions are replaced by using the  file  field and a much more sophisticated file sync action.,UI,App
253,cleanup preferences,this pr remove preferences that are no longer used in jabref.  i checked the usage each public field of  jabrefpreferences  and  if there was no such usage  searched for string occurrences of the preference value in the complete project. if such usage was found  i replaced it with a usage of the respective field. otherwise  i deleted the preference.  all in all  only a surprisingly small amount of preferences is not used.,Util,Logging,UI,App,Network,IO
259,fixed some warnings  missing copyright statements  and some minor issues,pushtoemacs is causing formatting problems (works with manual formatting)  but other than that  i believe that everything should be ok.,Interpreter,IO,Network,App,Logic,UI,Util,Logging
264,remove unused menus for import/export,found some dead code in jabrefframe which has been used to generate submenus for custom imports/exports.   would be glad if someone checks whether this is okay.,Logging,Util,UI,App,IO
266,removed a number of warnings  added copyright etc,cleanups based on warnings  primarily: - removed right-hand side arguments of diamond operators - static functions - commented empty blocks - added try-with - avoided hiding variables  included copyright statements.,Interpreter,Util,App
267,removes option to hide the bibtex code tab in the entry editor.,why? - i do not see the point of hiding the bibtex code tab in the entry editor. hence  i removed the option.,Util,Logging,App,UI,Interpreter,IO,Network
274,save size of mergeentrydialog and mergeentrydoidialog,as per @koppor s request (sort of)  the  mergeentry*  dialogs now save and restore their size and position (same for both).,IO,Logging,Util,UI,App
276,refactor bibtex model (a bit),- renames getallfields() to getfieldnames()  - add getfields() method  often the workflow in our code is:      java for(string name: entry.getfieldnames()) {   entry.getfield(name)    // do something }      we can directly use  entry.getfields()  for this now. are there any concurrency problems behind the old rationale or was it just dumb?,Util,App,Logging
280,removes option to disable renaming in filechooser dialogs.,why? - i think this is annoying as one would expect this to work.   i can also live with the option that this is always active  but giving the user the option to choose is not good in my opinion.,Network,Logging,App,UI,Util,IO
283,replaced print-out messages with logger,added logger instead of print-outs in a bunch of places.,UI,Util,IO,App,Logging,Network
286,fixed a number of warnings,got rid of a number of warnings: - <> - static methods - commented empty blocks - general clean up,Logic,App,IO,Test,Logging,Util
287,doaj search,search for directory of open access journals. quite functional  but the remaining things should (probably) be done -  ~~help page~~ -  decide on where the bibjsonconverter class should be positioned (input?) -  more fields? ~~issn?~~ -  ~~better/more error checking~~ -  ~~handle search results with more than 100 entries properly~~ -  ~~fill empty methods in doajfetcher~~ -  ~~update status bar~~ -  add test for bibjsonconverter -  ~~enable stopping search~~  implements what is discussed in #208,Network,Util,Logging,Search,App,IO
292,warning removal,more warnings removed.,Logic,Util,Network,Interpreter,App,UI,Logging,Search,Test,i18n,IO
298,warningremoval5,removed a bunch of warnings. - redundant specifications in <> - resource leakage - commented empty blocks - removed calls to util.pr,Logging,Logic,App,IO,i18n,UI,Util
299,log message translation removals,trying to remove translated log messages  unless the translation is needed elsewhere. in that case i add a comment stating where the string is found.  i ll do this every now and then  so while not complete yet  it will be split in separate prs (unless there are any objections).,App,Interpreter,Logging,DB,Logic,IO,Util,Network,UI
301,fixed a number of false positive translation strings,cleaned up the code (basically move localization.lang to the  correct  places) for a number of files to reduce the amount of false positives when it comes to possibly obsolete keys. this also resulted in some other related clean-ups  such as removing translation requests for database names (try to translate  inspire ).,Search,Network,App,Util
302,replaced some of the getkey arguments with constants from keybinds,replaced some of the getkey arguments with constants from keybinds  change: the preamble editor dialog doesn t have its own key entry for closing it.,IO,Logging,App,Util,i18n,DB,Logic,UI,Interpreter,Network
303,replaces the final(?) keybinds.string and some actions.string,some more cleanups.  in generalfetcher  the key binding for  fetch medline  is defined  which seems a bit non-intuitive. not sure how to proceed here.,Util,IO,Network,Search,App,Logging
304,replaced system.*.println with logger in vm.java,after looking more into the bibtex vm (as part of pr #298)  i better understood the structure of vm.java. hence  the main focus was to introduce logging for the warn function and it also lead to that other printouts were replaced with the logger.,Logging,App,Logic,IO,Test,Util
305,add ability to format/cleanup the date field,the value in the date field has to be of the form yyyy-mm or yyyy-mm-dd according to the biblatex manual. this pr adds the ability to format/cleanup the date field to the correct format.,UI,Test,IO,Util,Network,Logging,App,Interpreter,Parser,Search
308,removes option to toggle native file dialog on mac by making jabref a…,…lways use native file dialogs on mac  as discussed in the dev meeting. but the option is only for mac users. to make this available for all other operating system  more has to be investigated. but this is not necessary for now.,Util,Network,App,UI,IO,Logging
309,remove translation string  an error occurred while fetching from inspire source (%0):,i assume that the user knows in which context he his  therefore we can reuse the generic exception message to have less strings opened for translation.,App,Search,Util,Network
310,copacimportertest,new pr on a new branch. edited tests. no assignments. better formatting. cover dt (documenttype). new test in case an empty text is imported.  edit: added the suggestions into the testfile. checking the equality of copac and ris is ongoing.,Util,IO,Test,App
311,openoffice.org/libreoffice improvements,changed default file names suitable for oo.o 4 and lo 5 and added support for having both openoffice.org and libreoffice installed (sort of),App,Logic,Util,i18n,UI,IO,Logging
320,concept: improve exception handling,(inspired by #301)   ultimate goal: improving the exception handling by - replacing generic exceptions by custom exceptions - support localization already on exception level    in the complete project.  current status:  - showing concept using newly introduced  jabrefexception  for the preferences import,App,Network,UI,IO,Util,Logging
329,moved things from the util file,i ve moved some methods from the util file to more suitable places.  the destination was determined by where the method was (most) used or where it seems to fit.  as a result of this i also moved the corresponding tests to a more suitable location.,Interpreter,Util,App
330,328: added more and better information with unsaved database,![capturedialog](  (in this case it was a new database  otherwise the full path is shown.),UI,App,Logging,Util,IO
331,make model independent,net.sf.jabref.model has no dependencies anymore to whatsoever in jabref. this would allow to extract these classes in a separate library. or to put them under heavy testing as this is the core of jabref.,Interpreter,Test,Logic,Util,IO,UI,App,Network,Logging
332,better search,this pr is intended to work on the search capability.  it includes  and should include   there is an ongoing discussion of features at  -  concurrency bug as data structures are shared (boolean) -  documentation update (english) -  documentation update (german) -  disable/enable open in new window and global search only when a search has been executed previously -  why is  regex  search enabled by default? i would have expected it to be turned off as default. (i reset my preferences and started a vanilla jabref . -  remove debug output -  esc should leave the search and focus the currently selected entry -  i pressed  ctrl+f  multiple times. the view changed (behavior due to old jabref behavior  i would like to have that removed).  -  further  i cannot switch back from  filter  to  float . have to restart jabref. steps:  float  is activated. search for a string where you can see the floated area. switch to  filter . ok. switch back to  float : nothing happens. after a restart  float works as usual. -  preview is broken in combination with the new search. when switching from  float  to  fitler  and back: the preview panel constantly updates and the empty area above the entry grows and grows. however  this is a separate issue. --> fixed as this was a larger concurrency issue as a lot of code was not executed on the swing edt -  search is not aware of currently active groups. hence  the displayed search results (found x matches) may be strange to the user when no entries are shown at all. -  when the advanced search is active  the search icon on the left is marked red.  -  critical focus is lost from the search window sometimes as the entry editor can grab the focus in some cases. fixed by removing the set focus upon changing the entry editor tab.,Util,UI,App,IO,Logging,Logic,i18n
335,clean-up of stringutil and some added tests,replaced/removed/unified some methods in stringutil and added some tests in stringutiltest.,Interpreter,App,UI,Util,Logging,DB,IO,Test
336,inlined abbreviation button from journalabbreviationbutton to entryed…,moved the method generating the journal abbreviation button and inlined it in entryeditor.  i changed (and corrected) the translations strings and while i agree that the append-approach is not preferred there was a reason: if any of the menu items   options  and  manage journal abbreviations   are translated  but the tool tip is not  it will still give the correct information. the reason for not using %0 etc is that anything after the first string to be inserted is not translatable.,Util,IO,DB,Test
340,java8 + sidepane,java 8 conversion and removal of unused methods in sidepanemanager and sidepanecomponent.,UI,Util,App
342,added tests for most methods in stringutils,the ones that remain are: -  getpart - not really clear to me how it works -  findencodingsforstring - unused  but seems quite useful (e.g. we could possibly suggest an encoding when trying to save with a bad encoding)  related change in this pr: - change in filelisttablemodel  which basically reimplemented stringutil.encodestringarray,Test,Util,IO
343,replaced deprecated glazedlists-api with current,i replaced the deprecated calls to the glazedlists-api with the current versions. the major difference is that the new ones are not thread-safe and as such in most placed i ve used the suggested factory method to obtained a wrapped list/model.  this seems to work  but may require a bit more testing/thinking. especially to figure out if the wrapping may not be needed in all places and if there actually should be wrapping where there currently isn t.  a better option would be to explicitly lock and unlock the tables  but that require much more work.,UI,Logging,Util,Interpreter,App,IO
351,show folder info on tab if file names are identical,- tab shows the minimal unique folder name substring if multiple database files share the same name,App,Logging,UI,Test,Util,IO
354,medline plain importer test,fixed indexoutofbounds for medlineplainimporter when testfile has lines with too few characters. removed unreachable code. created 100% testcoverage for medlineplainimporter.,Util,IO,Network,App,Interpreter,Test
356,test for inspecimporter,completed code coverage and discovered a bug in bibtexentrytype (bibtetentrytype.gettype() all_types.get() returns null),App,IO,Util
359,add test for bibtex key generation and refactoring,verify that special latex characters in author names are handled correctly in bibtex key generation (from [sf bug 1186](  small code cleanup ( makelabel  now returns voids since it updates the entry instead of returning a updated one),Logging,Interpreter,App,IO,UI,Util
361,fix bug: encoding was not read from comment,the encoding was not correctly inferred from the first/second line of the file  i.e. from      % encoding: encoding      this bug is covered in the tests by changing the default encoding to something different from the encoding in the test files. fixed this bug by completely rewriting  checkforencoding .,App,IO,DB,Util,Logging
370,add compatibility check for utf8,this pr attempts to 367  we have a bit of a problem.  utf8  came from these lines      java         try (inputstreamreader reader = openfile(filetoopen  suppliedencoding  fallbackencoding)) {             bibtexparser bp = new bibtexparser(reader)               parserresult pr = bp.parse()              pr.setencoding(reader.getencoding())       it is set in [this method call]( that s the java api. the  inputstreamreader  says that the proper name of the encoding is  utf8 .   my solution is an ugly compatibility hack in which we just insert the  -  manually. ugly  but works what do you think?,App,IO,Logging,Util,DB
373,extracted logic out of filehistory,separated filehistory into filehistorymenu which contains the menu functions and filehistory which contains the logic for the file history.,Util,IO
374,better support for ieeetranbstctl entries,added better support for the specific fields in ieeetranbstctl. especially  a new extra field  yesno  was introduced to simplify the setting of some of the fields.,App,Logging,UI,Util,IO,Interpreter
375,integrated key word handling in bibtexentry,moved the key word handling to bibtexentry.  added new methods addkeyword and addkeywords to simply add one or more keywords. will be useful when merging key words later on.,UI,App
377,removed some random unused stuff,removed unused variables  methods  and classes that i happened to stumble upon.,UI,Util,IO,App,Logging
378,integrate gvk plugin,this integrates the [gvk plugin]( into jabref.  location of the original source code at http://jabref.tempelb.de/,App
379,add tests for the bibtex parser,i added a few tests for the bibtex parser. i appreciate your feedback about the following points. -  please have a look at the  todo  comments. these concern string concatenation and  @string  fields. for example in  parserecognizesdatefieldwithconcatenation  the field  date = {1-4~} # nov  is parsed as  1-4~#nov# . i wouldn t have expect the last sharp symbol. -  tests about jabref s metadata (groups etc.) are still missing. mostly  because i don t know the specifications :). maybe in a new pr. -  related to the previous point  the  guiglobals.meta_flag  flags should be moved to another place (they are not gui  but parser/writer logic). what would be an appropriate new home for them? -  there are 4 tests at the end of the file starting with  test . these tests fail (without the  @ignore  tag) but i m not sure what they test and what would be the expected behavior in these cases. -  there are quite a few ignored tests. these are related to open bugs in sf or are new bugs which i found while writing the tests (nothing big). i will open a new issue for the new bugs after this pr is merged.  for the record: while going through the code  i also changed the following things: - remove  bibtexparser.isrecognizedformat  since the code has quite a few shortcomings (whitespace before @ or closing brackets on new lines were a problem) and the execution was quite slow for big files - fixed a bug where loading a file with corrupted bibtex entries showed an exception  cf.  parseignoresandwarnsaboutcorruptedentry()  - made  entrytype  an abstract class which implements the  comparable  interface and overwrites  equals(object other) . thus new expressions like  entry.gettype() == bibtexentrytypes.article  return the expected result.,Logging,UI,Network,Interpreter,Test,Util,App,IO,Security
380,added month selection to entryeditor,added a button for the month field such that one can select a month and get the correct bibtex string for that month.  ideally there should probably be localized month names in the list  but i didn t manage to find a way to do that which still keeps the entry model independent  avoids hard coding the month names again and make sure that synclang can find the strings.,Util,IO,Logging,Interpreter,App,UI
381,change default preferences: remote server is started,i think  the new default makes sense as jabref sometimes opens twice which is a bit annoying for me.  before resetting the preference every now and then  i had the remote server activated for a few months and it worked fine.,Util,UI,Network,App,Logging,IO
394,add toolbar icon for deleting an entry  and move menu item for this a…,…ction to bibtex  fixes   open for review.,Interpreter,UI,Util,App,IO,Logging,Network
396,change representation of encodings to charset,instead of representing an encoding as a string we now use a charset. this idea was already discussed in pr #370.,Search,Security,Logic,UI,Logging,Test,App,Network,DB,Util,IO,Interpreter
401,fixed some issues reported by coverity,and cleaned up some disabled code in importinspectiondialog.,Logging,App,IO,Network,UI,Util,Search
403,force to have at least english localization,what has been done: -  cleanup python script -  localization keys no longer contain trailing/leading spaces and newlines. tests are in place to ensure that this will never happen again.  -  localization keys do not use %e and %c for = or : anymore -  unit test find all usages of of localization.lang and localization.menutitle. hence  the workaround to disable the formatter is no longer required. -  if the unit test fails  on the console the appropriate measures are printed how to add the keys.  -  fixed a lot of other issues as well  e.g.  when the exception message was part of the localization key.  -  that all non-english property files have the same keys as the english property file is checked by the unit test. however  there is also gradle task/python script for this. -  unit test that checks that every english translation is equal to the key.  - postpone  <br>  is similar to  \n   but for this we do not have checks yet as well. - postpone rename  localization.lang  to  localization.message  -  the keybindings use  localization.lang  directly. -  refactored code of keybinding -  update documentation -  if any resource bundle is not available or if the given locale is not known or if the resource bundles have not bin initialized  always use  en  language.   this is good for a review. the remaining points i would like to ignore as this is really annoying work  and this should be good enough with this pr already.   new process: 1. add new localization.lang( key ) to java file. 2. tests fail. in the test output a snippet is generated which must be added to the english translation file. there is also a snippet generated for the non-english files  but this is irrelevant. 3. add snippet to english translation file 4. with  gradlew -b localization.gradle compareandupdatetranslationswithenglishtranslation  the  key  is added to the other translation files as well.  5. tests are green again.,Logging,Util,Test
418,proxy authentication support (feature #388),this pull request enables support for proxy authentication via command line arguments ( -d.. ) and jabref preferences (network tab).,UI,Network,Util,App
422,move edit mode switch to file tab,to make it more prominent and a file based thing in the future #167,Logging,UI,IO,Util,App
429,fix similar bug as #420 for the database properties dialog,a similar bug as #420 happened when the encoding was changed in the database properties dialog. this is now fixed in this pr.   sorry for introducing these bugs in the first place.,IO,UI,App
440,cleanup tests and latexformatter,instead of #427 (easier to start all over as some files were already moved).,Util,Test,App,Logging
441,cleanups  warning removals  move and test.,some cleanups and warning removals. should get rid of six high impact coverity issues (i hope).,Logging
449,tests for comparators,was the original idea  but after simon informed me about findbugs  a number of issues were sorted out. still a few more tests are added.,App,Test
452,revise maintable,complete check and rewrite of maintable and related classes  this will fix and implement: -  #315  -  #384 - show tooltip for header columns -  #384 - show tooltip for contents which are too long for table columns -  #443  -  #445  -  add ability to drag and drop specialfield columns - ~~ allow storing position of specialfield columns~~ postponed to another pr -  remove table column for  pdf/ps  which is obsolete (498) -  remove option  show one letter heading for icon columns  which is now obsolete -  changed default order in main table: # | all file based icons (file  url/doi  ) | all bibtex field based icons (bibtexkey  entrytype  author  title  ) | all special field icons - ~~ #490~~ postponed - ~~ think about  must be implemented  vernünftig (matthias)   entry table -> fit table horizontally ....   from the minutes~~ postponed -  final cleanup + changelog,App,UI
456,default time stamps follows iso-8601,default time stamps follows iso-8601. reason:   i am not aware of side effects at the currentdate formatter.,App,Util
459,use default directory when adding files to an entry,see #458. - the current implementation is hard to understand. i don t get how these three existing folder preferences are used.  - also  the method itself should be simplified and return a list,Logging,UI,IO,Network,Util,App
464,refactor code from cleanup action to separate classes,i removed all the functionality from  cleanupaction  to separate classes. the next step would be to add tests.next pr :),IO,UI,App,Logging,Network,Util,Interpreter,Logic
468,improved duplicate checker,i changed the core function of the duplicate checker from correlation to approximate string matching. this enables the test to work (which earlier failed as  bob  and  joyce  was deemed as close enough to indicate a duplicate). probably some of the constants used for comparison needs to be tuned. also  as the approximate string matching is based on edit distance (the number of edits required to turn one string into the other)  it might be that one may operate the complete comparison on the full string rather than the word by word style as currently is used.  i think this is good to go (in the sense that it probably performs better than the previous)  but please check it with a few different databases to make sure that the false positives or missing hits are to frequent.,Util,App,Test,Logging
472,show author/editor and journal/publisher in the main table by default,implements #470.,App,Network,IO,Logging,Util,UI
474,refactor autocompleter code,main change is that the preferences are moved to a separate class  autocompletepreferences . i also added or reworked some comments.  the tests for autocompleter should be reworked. next pr,UI,Test,Util,Network,IO,App,Logging
475,fix that the cleanup process aborts if linked file does not exists,the cleanup process sometimes wasn t successful and reported a  null  reference. the reason was that a registered file wasn t available. this is fixed in this pr.  moreover  if an exception is thrown in actions then a more detailed error message is displayed including the stack trace.,Logging,App,Util,IO
478,delete jstorimporter  edit changelog,jstor is exporting bibtex and has no own format anymore.,IO,Util,App
484,error console and debugging,changed the order of the error console tabs.  add cli switch  --debug  which enables logging of debug messages (shown as  fine ).,Util,App,Logging,Interpreter
485,removed csaimporter from the import formats. the csa import format,refers to the cambridge science abstract format which could be obtained on their website csa.com. however the website has been merged with proquest.com and now the there is no export into the csa format available. therefore we came to the conclusion to remove the support for the csa import format. for more information see also: http://sourceforge.net/p/jabref/mailman/jabref-users/thread/2e36af04-a83f-44ff-8160-b62ef48b6faa%40gmail.com/#msg34662091,Util,IO,App
486,add autocomplete tests,- add mockito test framework: it felt really easy to write tests changing properties with mockito. see for example  namefieldautocompletertest   where the preference changes are just a one line thing. this however only works if the dependencies can be easily injected into the class.  - add a few tests to the autocompleter framework. fixed some nullpointexceptions which i found. - fixed the bug that short keys and names were not completed  tests:  bibtexkeyautocompletertest.completeshortkeyreturnskey  and  namefieldautocompletertest.completeshortnamereturnsname,Util,App,Test
488,ieeexplore fetcher downloads the raw bibtex records from ieeexplore,summary of changes - moved away from the freesearchresult.jsp script for older browsers (notice on the ieee suggests support for this will be dropped in jan 2016)  instead use the  search  script and post method - results are returned in json format and the article numbers are obtained directly  html parsing has been removed - the article numbers are used to construct a second query for the raw bibtex records  which now captures all fields available from the ieee - the bibtex entries are still passed to the existing cleanup() routine to improve the formatting consistency - cleaned up unsued code as a result of the changes (removed html parsing code) - added a method to util for performing  post,Util,App,Logging,Interpreter,Network,UI,Logic,IO
491,add close all/others/ in database tab menu,see #314,App,UI,IO,Logging,Util
500,database type detection,please see  bibdatabasetypedetection.java for review.  some refactoring and a class for auto-detection of database types. ### algorithm - should we introduce a hard-coded field like encodings inside the bib file? - fast-enough? - what about false detection? ### refactoring - bibtexdatabase -> bibdatabase - bibtexentry -> bibentry  also see #495  #167,Security,IO,Util,UI,Logic,Test,i18n,Interpreter,Search,App,Logging,Network
502,unused code,removes unused code. rationales are given for each removal in commit message.,Interpreter,Util,UI,App
507,gui testing,adds the ability to do gui tests automatically.   with just 80 lines of testing code  i was able to raise the code coverage by 15%. and i detected two nullpointerexceptions (still to be fixed) plus three places where swing classes were interacted with outside of the edt.   this change allows to model bug reports as test cases on a gui level.   what has been done -  tests fail when an uncaught exception occurs on the edt -  raise test coverageby 15% -  gui tests run on circleci -  fix language to english for all (gui) tests -  somehow only run the tests on circleci? -  maybe use headless mode @matthiasgeiger - not possible with the used api -  make it work with gradle sync in intellij so that one can edit the tests and run them from within the ide -  make tests work on travis-ci -  enable tests on circle-ci as well,IO,Test,Logging,UI,i18n,Util,App
508,msbibimportertest,the part  that is commented       java          //         nodelist rootlst = docin.getelementsbytagname( b:sources )          //          if(rootlst.getlength()==0)         //              rootlst = docin.getelementsbytagname( sources )          //          if(rootlst.getlength()==0)         //              return false          // system.out.println(docin.getdocumentelement().gettagname())       is covered with the part       java if ((docin != null) && !docin.getdocumentelement().gettagname().contains( sources )) {             return false          }      because in the commented part  you check  wether there is an element  b:sources . if not  then you check wether there is an element with sources. when you check wether there is an element which contains  sources   you have both in one. also if there stands something before or after  sources   then you go in the if part despite of what stands before or after  sources .   so we deleted the commented part.,IO,Test,App,Network,Util
515,bibteximporter test,added tests for bibteximporter  depends on pr #514 (missing gradle test encoding  special char  ß ),Test,App,Util,IO,Network
519,fixed all fields set to null,as entry.setfield() does not accept a null argument anymore  the method entry.clearfield() is used instead.,App,UI,Util
530,fixed #526,now the openoffice/libreoffice should work again on linux (and on osx).,i18n,Logic,App,Util,IO,Logging
531,import format reader fix,the problem is  that the stream can not be resetted without a bufferedinputstream.  however this is necessary since we check if a import file is in the right format with looking into the stream and searching for specific patterns.  result of the above mentioned issue is that i always got an error message saying  no entries found  when trying to import a file with a valid format and entries.   this fixes the issue without changing any method interfaces.,IO,App,Util
536,changes to parserresult warnings,some restructuring of the parserresult warnings code. introduced a new class that is used in a number of other classes to do the same thing.,Util,App
547,medlineimportertest,new pr started because the old one was on a wrong branch.  medlineimportest + testfile added  couldn t cover two exceptions in importentries.,App,IO,Test,Util,Interpreter
553,scifinder importer test deleted,scifinder importer is deleted. we could not get any example file to test the importer. the website www.cas.org needs login credentials  which we do not have. even after asking the users on the sourceforge mailing list for a scifinder resource file  we could not get any information on how the scifinder files should look like. it seems the scifinder importer is redundant.,Util,IO,App
554,biomailimport format deleted.,deleted biomailimporter class since the website (biomail.org) does no longer correspond to the biomail format. for further information see: http://sourceforge.net/p/jabref/mailman/message/34696703/,Util,IO,App
560,write all field keys in lower case,write all field keys in lower case. no more camel casing of field names. e.g.   title  is written instead of  title    howpublished  instead of  howpublished   and  doi  instead of  doi . the configuration option  use camel case for field names (e.g.   howpublished  instead of  howpublished )  is gone.  refs #116,Network,IO,Test,Util,Interpreter,Logging,UI,App
566,remove alternative display name since it is never set,i think  we don t need alternative display names. this will surely confuse users.,UI,App
567,implements #565: highlighting matches works now also for regular expr…,…essions in preview panel and entry editor,App,Logic,IO,Logging,Util,Test,Interpreter,UI,i18n
568,fixed #564: cite command changes are immediately reflected in the pus…,…h-to-application actions  and not only after restart,Util,Logging,App,IO,UI
569,remove field saving options,as decided in #116 all field saving options should be removed.  this pr purges the options from the gui and cleans up related reader and formatter classes. this simplification greatly reduces the complexity of  bibentrywriter .,Util,App,Test,IO
572,refactor cleanup code,this pr (again) refactors the cleanup department. the motivation was to extract as much logic as possible from the cleanup action to make it easier to use cleanup operations also at different points (like on save).  biggest changes: - move preferences controlling the cleanup process to own data class  cleanuppreset  and the execution of the cleanup process to  cleanupworker . thus starting a cleanup process is reduced to setting up a proper preset and passing it to the worker. - move code displaying and changing a preset to a separate class. hence it is now easy to show and change a preset at a different place (like in the preferences).  - move preferences code to  jabrefpreferences . well  this is the place where it belongs. - add tests for the  cleanupworker . more detailed tests of the different cleanup processes are still missing.  todo s/breaking changes: these are all related to the fact that there is no nice interface to get/set the file field of an entry (all the code is in the gui class filelisttablemodel). - the counting of unsuccessful renames does not work anymore (i vote for removing this completely) - remove cleanuputil and incorperate the code in the respective cleanup classes. currently this code relies on gui code (filelisttablemodel) and thus cannot easily be moved to logic. - test the file related cleanups.,Network,Logging,Test,IO,App,UI,Util
575,fix sf bug 482 partly: escaped brackets are now properly parsed,field values as  escaped \{ bracket  are now parsed properly by the bibtexparser. however  there is still a warning about non-matching brackets if the same string is entered directly in the review panel.,IO,Network,Util,Logging,App,Test
577,made better use of getfileextension and added tests,- found code that extracts the extension from a file or a file name and used the already existing method for that - added tests for that method,Util,Logging,UI,Interpreter,Test,IO,Network,App,Logic
580,used a scrollable text area for parser warnings,now  all warnings when opening a file is shown in a scrollable text area instead of as plain warning text (with all the consequences  try opening a file with ~1000 items without keys).,App,Util
581,small fixes,was the original purpose at least. - code improvements - removal of unused variables and in some case propagation of constants to avoid having these as parameters,App,Interpreter,UI,Util,Logging,Security,Network,IO
582,some more random fixes,mainly triggered by findbugs.,Util,App
585,some cleanups in maintable and related files,more pmd-motivated cleaning.,IO,Logging,Util,Interpreter,UI,App
594,solved #593 and cleaned up the oo-code a bit,hopefully solved #593.  try it out at   (also cleaned up the code a bit based on pmd. the actual fix is on lines 76-90 in ooutil.java.),Logging,UI,Logic,IO,App,i18n,Util,Network
595,fixed #545 - acm fetcher works again,fixed #545 and some pmd cleanup.,Network,App,Util,Search
596,replaced explicit strings with constants for all(?) remaining prefere…,…nces,UI,Network,Logging,Interpreter,Util,App,IO
597,reverted a fix that lead to new coverity warnings and more pmd cleanups,sometimes comparing objects with  ==  and  !=  is better than  equals,UI,Util,Interpreter,App,Network,IO,Logging
601,fixes and cleanup for openoffice,revert a minor error introduced in earlier fix.  further cleanup  primarily getting rid of duplicated code and some coverity warnings.,Util,i18n,Logic,UI,App,Logging,IO
603,removed coverity warning in bst and cleaned up all files there,fixed all but one of the possible\* coverity warnings for the bst package.  also a pmd cleanup of all those files. please see github-comments in vm.java and see if you agree with me (the checks pass). - the warnings for the automatically generated files seems more challenging.,App,Logging,Util,Test,Logic,IO
605,change entrytype to string in bibentry,this pr tries to resolve the issues discussed in #337 and #495.  right now the entry type is converted from a string representation (in the bibtex file) to an entrytype by the parser. the problem with this approach is that the parser has to know about the bibtex vs biblatex mode. the idea was to just store the string in the bibentry and only get the corresponding entrytype whenever it is really necessary.,App,IO,Test,Interpreter,Util,Network,UI,Logging
606,logic cleanup,the cleanup continues,UI,Logic,IO,Network,Logging,Util,Test,App,Interpreter
641,refactor journal abbreviations and rewrite tests,injecting the preferences via the constructor and thus making it easy to the class via mockito.,APM,Test,Interpreter,i18n,Network,UI,Util,IO,Logic,Logging,App
643,fix failure of some tests due to non initialized preferences,these tests were failing locally for me (but apparently not on the ci server).,Util,Test,IO,App
648,partly implemented #647,added the possibility to copy the preview panel text. not exactly what is requested in #647  but probably quite useful.  note that the key binding is not working (nor is the print preview key working) so i ll open an issue for that.,App,UI,IO,Util,Logging
652,replaced getstringarray and putstringarray with getstringlist and putstringlist in preferences,also fixed an npe in the xmp metadata preference tab.,Logging,UI,IO,Test,Util,Interpreter,Network,App
658,refactor proxy registration and preferences,moves code from  jabref  to own class and introduces new class encapsulating the proxy preferences.,Logging,UI,Util,IO,Network,App
660,add test for parsing accents,i tried to replicate the problems of #650 but in the progress realized that the problem lied in the bib file provided there and not in the parser.  so the added test is rather useless but i figured it does not hurt to have more tests :),Network,App,Util,Test,IO
677,make bibtex parser more robust against missing newlines,as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.   % encoding: myencoding @article{} . actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  i don t view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  also fix a bug that prevented the import of bibtex entries having only a key as its content.,Logging,DB,App,Util,IO
683,remove url sanitizer as it is malfunctioning and unclear where needed…,also see #667.  @jabref/developers if someone knows a use case where this is needed and why we can try to reimplement it properly. but this way it really makes no sense imho.,Network,Util,App,Logging,IO,Test
690,simplify matching complexity of unlinked file finder,reenables functionality #410   important point: - removed one file.exists check in fileutil.java expandpath   i think one check after replacing / and \ is enough  without checking the expanded path with directory in front. - cache is filled at initial creation for bibdatabase  therefore no checks against the whole database  for each file entry - parse logic for file field should moved from the filelisttablemodel to filefield.java.  we could still improve quite a lot here but maybe its good enough :tm: for now.,IO,Util,App,Logging
691,cleanup in aux import,cleanup and warning removal.,UI,Interpreter,App,IO
693,cleanup in logic.mods and logic.msbib,additional change: added method  hasfield  to  bibentry .,Interpreter,Network,Search,Util,IO,Logic,Logging,UI,App
695,more use of getfieldoptional,intermediate result as i m changing computer,Interpreter,IO,App,Util,UI
699,cleanup in gui,lots of minor cleanup in gui.,Logging,Logic,App,Util,UI,IO,i18n,Interpreter,Network
703,remove session functionality,open tabs are saved by default. could be extended to workspace functionality later on but should be removed for now as it provides no benefits at the moment.,IO,App,Util,Logging,UI
708,replaced string.replaceall with string.replace when no regexp is used,better to use  replace than  replaceall  as the latter compiles a regular expression.,Network,IO,Util,Logging,Search,App,UI
711,remove global sorting functionality,refs #520   global file sorting options are removed. sort functionality is still available but no localized to every file and the file sorting options are stored in the file.,IO,App,Network,Test,Logging,Util,UI
715,file based bibtex mode,see #706  changes - file based setting of bibtex/biblatex mode which is stored as a metadata in the .bib file - if no metadata is found  jabref tries to detect the mode by checking if there are biblatex entry types which results in biblatex mode  and otherwise in bibtex mode (except one has set the biblatex mode setting in the global preferences  in that case it would use the biblatex mode) - ui changes completely  no restart necessary  please provide feedback.,Test,Network,UI,Logging,App,i18n,Logic,Interpreter,IO,Util
716,introduce save actions,this pr introduces the save actions feature described in #116   it is possible to configure a  net.sf.jabref.logic.formatter.formatter  to be applied for the content of a specific field. all formatters in  net.sf.jabref.logic.formatter  are available.   to support file sharing  the save actions are configured in the meta data of a file as a comment  in the following syntax:      @comment{jabref-meta: saveactions:title lowercasechanger }      this above save action applies the lowercasechanger for the content of every title field on save.  in the future  we need to enable the configuration of save actions via the ui in the database properties.,IO,Network,Util,Test,App
718,improve database writer,the aim of this pr is to improve the database writer  in particular 621 and #669.  also add tests to the writer and parser (and do some refactorings to make test writing easier).  changes (to serialization): - 621 and #669 by adding new lines after encoding and preamble. the idea is that everything is terminated by a new line and the parsed serialization only safes newlines which separate it from the previous entry.  - comments and preamble are serialized with capitalized first letter  i.e.  @comment  instead of  @comment  and  @preamble  instead of  @preamble . this should follow the convention for entries. - there is no space anymore between  @string  and the bracket and after the bracket  i.e.  @string{name = {string}}  instead of  @string { name = {string} }  - implemented 756]( add possibility to reformat all entries on save (under preferences  file)  refactorings: - renamed fileactions to bibdatabasewriter - merged code for export and save in bibdatabasewriter - extracted savesettings class from fileactions to own file and extended it (& renamed to savepreferences). note that this class has some setters (against the recently established convention for preference classes) since there are quite a few cases where the values from the preferences have to be overriden.  - change usage of arrays to list in many places - remove unused boolean parameters checksearch  checkgroup - moved writing of metadata and customentrytypesmanager to bibdatabasewriter - extracted and reused gui code for displaying and editing sort preferences (saveorderconfigdisplay),Util,Logging,IO,UI,App
722,osx improvements,integrated osx compatible toolbar,App,Util,IO,UI,Logic,Interpreter,i18n,Logging
727,get rid of some warnings (and therefore possible issues),by accident some automatic reformatting of the code,Util,Interpreter,App,Security,IO,Logging,UI,Logic,Network,i18n
728,remove pdf preview functionality,i suggest to remove the pdf preview functionality in the preview panel  why? - the preview is not working all the time - the preview is too small to provide valuable information - opening the linked pdf via a simple click on the pdf icon is way faster and more convenient  @jabref/developers wdyt?,App,UI,Network,IO,Util,Logging
729,more cleanup and warning removals,not really required to have the resultset in the try-with  but to get rid of eclipse warnings,Util,IO,UI,Logging,App,Interpreter
732,tests of two layout formatters,two more tests (took a while to understand authors  so incomplete but at least something).  i will merge as soon that i see the coverage and it is not to bad.,Test,App,Util
733,improved menu structure,![new menu](https://cloud.ent.com/assets/375693/12645272/3db1662a-c5c9-11e5-92f6-55b64f0515b2.png),Logging,App,UI,Util,IO
739,use urldownload instead of getresults for fetching stuff,relates to #738   fixed some things in gvkparser to hopefully get rid of the final coverity warnings there.,Interpreter,Logging,Logic,Util,Test,Security,Network,App,IO
744,move edit custom entry types to bibtex menu as it is directly bibtex-related,@jabref/developers wdyt?,App,IO,UI,Util,Logging
747,cleanup,more cleanups and logging.,Logging,Interpreter,Util,IO,Network,App
748,added method getbasepanellist() and used it,seemed like a convenient method considering how often it was used.,i18n,Logic,App,UI,Logging,Util,IO
752,fixed #751,this should 751. should be merged in without waiting for confirmation.,App,Util
753,sorting out exceptions in openoffice connection,fixed a number of warnings  primarily related to catching general exceptions in openoffice connection. not all are removed  but many are more fine tuned. also  all(?) printstacktrace are removed from there.  it also tuned out that some methods didn t even throw exceptions (based on documentation) although there were catch blocks.,App,Logging,Util,IO
755,fix npe at saving does not reset save flag #741,741 (and a lot of other null pointer exceptions). gettype and getstandardtype now return an optional instead of possible null values.,Network,App,Util,IO,Test,Logging,UI,Interpreter
758,made all static regex patterns private static final fields,should not be worse than the previous solution,Test,IO,Logic,i18n,Search,Interpreter,Logging,UI,App,Network,Util
760,code improvements,some refactoring  an odd bug  and some cleanups.,UI,Util,Test,Logging,IO,App
765,removed unused group submenu from rightclickmenu,all code is now gone (and the move to group menu item follows the same logic as the add to and remove from group).,Interpreter,UI,App
784,more openoffice fixes,- extracted strings - more detailed exception handling - simplified/improved code  note that there s a new file and one removed  but here it looks like it is edited and renamed,Logging,Logic,App,IO,Util,i18n
787,fixed some warnings,the most important consequences: - the entry count when synchronizing file links is correct again (and the database is marked as modified). - the correct (i.e. current) encoding is hard coded for acm  ads and inspire fetchers.,Logging,Util,UI,Interpreter,App,Network,IO,Search
793,more list<bibentry> instead of bibentry,instead of #762.,Interpreter,Util,UI,i18n,App,Logic,Logging,IO
797,some more use of java 8 features,streams are awesome!,Test,App,Util,Logging,Network,Interpreter,UI,IO
799,better preference for default file-based mode,see #789. - description rewritten to say  default tex mode . - dropdown for bibtex & biblatex - moved to general tab - decided to keep old boolean preference to avoid preference migration for now  (  @jabref/developers wdyt?,IO,App,UI
806,some refactoring,moved some files to better places.  long term goal is to use the huge html <-> unicode <-> latex conversion list is applicable formatters.,Network,Logging,Util,App,Test
808,added simple tests for html and unicode converters and added handling…,… of combining accents for unicode to latex,DevOps,Test,App
813,some minor duplicate removal,and some logging.,Logging,Util,Interpreter,App,Network
827,added test for auxsubgenerator,added a basic test for the auxsubgenerator.,App,Interpreter,UI,IO
828,mimetypedetector improvements,see #824. - added a  stubbing library - added a redirection test - added a mime type variation test - changed detection implementation to   looks like it works,Interpreter,App,UI,Util,Logic,i18n,Search,DB,Test,Network,Logging,IO,Parser
830,added ordinal formatter,motivated by http://tex.stackexchange.com/questions/292491/numerals-to-ordinals-in-jabref-jstyle-layout-file,App,Util,Test
832,warning removals and fixed an issue with pushing citations to openoffice,removed some coverity warnings and fixed an issue in openoffice (and possibly elsewhere) where getselectedrows() did not return a copy of the bibentries (i introduced that when changing arrays to lists)  and  hence  some entries was deselected and never pushed.  another old major issue in openoffice was also solved  which relates to crossrefs and strings. not sure if it was ever triggered  but there was one fundamentally wrong access to a map.,IO,Logic,App,Util,i18n,UI,Logging
841,improved conversion from latex to html/unicode,now the huge list of conversion symbols is used when converting from latex to html and unicode. i also added a field right-click menu item to convert from latex to unicode. this sort of works except that it doesn t handle text within $$ in a good way (remove the $$ and the symbol conversion works).  the huge diff is caused by reformatting the huge list  as the newly added entries was aligned differently compared to earlier on saving,App,Util,IO,Test
842,fixed #492: all text is copied if nothing is marked and preview of pa…,fixed #492  when nothing is selected the whole field is copied. if the field is empty  the right click copy item is disabled.  preview of text to be pasted in tool tip. now maximum 20 characters. should it be longer?,App,Interpreter,Util,IO,Test
847,refactor group package,the main aim of this pr is to separate the groups package in gui and logic parts. to accomplish this  the following changes were made: - all the ui related code from the grouptreenode class is moved to a new class grouptreenodeviewmodel  which functions as an adapter from grouptreenode to swing s treenode class. - add classes entriesgroupchange and movegroupchange which store the changes made to the group. the corresponing ui classes undoablechangeassignment and undoablemovegroup now work as converter to swing s abstractundoableedit. - add treenode class which is more a less a (typed) copy of swing s defaultmutabletreenode and which contains all the logic for traversing the group tree. - implement observer interface for changes in the group tree - some smaller refactorings like moving method from class a to b. - add tests for the logic classes grouptreenode and treenode  since this pr makes quite some changes and there are no tests in place  i wouldn t merge this pr if a new version should be released the next day :smiley: . all the usual functions should work though.  for some reason github shows some of the moved files as removed + added. locally  gitk shows a correct diff.,App,Util,Test,IO
848,code cleanups,yet another bunch of code cleanups. some logging  some use of high level methods  some refined exception catching.,App,Interpreter,IO,UI,Util,DB,Logging
849,even more cleanups,installed sonarlint  so more hints and warnings appear,Util,App,UI,Test,IO,Logic,Logging
853,add a few cleanup formatters,this pr adds the following formatters  which are suitable for the new save actions functionality #821: - trimformatter: trims whitespace (as suggested in  - removebracesformatter: removes enclosing braces (i.e.  {{test}}  ->  test ). partly implements [kooper #60]( this functionality was previously available under the option  remove double braces around bibtex fields when   loading  but was removed from the parser in c2928d2153301b3c5e90db468b53199bc8b1d521.  also add some tests for all formatters.,Test,Util,App,IO
858,tab for remaining fields,see #454.,Logging,Test,UI,Interpreter,Network,Util,Search,i18n,App,Security,Logic,IO
863,more integrity checks,adds more integrity checks: - detect abbreviations in journal field - detect abbreviations in booktitle field - detect wrong usage of proceedings entry type - detect broken file links -  ? -   -  ? -  ?,i18n,Network,IO,Logging,App,UI,Logic,Util,Search,Interpreter,Test
864,add dialog to show all preferences in their raw form plus some filtering,relates to #859. - adds a dialog which shows all preferences in a table by their type  key  value and default value.  - table can be sorted - table can be filtered to show only the preferences which deviate from their default value. this is the most helpful one - and it revealed various bugs when having a closer look. :) - count is shown as well - reachable through options -> preferences -> show preferences (button is below import/export preferences) - converts default values of null to empty string -  ? -   -  ?  -  ?,i18n,Logging,Interpreter,IO,UI,Test,Util,App,Logic
865,deleted code related to the pdf and ps fields,dropping the support for ps and pdf fields (which seems dropped already as hardcoding a pdf-field in a .bib-file doesn t even show up in the entry editor) seemed to remove quite a bit of code.,Interpreter,Logic,Network,App,IO,Util,Logging,UI,Test
866,more systematic hashcode and equals,changed hashcode (and equals) to be more consistent and per recommendations.,IO,Logging,Network,Util,App
868,refactored menus and small components,moved menu classes and small utility components to gui.menus and gui.util.component  respectively.  moved special copy command to  copy special  submenu of right-click menu (to make it shorter).,Interpreter,Test,UI,App,IO,Util
874,fixing openoffice citation with curly braces and manual connection browsing,-  ? -   -  ? -  ?  fixed #856: clicking on browse for manual openoffice does now work fixed #815: curly braces in oo/lo citation no longer ignored - code cleanup: replaced actionlistener with lamdbas  one point for discussion: defaultformbuilder (jgoodies) is deprecated. is there already a replacement for the creation? i found this thread:  @oscargus  @koppor,Logic,Interpreter,i18n,Logging,IO,App,UI,Util,Test
875,fix bug in parsing custom entry types,fix unreported bug which prevented the parsing of custom entry types. also move the custom entry type parsing logic to the parser. -  ? - no  the bug was not present in 3.2. -   -  ? -  ?,IO,Logging,App,Util
877,add ability to run arbitrary formatters as cleanup actions,add ability to run arbitrary formatters as cleanup actions by reusing save actions. thus some old cleanup entries could be removed. this also implements/295. moreover  an erase formatter is added which just deletes the corresponding field.  ![untitled](  code changes: - rename saveactions to fieldformattercleanups - some smaller refactorings to reuse saveactions (mainly to separate them from metadata)  : -  ? -   -  ? -  ?,App,UI
879,466: rename pdf cleanup now also changes case of file name,466. -  ? -   -  ? -  ?,App,IO,Util,Test,Logging
884,fixed #883,should solve #883. -  ? -   -  ? no  tests already passed  this is a gui issue. -  ? yes.,App,Util
886,cleanups of stringutil and authorlist,-  ? no visible changes -   -  ? no changes as such -  ?,Logging,Test,IO,App,Interpreter,Util
887,pass database to docleanup to enable resolving of crossref fields at renaming of files,this addresses   replaces  null  by the concrete database at  cleanworker .  no tests as #507 is not yet finished.,Util,App
899,fix bug in  find broken file links  integrity check: files relative to the bibfile are now found,suppose you have a linked file test.pdf in the same folder as the bib file. then  open linked file  finds the file. however the integrity check complained. this is fixed now.  solution was to replace fileutil.expandfilename(p.link  filedirectory) with fileutil.expandfilename(context.getmetadata()  p.link)  which is a bit smarter. -  ? (no  since the feature was not yet released) -   -  ? -  ?,Util,Logging,Test,IO,App
901,fixed some issues and added some tests,removed codacy warnings. added test for oobibstyle.getnumcitationmarker -  ? not relevant -   -  ? more tests added  no changes as such. -  ?,IO,Util,i18n,App,Logic,Logging,UI
903,fixed #890,this should 890  -  ? -   -  ? not relevant -  ?,Util,App,Test,IO,Logging
904,removed some switch warnings and restructured code,extracted methods from large switch  rewrote as switch and added default labels to switch. -   -  ?,App,IO,Logging,Util
905,made sure all importformat classes never return null  but collections…,….emptylist() instead - importformat.importentries now never return null (still not propagated to calling code) - all(?) importformat readers are handled with try-with - replaced stringbuffer with stringbuilder where possible - used interface where applicable -  ? not relevant -   -  ? not relevant -  ?,Util,UI,Logging,IO,App
907,more tests for oobibstyle,testing of a few more methods in oobibstyle.,IO,Util,Network,App,Test
910,fixes coverity issues  suppress serialization issues,-    used lambdas for actionlistener fixed resource leak in db exporter methods,Network,UI,Util,Test,App,IO,Logging
912,added missing localization strings,found a number of strings which should have been translated.,Search,Network,Logging,Util,Interpreter,UI,App
915,add button in preference dialog to reset preferences,implements #455 and/or  -  ? -   -  ? - only ui change -  ?,IO,Network,Logging,App,UI,Util
917,removed method entryutil.getremainder() and replaced with collection.…,…removeall(),Network,Logging,Interpreter,App,IO,Util,UI
918,cleanups,see commit messages,Logic,UI,Test,Network,Logging,IO,App,Interpreter,Util
925,add tests for metadata parsing,this solves #707 and prepares the way to refactor the metadata class.  i added a few methods to the metadata class to make testing more convenient. many calls to getdata() in fact can be replaced by these new methods. i think this is something for a new pr.  one question: to write the tests in a nice way i had to overwrite a few equals methods. in particular for the lowercasechanger. should i also override equals for all other formatters?,UI,Test,App,Logging,IO,Util,Network
926,key bindings are now working in preview panel,649. until now the toolbar within the preview panel held the key bindings which weren t active when the toolbar wasn t created. now the preview panel itself carries the key bindings. -  ? -   -  ? -  ?,IO,Util,Logging,UI,App
929,find unlinked files  freezes when using for pdf,1. fixed #410 reason was an illegalargumentexception thrown by doi class when pasting the contents of the whole first pdf page to the constructor. 2. the doi class can only handle real dois and does not extract strings that might look like a doi from the text  therefore the whole doi scraper was removed in  3. the whole pdfimporter class is screwed and a monkeypatch. it should be reimplemented from scratch.,Util,IO,App
930,fix 845,- better german translation of the menu items groups -> highlight groups  - add radio button functionality to the menu items groups -> highlight groups  which is mutually exclusive plus add a disable menu entry which was not explicit before - enable showing what is currently toggled in the menu as well (and not only in the toolbar),Util,App,IO,UI,Logging
931,open console feature,-  ? -   -  ? -  ?,Interpreter,Logging,UI,IO,Util,Network,App
933,test for encrypted pdf does not throw an exception,i don t know if this sufficies the requirements  but for me it does not throw the strange exception.,IO,Util,Test,App
944,removed  fetch  in title from database fetchers,-   -  ?  removed translation of fetcher names  because that are proper nouns. #941,Util,Network,Search,App
945,tweak pdfcontentimporter,this is a minor update on pdfcontentimporter  which fixes minor issues and enables a broader test.,IO,Util,Test,App
946,cleanup xmputil and pdfimporter,this is a minor cleanup on xmputil and pdfimporter to ease next development steps,Util,IO,Test,App,Network
947,fix for undoing deletion/cutting multiple entries,workaround for #796. when an undo with multiple entries is undone  each entry is undone one at a time. the problem herein lies  that when the first entry is undone  the insertion in the database triggers the creation and insertion of an namedcompund into the undomanager which kills the main undo (the one with the multiple entries)  which result in just one entry being undone.  with this workaround each entry has its own namedcompund which solves the problem but the user has to call the undoaction several times (ctrl-z for each entry). -  ? -   -  ? -  ?,Util,App
948,introduce  search %0  and  error while fetching from %0,instead of having separate strings for each fetcher  the placeholder  %0  is used now.  refs #941,Network,App,Util,Search
949,use processing %0  and  error while fetching from %0  in fetchers,-   -  ?   update of #948,Util,Search,App,Network
951,add test to metadata serialization,changes: -  @comment{groups}  is now in the right position (based on alphabetical order of metadata keys) - empty content selectors are no longer written  code changes: -  add tests for metadata serialization - move  the biggest part of metadataserialization to metadata class (probably not the final solution  just eased writing tests) - add a few methods which allow to change the metadata in a typed fashion - cleanup bibdatabasewriter tests ##  -  ? (not big enough for changelog entry) -   -  ?  -  ?,App,IO,UI,Logging,Util
956,make tabbedpane in mainframe private,triggered by #931.  - makes tabbedpane in mainframe private - set tab tooltips in consistent way (for example they should now also show up after the tab list is sorted) ##  -  ? not worth it -   -  ? well. -  ?,Logging,App,DB,Util,IO,UI
961,icon update to v1.5.54 + usage of regex and case sensitivity icon,i just updated to the new material design icons version 1.5.54 - which is the first version to use fixed code points - so from now on it should not be necessary to recreate the whole mapping from the css file on each font update.  moreover i added the icons for regex and case sensitivity to the the searchbar to reduce the space needed by the search bar (description of the icons is available as a tooltip): ![searchbar-old]( ![searchbar-new]( -  ? - not relevant -   -  ? - only ui affected -  ?,Logic,Network,UI,Interpreter,App,i18n,IO,Util,Logging
965,extract native functions to os package,-  ? -   -  ? -  ?,Util,App,Logging,UI,Network,IO
968,implemented about dialog in java fx,this is the first dialog in jabref being implemented in javafx. the dialog is highly flexible in positioning and styling its components through a fxml and corresponding css stylesheet. if javafx should be a part of jabref it is probabbly usefull to define a global stylesheet as well to become a consistent look and feel. to include javafx in jabref i had to adjust the starting and closing behaviour of jabref.  in order to run these commits  java 8_40 or newer is required! -  ? -   -  ? -  ?,Interpreter,Logging,UI,App,IO,Util
974,always trim fields on save and remove trimformatter,the consensus in #920 was that fields should always be written without leading or trailing whitespace. this is done in this pr and the trimformatter is removed. (by the way  empty fields are never written as one of the added tests shows)  -  ? -   -  ? -  ?,IO,Util,App,Test
979,refactored singlebibtexfield,based on the initial ideas in #978 the class singlebibtexfield is extracted and two enumsets are used for implementing the existing functionality.,Interpreter,IO,Util,Logging,App,UI
980,replaced bitset with enumset in ooutil,clearly enumset is superior.,Logic,IO,Util,Logging,i18n,App
981,no more printstacktrace(),the last printstacktrace() are replaced with loggers. (except one in a test.),Logging,Util,App,Interpreter
982,preserve bibtex import order,@obraliar  noted that the order of the bibentries in  parserresult.getdatabase().getentries  is not the same as in the bib file. as it turned out  fixing the order required to store the bibentries not as  map<id  bibentry>  but simply as a list. so i removed almost everything which is connected to id s. now they are only used for writing bibentries (to determine the original order) and for the sql export.  -  ? not relevant -   -  ? -  ?,Network,App,Test,Util,IO,Logging
983,some random cleanups (and probably a bug-fix),- removed unused imports - some code style fixes - most likely fixed a potential npe in savedatabaseaction (chosenfile will never be null here  but f might be and is later dereferenced),UI,Network,App,Logging,Test,IO,Search,Util
986,replaced replaceall with replace,replace is faster  so if no regular expression is needed it is better to use that.  there are a few more places where it can be replaced  but i got confused when it came to escaping,Test,Network,Logging,Search,Util,IO,App
988,when clicking on a tab  the first field now has the focus,-  ? -   -  ? -  ?  this is referes to #623  i just had to add the activatevisible() method to the changelistener to ensure the focus is set.,UI,App,Logging,Interpreter,IO,Util
996,fix entry deletion from database,991  a bug introduced in b3aee00bae8b589aa1252ef182f8b3293d06bd69.  while moving from  map  to  list  as the data structure for the stored  bibentries  is has been forgotten to adjust the  removeentry -method. -  ? -   -  ? -  ?,Security,App,UI,Logging,Test,IO,Interpreter,Network,Util
999,db properties layout and save order config changed,-  ? -   -  ?  957  and #958   fix height of the dialog and add spacing between ok/cancel button and  border changed jcomboxbox to editable and removed the unnecessary textfields added jcombobox for selecting the fields to apply the selected formatter to changed position of delete button removed indexoutofbound exception when no item is selected  edit// i just see this pr is #999  ),Test,i18n,UI,App
1002,increase default window size to show complete toolbar,is 1080px too wide as default?,Util,IO,UI,Network,App,Logging
1003,used optional for the getexternalfiletype-methods and fixed an issue …,better to avoid null assignments and null checks,App,IO,Logging,Util,UI
1006,reworked and checked the constants in guiglobals,there were a few unused constants in guiglobals and a few which shouldn t be there.,App,Util,IO,UI,Interpreter,Network,Logging
1007,fixed problem with whitespaces in file paths for tests,after i relocated my workspace  i notice some problems with white spaces in file paths. the whitespaces got encoded as %20 and failed on windows. problem was url.tofile()  paths.get(url.touri()).tofile()  is now the correct way to handle files from urls. see   -   -  ? -  ?,Test,Util,IO,Network,App
1008,used positionwindow for preambleeditor dialog size,now the preamble editor opens with the same size and position as last time. (plus that some unused preferences and guiglobals variables were removed.),Network,UI,Util,Interpreter,App,Logging,IO
1009,added enums,used enums instead of explicit ints for the mode of basepanel  how to render cells in maintable  and mode and result for duplicateresolverdialog.,Logging,Util,IO,UI,App,Interpreter
1010,added initial tests for exportformat,really trivial and early test  but could maybe avoid bugs like #1001 to happen (and form a foundation to extend on).,App,Test,IO,Util
1014,improved exception handling in tests cases,never catch an exception removed unnecessary exceptions throw specific exceptions  never only exception ref #1012  -   -  ? -  ?,App,UI,Util,Network,IO,Interpreter,Test,Logging
1016,added info about current font size when changing it using key bindings,shows the new font size in the status bar after changing it with increase/decrease table font size.,Logging,UI,IO,App,Util
1022,added highlighting of differences in merge entries dialogs and made s…,based on an issue i cannot find at the moment. - show all information in the merge entries fields - show the difference between fields  may not be the worlds most advanced formatting and diff algorithm but it works (it seems).  ![clipboard01]( -  ? -   -  ?,Util,App,UI
1025,added ieee pdf fetcher,pdfs can now be automatically downloaded from ieee xplore  given that you have ip-based access (if not  nothing should happen). -  ? -   -  ? -  ?,App,Test,Logging,Util,Search,Network,IO
1027,cleanups,fixed a number of issues pointed out in eclipse  codacy  and coverity. -   -  ?,Util,Interpreter,UI,Logging,Network,IO,Test,i18n,App
1028,addeventsystem,-  . -    -      and     -  changes described in changelog.md? -  ? -  ?,Security,Interpreter,IO,Logging,App,Util,Network,UI
1029,better main table rendering,the main table doesn t always look that nice with latex commands in it. this pr makes things much better.  potential drawback is rendering time  but i am not sure how much of a problem it actually is.  ![clipboard03](https://cloud.ent.com/assets/8114497/14004300/4a1a9146-f159-11e5-93c3-75f75a676231.jpg),App,UI
1032,extracted field updating methods out of util,moved methods related to updating fields and timestamp from util to logic. since namedcompounds were passed  the methods were changed to return fieldchange.  i am not convinced that the current naming/position of the new classes is optimal  so input is welcome. -   -  ?,UI,Test,App,Util
1036,replaced integers with enum,minor cleanup.,App,IO,Logging,Util
1039,added more testing to oobibstyle and fixed a few issues,more testing leading to more understanding and a few fixes. (and  no  the tests are maybe not the most elegant  but it was more a matter of figuring out how the code behaves in certain situations and try to trigger as many situations as possible).,Util,IO,Network,Logging,App,Test
1040,cleanups,fixed a number of issues  including: - removed unused imports - moved a class - provided get-methods for some fields in jabrefframe,Logging,Test,App,Util,IO,UI
1041,write database type in lower case into the bib file,this finally 963. a quick fix has been introduced in 661eea007e555  but that does not cover the lower case writing of the type.      @comment{jabref-meta: database_type:bibtex }      finally gets      @comment{jabref-meta: databasetype:bibtex }     -   -> this has been introduced in the development versions after the last release  thus no entry required -   -> tests have been adapted to match this new implementation,Util,IO,App,Test
1042,encoding fixes,fixed some issues with the encoding for files and resources. now the user defined journal abbreviation lists are always saved and loaded using the current default encoding from the preferences. ideally  it should be possible to specify the encoding (or maybe not needed?). similarly  oo style files are loaded with the default encoding.,Logging,Network,i18n,IO,Test,Interpreter,Util,Logic,App,UI
1045,move set/clear/rename fields to edit,move the function  set clear rename fields  to edit from search. since it is definitely an edit function and has nothing to do with searches. -   -   -   (),IO,Logging,App,Util,UI
1046,refactor authorlist,- refactor authorlist by extracting author class and move parsing logic to new authorlistparser - rename a few methods in authorlist - add a few tests taken from biber  (two of them actually fail  so maybe somebody with better understanding of the inner workings of authorlist may fix them) ##  -   -   -   (),Logging,IO,Util,Logic,Test,App
1047,refactoring of oo connection,i m restructuring the oo connection with the following goals: -  split the files between gui and logic -  change the style selection dialog so that it is easier to support many internal styles as well as adding/removing external styles  long term (probably not in this pr) -  improve the mechanism that searches for binaries and .jars  a question: should classes that accesses the oo-specific jars reside in gui or logic (assuming that they do not access gui or swing  so they could reside in logic from a test perspective)?,Interpreter,i18n,IO,App,Logging,Network,Logic,UI,Util
1048,fix npe on database load in specialfieldsync,will merge this in as soon as the build passes.  -   -   -   (),DB,Logging,App,IO,Util
1050,restructrued cleanup formatters dialog  #1038,reworked cleanup formatter dlg: -  description updates when and item is selected. also on startup. the field is now also multilane with auto resizing and word wrap. -  after deleting a selected item in the list  the next one (previous) is selected -  changed layout to be more consistent   renamings to be more precise and moving in new package. added tests. -   -   -   ()  ![cleanupentriesdialog](https://cloud.ent.com/assets/320228/14066003/1fa8ac48-f43f-11e5-9d5c-782a027ad581.png),App,Util,UI,IO
1052,move files,add cleanup procedure which moves linked files to the main file directory as specified in the database properties dialog.   further code cleanups: - add methods for accessing the linked files to typedbibentry - some renamings - introduce getter for fields in parsedfilefield - extract parsedfilefield to own class - some smaller code cleanups to cleanupworker  ##  -   -   -   (),IO,App,Util
1054,fix sorting of entries on save,fix sorting of entries on save (this shouldn t affect the sorting of export  so is unrelated to #1051). in the end it was just a wrong boolean in the preference. -   - no  i think the issue was introduced in this version -   - kind of  there is a test for the sorting now but it passed before any fix  no test added for the boolean in the preference -   (),App,IO
1061,minor cleanups and a bug fix,bugfix in freeciteimporter  some naming cleanups  primarily in globals  and some unused imports.,APM,Network,App,Logging,DB,IO,Util,UI,Interpreter
1064,1062 merge entry with doi information now also applies changes to entry type,<describe the changes you have made here:   > -   -   -   (),App
1066,changed preview font from arial to sans-serif family,questions on that?,Network,UI,App,Logging,IO,Util
1071,unified translations strings,removed: - 10 translations strings where a very similar one was already available - 3 unused keybindnings - 14 names which cannot be translated,App,Logic,i18n,Logging,IO,Util,UI
1072,doi field improvements,## **major changes of this pr** -  removed unused browse action -  remove double click action for url and doi fields -  add open and fetch from buttons for url and doi -  only activate button if field includes valid doi/url ## **new look**  (https://cloud.ent.com/assets/2141507/14265877/56a065f2-fac4-11e5-9ee2-d1cb0611e1df.png),UI,Interpreter,App
1075,fixed a few more things + more strings,fewer strings to translate. more swedish strings translated.,Util,UI,App,IO,Logging
1078,remove haswritten field in bibentrywriter,with the recent changes in the writter the  haswritten  field is no longer required.,Util,IO,App
1079,improded readability of some bibtex test strings,fixed encoding problem in test when running gradle check follow up from #1014   @tobiasdiez,IO,App,Util,Test,Network
1083,metadata cleanup,- move file handling from metadata to bibdatabasecontext which resulted in a lot of classes using the database context instead of the metadata - remove globals.prefs.databasefile ##  -   -   -   (),IO,Interpreter,Parser,Network,Security,Util,i18n,Logic,UI,Test,Logging,App
1084,translated more german strings,translated more german strings. maybe some of them can be improved  :smirk:  currently only 2 are missing  because i had not idea on how to translate them. i would need some context for that:      wrong_entry_type_as_proceedings_has_page_numbers= disable_highlight_groups_matching_entries=      @tobiasdiez  mabye you can give some context here for the group-thing: what does it exactly do/mean?  @domwass @matthiasgeiger you may want to look at my translations.,App,Util
1086,fixed some things related to localization,fixed a number of todos/fixmes.,UI,App,Util,Interpreter,Logging,IO,Network
1089,filelist field size now dependent on its content,672. the filelist (within the entryeditor) now automatically resizes its columns dependent on the length of its content.  ![java 2016-04-03 12-13-50-65]( -   -   -   (),Interpreter,UI,Logging,Util,IO,App
1093,fix open folder action in windows not working correctly,when direcory path contained whitespaces use path-class and methods  & symbol  does not cause problems on windows use path.getparent instead of ugly substring-hack -,Logging,IO,Util,App,Network,UI
1102,fixed freezing when canceling find unlinked files (for pdfs),this can be significantly improved  but at least it won t freeze for now. also  the output do make sense.,App,Util,UI,Logging,Security,Interpreter,Network,IO
1103,add benchmarks,this pr adds some basic benchmarks for parsing and writing a bib file. the results are as following for a database consisting of 1000 entries. benchmark                         score     error  units benchmarks.parse                 49736.582 ± 788.879  ops/s benchmarks.write                0.706 ±   0.012  ops/s benchmarks.search                258.838 ±   5.604  ops/s benchmarks.inferbibdatabasemode  1297.622 ±  22.910  ops/s  as one can see the parse operation is by many orders of magnitudes quicker then writing. i had a closer look at the write operation and it turned out that 66% of the time is spent in database.getmode(). some small changes improved the situation by a factor of 10 benchmark                         score      error  units benchmarks.parse                42031.971 ± 8188.833  ops/s benchmarks.write                 8.299 ±    0.304  ops/s benchmarks.search               248.093 ±    7.573  ops/s benchmarks.inferbibdatabasemode  20759.711 ±  397.031  ops/s  i suspect the changes in #1100 improve the situation even more (since there the database mode is cached).  (by the way   gradle jmh  runs the benchmarks. so its pretty simple to use.) -   -   -   (),IO,Network,Security,UI,Util,Test,Interpreter,App,Logging
1110,removed some variables from guiglobals,removed the unused zoomlevel and moved typenamefont.,Interpreter,IO,Logging,UI,Util,App
1113,move pdf file directory configuration from external tab to file tab in preferences,**file tab** (  **external tab** (https://cloud.ent.com/assets/2141507/14311810/90125630-fbe9-11e5-83a6-dfac1267e4fa.png),App,UI
1116,open jdk problems with look and feels,see #393 #638.  still not 100% sure if this only applies to openjdk and gtk l&f or also to oracle jdk and gtk l&f. metal l&f seems to work but looks ugly.  idea is to try metal on openjdk and wait if more bug reports pop up even for oracle. -  maybe we should close at least one of the two bug reports that seem to be related to openjdk and gtk #393 #638 or maybe even open a new one with possible solutions.  also see   **especially see**   maybe we can just ignore this and wait for it to be fixed in openjdk and add a hint to our faq and documentation?,Security,UI,App,IO,Network,Logic,i18n,Interpreter,Util,Logging
1118,some performance improvements,motivated by the nice blog post from @mlep  i tried to further improve the performance.  starting point  benchmark                         score      error  units benchmarks.parse                 30        ± 2.7  ops/s benchmarks.search                230.359 ±   27.399  ops/s benchmarks.write                 53.323 ±    5.528  ops/s  now with this pr benchmark                         score     error  units benchmarks.parse                 46.965 ±   0.608  ops/s benchmarks.search                304.795 ±   5.905  ops/s benchmarks.write                 85.171 ±   1.301  ops/s  for further improvements on should have a closer look at the formatter: - removelatexcommands for search (70% of time is spent there) - fieldcontentparser and latexfieldformatter for write (also >50%)  (also fixed a bug in the parse benchmarkthis is why the numbers are so different than in my previous post) ##  -   -   -   (),Test,Interpreter,App,IO,Logging,Util
1126,made change to alleviate a bug in a multiuser environment with one,…centralized database file that near simultaneous database saves may cause changes from one save to be overwritten by changes from the other. this would occur when the second user save happened while the first user save was locking the database file or saving to the tmp file but prior to the copy of the tmp file to the database file. in this case the second user save would not yet see a modified timestamp or size change in the database file and thus start the save process. the save process would wait for the file lock to be removed then overwrite the database causing the changes from the previous save to be lost. this was especially noticeable when the database file resided on a network drive with frequent network latency issues.,Logging,App,Util,IO,UI
1135,1130 and re-enable gui test,@koppor it s just a simple if :smile:,Test,i18n
1138,importformatreader test,added initial tests for importformatreader. now  seven different formats are imported without specifying the format and the number of imported entries is checked. should avoid bugs like #1134.  i also removed unused methods and moved a totally unrelated method to a better home.,IO,Util,App,Test
1142,removed unused imports and some other minor things,oh  how the codacy issue count will drop,IO,Test,Util,App
1144,readd formatchars support,alternative to  #1114 to add backwards compatibility for formatchars (and a few other renamed layoutformatters). the idea was to replace the reflection code by an (admittedly big) switch statement. in this way we gain some flexibility about the location and naming of layoutformatter classes.  by the way   according to  all layoutformatters starting with  author  are deprecated and are replaced by  authors  since 2.7. should we just delete them now? -   -   -   (),App,IO,APM,UI,Network,Logging,Util
1146,replaced map.get()  with containskey() where appropriate,based on a disussion in #1142  pointed out by @siedlerchr   checking if a  map  containts a key is better done using  map.containskey()  than checking if  map.get()  returns null. (i have checked that null is not stored in the  map  as well.),DB,Logging,App,IO,Util,UI
1147,added test for stringutil.expandauthorinitials,added support for names with - and a.a.  (could be parameterized but then a new file is required etc and didn t have time for that right now),Test,Util,Interpreter,App,IO
1149,replace normalizenamesformatter by authorlist and so 318,- 318 (and refs #950) - removes comma as delimiter of author names (in normalizenamesformatter).   the problem is that comma separated authors cannot be distingued from one author in bibtex format.   for example  name  della  first  could be three names separated by commas or if interpreted as valid bibtex string it is one author with lastname=name  jrpart=della  firstname=first. - add colon as delimiter of author names (in authorlistparser).  thanks at all  but especially @oscargus  for creating many tests. made implementing this pr way easier!  ##  -   -   -   (),Interpreter,Test,App,IO,Util
1159,cleanup formatter tests,this is a minor cleanup to the formatter tests. tests covered in formattertests were removed from the concrete formatter classes. a comment pointing to the general tests has been added to all concrete test classes.,Test,App,Util
1160,remove %s in formatter descriptions,in the developer telco  we discussed that we don t want to have  %s  in the descriptions of formatters. this pr removes the last two remaining  %s .,Util,App
1161,add method getexampleinput() to format class,i added  getexampleinput()  to the formatter class to improve #1050.,App,Util,IO,Test
1167,positionwindow automatically installs resize event listener,instead of always having to copy and paste the same code  the componentadapter is now automatically installed.,App,Util,Interpreter,UI
1168,1163 by removing the strange functionality which enabled sorting…,we have some very strange logic in jabref which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. this causes a lot of issues. i do not think that jabref should still support such strange logic  and just use the value which is in the year field.   hence  i removed it.   this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class.   refs #1163,Network,Logging,UI,Util,App
1170,some minor cleanups,a little bit of everything maybe one should wait until after 3.3 is released before merging this?,App,Util,Network,IO,Logging,UI
1184,use paths.get() instead of url.getfile() - fix failing tests,fixes problem with failing tests due to whitespaces,Test,IO
1195,small fixes,first commit is some code cleanups. the rest is mostly spelling and localization consistency.,App,UI,Util,Logging,IO
1200,moved more methods from util.util,now there are very few methods remaining in util  i m not convinced about keybinder. maybe a semi-bad name and maybe should be in gui.keyboard instead (and probably should be used more).,IO,Logging,UI,Interpreter,Util,App
1201,added method to generate string with n spaces or n characters,used in a number of places so makes sense to have a method.,App,Interpreter,IO,Test,Util
1202,replaced some guava usage with standard java.*,while looking for the use of guava i found these calls which can be replaced with standard java-classes.  regarding the original quest: - most uses are for checking null or empty strings or similarly return an empty string if the input string is null  it may not be worth importing the library just for these two and better to create these two trivial methods in stringutil (and use them to a larger extent) - there is also  charmatcher.whitespace  which may be slightly less trivial to replace,Search,Util,IO,Network,App,Logging
1205,change output level from info to debug to remove clutter in the output,when openning a file and special fields are used  users currently **always** get the message  info net.sf.jabref.importer.opendatabaseaction - synchronized special fields based on keywords  displayed. this is confusing. see for example   currently  jabref uses  info  for errors and warnings  too:  ![grabbed_20160414-125653](  the synchronized message is a debug message  which should not be shown in the general case.  to be consistent with the current logging approach  i changed the log level for a message from  info  to  debug . this also reduces clutter in the log and on the console.   the alternative is to rethink all log levels and the preferred default output.,Util,Logging,App,DB,IO
1207,restructure importers,the aim of this pr is to reduce the overlap between the importer package and some code in gui (in particular  the class opendatabaseaction). moreover  #1080 and #1153 are fixed.  in detail  the following things were changed: - the abstract  importformat  class is almost completely rewritten. please have a look at this class. almost all other changes are a direct consequence of the edits made to the importformat class. the biggest change is that the import method returns a  parserresult  instead of a list of entries (in this way  metadata can also be imported and error messages are communicated more effectively instead of throwing ioexceptions). moreover  the import method operates on a reader instead of an input stream in order to reduce some common code in all importers. -  add method  importdatabase(path file  charset encoding)  to the importer interface which opens the file and passes the stream to the other import method. - the bibteximporter overwrites this new import method and uses the logic from  opendatabaseaction.loaddatabase  to determine the encoding of the bib file. - change opendatabaseaction to operate against the bibtex importer.  - remove get/set iscustomimporter: was not really used (just for sorting - now everything is alphabetical) - empty entries are no longer imported (thus a few test had to be changed)  remark: the methods getextension and getdescription are not implemented by almost any importer. this should be done. maybe this is something for the stupro?  (will add the changelog entry and add a few tests later) -   -   -   (),Logging,Util,Network,IO,App,Interpreter,Test
1208,fix that fieldformatters run although they are disabled,as reported by @stefan-kolb  the field formatters run although they were disabled. this is fixed with this pr. -   -   -   (),Test,IO,Util,App
1215,improved conversion maps and conversion speed,the html/unicode <-> latex conversion map source was based on regular expressions making it a jungle of backslashes. now  replace is used instead of replaceall so fewer backslashes and (theoretically) a bit faster.  i also added benchmarking for the following conversions: - html to latex (used at import  cleanup and save action) - latex to html (used for preview) - latex to unicode (used for table rendering)   and i got a slight improvement  although i cannot really tell why the two latter are faster now as they are based on cleaned versions one reason might be that the tests are based on latex symbols with more backslashes in them for the old case  before: benchmarks.htmltolatexconversion      5533.070 ▒   86.148  ops/s benchmarks.latextohtmlconversion     141500.226 ▒ 8011.038  ops/s benchmarks.latextounicodeconversion  124527.930 ▒ 3984.776  ops/s  after: benchmarks.htmltolatexconversion     6153.450 ▒   114.716  ops/s benchmarks.latextohtmlconversion     168037.040 ▒ 13412.341  ops/s benchmarks.latextounicodeconversion  173674.308 ▒  7455.006  ops/s  here one can see that only searching the string to be converted once is far better than running replace on all possible characters. which is not surprising  but require quite complicated code.  finally  with the simpler strings it was easier to add most (all?) of the curly brackets required to solve #405 .,Util
1216,refactored cli code,moved code related to the cli to the cli package  including half of jabref.java.,Test,Network,Interpreter,App,DB,UI,Logic,Logging,Util,IO,i18n
1217,added integrity checker for odd number of #,will sometimes help for #1212 and #1188,Logging,UI,Network,Util,IO,App,Test
1219,refactored some dialogs,extracted some code to methods.,App,UI
1229,1091 apply and ensure correct import sort order,see #1091,IO,Logging,App,Util,Interpreter,UI,Network
1230,removed some issues and encapsulated some fields,- encapsulated fields and extracted methods in basepanel - some minor code cleanups,UI,DB,IO,Logic,i18n,Network,Interpreter,Util,App,Logging
1238,added integrity checker to detect html encoded characters in fields,based on discussions in #1188,IO,App,Test,Util
1240,removed leftovers from option to edit in table cells,found some unused code when doing translations. this is a left over from when it was possible to edit in the table directly.  i ve earlier seen some code which checks if a single cell is selected. that should also be safe to remove i assume (i was a bit confused why it was ever there  but now i think i know the reason).,Logging,IO,Network,App,UI,Util
1241,add test for msbibexportformat,in this pr the class msbibexportformat will be tested. the logic of this class will be found at msbibentry.java and msbibdatabse.java. i also edited the address_pattern in msbibentry.java so that the regex described in the comment will be matched.,App,Test,IO,Network,Util
1244,fixed so the resulting type does not become misc when merging two ent…,apparently  the type of resulting entry was not set correctly,App,UI,Util
1246,fixed #1245,this should 1245 so that it is possible to set empty strings is jstyle-files as  key=,IO,Network,Util,Test,App
1250,replace general get/put/remove metadata calls with typed versions,also removed support of legacy user-specific file paths (serialized with a @ symbol). jabref stopped writing this format over 3 years ago (according to  -   -   -   (),IO,App,APM,Util,Test,Interpreter,UI,Logging,Network
1260,cleanup of cleanup dialog,- remove unnecessary cleanups which are replaced by field formatters (ordinals to latex and unicode to latex) - field formatters in the dropdown box in the cleanup dialog are now correctly displayed using the name instead of the key ##  -   -   -   (),App,UI
1261,cleanup now uses active preferences,previously  the cleanup used the preference state from the program start and not the most recent preferences. this is fixed with this pr. -   -   -   (),Util,App
1262,remove some unused code in importinspector,-   -   -   (),App,IO,Util
1265,restructure help pages,help pages are now all listed in one file.  see:  (i cant  get the crosslinking right) ~~use given encoding when writing sql-files~~ (no longer relevant) refactored some db exceptions -     @mlep  have a look at the helpfiles java file there are all help pages listed which are atm used. the one with the empty strings (  ) atm don t have a help page associated  but should (at least the fetchers) (except for contents  as it links to the toc of the help pages.  @oscargus  as you worked on the cli classes recently  is there a way to link to the help page like in the gui dialogs? https://github.com/jabref//blob/gh-pages/en/commandline.md,Network,UI,Logging,Test,Search,App,Util,IO,Interpreter,i18n,Logic
1273,improved integrity check dialog,- table can be sorted - editing disabled - resize properly if a different menu font size is used - extracted to its own class  also made writing of  bibtex key  consistent.,UI,Logging,Util,IO,App
1278,tried to 1251  but all tests pass,will merge this in if the tests all pass on the ci server. -   -   -   (),App,Test,IO,Util
1279,more tests for doi cleanup and a small fix,tests when doi in url-field.  fix so that the fieldchange new value is null instead of    after removing field contents.,App,IO,Test,Util
1281,replace bibtexentryassert by overwriting bibentry.equals method,as proposed in #625 a proper bibentry.equals is provided in this pr and used for the tests.   this as a few advantages: - detect differences which are not visible in the canonical string representation (so far this hit empty fields and different line breaks) - get more meaningful test-failure messages for lists (instead of  expected 2 got 3  the added entry is displayed) - assert.assertequals just works and no custom written assertequals method has to be used  i clicked around a bit  but couldn t find any unexpected side effects due to the overwritten equals method.   if this pr is accepted  then i would inline the bibtexentryassert.assertequals methods. -   -   -   (),IO,Util,App,UI,Network,Logging,Test
1282,1271: authors with compound first names are parsed properly,-   -   -   (),Test,App,Util
1296,improve bibtexentryassert,this is a follow up of  #1281 with removing obsolete bibtexentry.assertequals methods,Interpreter,Network,IO,App,Test,Util
1297,minor bibentry tweaks,- remove obsolete settings of  changed  variable - remove empty line - use formatting rules for additional brackets in conditions,UI,Logging,App,Util,Network
1298,added option to copy version information in the about dialog,added option to copy version information of jabref in the about dialog as described in #871 . this will help with filing issues and bug reports as the version of jabref  os and java will be copied.  -   -   -   ()  ![screen shot 2016-04-25 at 22 38 58](https://cloud.ent.com/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cd.png),Util,IO
1300,1290 change jabref help to online help,- all translations must be added again,App,Interpreter,UI,Util,IO,Logging
1304,implemented jstyle file filter and opening in last dir,filter filter for jstyle files #1294  extended browseaction to display file filter fixed npe when selecting invalid jstyle (prevented style dialog from opening) -,UI,App,Util,APM,Network
1309,minor updates to bibentry,- <s>rename citekey to bibtexkey to be consistent with wording of jabref users</s> - reorder methods in bibentry to follow id  cite key  type  everything else - add some javadoc - remove obsolete setting of  changed=true,Network,Logging,UI,Util,App
1310,1295 npe when sorting tabs,- selected tab might be null when sorting tabs - the logic is really strange in general  so this fixes the problem but we need to rework the actions enabling in general imho.,Util,App,Logging,IO,UI
1317,take srceenshots in gui tests,this pr adds the possibility to take srceenshots in gui tests. the idea is that srceenshots for the website can easily be updated for a new version by just running the gui tests.  the images are stored in  builds/srceenshots/ . -   -   -   (),i18n,Test
1318,update localization instructions,corrected gradlew task name #1312  @koppor  @stefan-kolb,IO,Test,Util
1329,cleanups improvements,- fix move files cleanup (link between gui and logic was missing) - add  all  to field names combobox for field formatters cleanups  - make latextounicode converter available as cleanup - combine casechangers and bibtexfieldformatters to formatters class ##  -   -   -   (),Network,IO,UI,Logging,Util,App
1330,normalize pages formatter does not remove letters in page numbers,formatting the page range  r1--r50  resulted in  1--50 . now nothing is changed. moreover   43 -- 103  is now correctly converted to  43--103 . -   -   -   (),Util,App,Test
1335,improve symmetric diff,changes are only highlighted. see the doi field in the following screenshot. previously the change  was written as  msp~~msp~~ . ![untitled]( also fixed some smaller bugs in the symmetric diff (like accidentantly removed whitespace). -   -   -   (),UI,Util,App
1336,refactor open and save dialogs,complete refactoring of the ugly and propably outdated filedialogs code newfiledialogs will be renamed when the work is done atm i want to keep it parallel.  todo: -  refactor getmultplefiles  -  provide methods for other open and save dialogs  -  replace openfilefilter with filenameextensionfilter   -  refactor browseaction to use new the methods -  test #1324  again,UI,Test,Interpreter,DB,Util,IO,Logic,Logging,i18n,App
1348,normalize page cleanup also replaces em dash,<describe the changes you have made here:   > -   -   -   (),Util,Test,App
1349,1347 open urls does not work with query strings,this should work with query strings like    and normal urls.  however  the question is: does this impact the opening of any other file path or anything? we need to be careful as this is a generic open method. maybe that s also the problem because it needs to handle any kind of uri.  @siedlerchr @tobiasdiez please take a look.,App,IO,Util
1350,fix npe on selecting invalid jstyle,follow up from #1294   npe was raised in comparator because name was initialized with null instead of empty string only store preferences if style is valid  @oscargus  the fix has the side effect that a file where the name can not be parsed correctly is displayed as  empty style . i attached the problematic style file which was provided in #1294  however: valid still returns true.  as you have worked recently with the styles things  do you know what is required for a jstyle? @koppor  maybe you know this? then we could improved the validity check   [campus_format.english.txt]( ![emptyjstyle](https://cloud.ent.com/assets/320228/14995084/4d8c3a3e-1173-11e6-8eb6-e8f5490ffa5e.png),Util,App,Logging,Test,IO,Network
1355,update preview panel on generate bibtexkey,fix for #1353 fixed some missing unlocks some formatting -,App,Test,Util,UI
1368,removed possibility to automatically add braces via option - preferen…,…ces - file - store the following fields with braces around capital letters. please use save actions instead for adding braces automatically.  refs #1351,IO,App,Util,Logging
1369,1313: remove ui as the checkbox is no longer backed by a config …,…option  see #1313,App,UI
1374,register listener for correct entry,-   -   -   (),Util,Logging,App,IO,UI
1375,add overload for stringy urls in urldownload,-   -   -   (),App,Util,Search,Network
1376,small improvements for page normalizer,see test cases. -   -   -   (),App,Util
1377,merge master into javafx branch,<describe the changes you have made here:   > -   -   -   (),UI,APM,App,IO,i18n,Util,Network,Interpreter,Test,Logic,Logging
1383,implemented error console in javafx,this is the error console in jabref being implemented in javafx. the console is highly flexible in positioning and styling its components through a fxml and corresponding css stylesheet.  also to show better the error console content (log  output  exception)  i have allowed to resize error console windows manually.  ![error console dialog](  ps: - update the error console screenshot - new feature:   - copy log: user can copy the log   - report issue: user can report directly issues from console. #872: have done -   -   (),UI,App,Interpreter,IO,Network,Logging,Util
1384,1334: display correct number of entries in static groups,<describe the changes you have made here:   > fix of #1334. nice bonus: total number of entries is displayed after  all entries  group. -   (bug not present in 3.3) -   -   (),Logging,Network,UI,Util,Interpreter,App
1386,entries retain their groupmembership when undoing their cut/deletion,when undoing an entry which was deleted/cut while a group was selected of which the entry wasn t a member of it was after the undo.  i fixed that. ### steps to reproduce - delete an entry - select a group of which the entry wasn t a member of - undo the deletion - now the entry is a member of the group,Interpreter,Security,Network,Util,UI,App,Logging,IO
1388,fix sorting issue #1357,the logic is fucked but this should fix the issue.  problem was that when sort in original order was selected  the corresponding variable newsortorder would still read the disabled sort order inside the jdialog.,Util,App
1389,1381 file links containing blanks are broken if non-default viewer is set,runtime.exec with a string splits on white spaces,Util,App,IO
1390,ported the keybindings dialog to javafx,the keybindings are now organized in categories referring to the jabref menu titles. the button grakey has been removed and once a entry is selected the table listens for valid key combinations. the fxalert class has also been adjusted to listen to the closedialog shortcut. -   -   -   ()  ![keybindingsfx]( ![keybindingsfxdefault]( ![keybindingssuccess](https://cloud.ent.com/assets/15340757/15216596/0222bbb8-1858-11e6-96d7-bb2d7a3d0f4a.png),App,Logging,UI,IO,Util,Interpreter
1397,add fields for nbibimporter and add testfile,regarding: 1063]( the medlineplain importer doesn t have all fields  that the nbib format has. so i added the fields to the medlineplain format and added a test+ testfile for the nbib format. a list of the elements that should be imported now  can be found [here]( -,IO,Util,App
1401,1399 export to html: html code is not well-formed,always write the footer  no matter if encoding is given or not.,Test,App,Util,IO
1403,fix small event bug in previewpanel.java,this bug caused a  missing event subscriber  exception  when clicking on different bib entries in preview mode.,IO,UI,App,Util,Logging
1409,cleanup guiglobals,implements #1408  cleans up the  guiglobals  class and move  latexfieldformatter  to the  bibtex  package  which is now independent of the  gui  package.  as a final step  i would move the class  net.sf.jabref.importer.fileformat.fieldcontentparser  to the  bibtex  package  which would make the package self-contained (apart from imports to the preferences and related classes) and would move the whole  bibtex  package into  logic . are there objections to this?,App,APM,Util,Network,UI
1411,move encoding from basepanel to metadata,<describe the changes you have made here:   > -   -   -   (),IO,Test,Util,App
1427,remove groups -> settings -> select matches,as discussed in  this option does not work and should be removed. actually there is absolutely no code backing this option. -   -   -   (),UI,Network,IO,Util,Logging,App
1440,1420 auto downloader should respect file pattern and propose correct filename,(https://cloud.ent.com/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5.png),App,Util,Test,IO
1442,remove expandauthorinitials again,was reintroduced in  will merge directly after tests pass.     --> -   -   -   (),Interpreter,App,Util
1443,651: improve parsing of author names containing braces,651. -   -   -   (),Test,App,Util
1451,implementation of shared database support,implementation of **shared database support** for mysql  postgresql and oracle database systems.  made changes: - old  sql package removed. _(this request aims to replace the old system completely)_ - _automatic_ change push to the server via eventbus. _(support for all kinds of entryevents  see  - full synchronization support for mysql  postgresql and oracle   _(manual and semi-automated pull)_ - conflict avoidance by version control and [_optimistic offline lock_]( - efficient _pull_ using version numbers - synchronization of metadata with conflicts avoiding mechanisms - metadata appliance - groups synchronization - mode synchronization _(mode switch on the fly possible)_ - adjusted tab and window titling - new localization entries - ui dialog for opening new or existing shared database - ui dialogs for resolving conflicts between bibentries - key bindings - connection loss handling - switch to offline working mode - driver availibilty check _(e.g. for the dropdown list)_ - tests for all classes localized in shared package - synchronization tests  _screenshots:_  ![open_rem_db](  ![shareddb_sc1](  ![shareddb_sc2](  ![shareddb_sc3](  ![conn_lost]( -   -   -   (),Util,Interpreter,App,Test,Logging,Network,IO,DB,Security,UI
1453,refactor placement of parsing and writing logic,according to the following conventions: - all objects which can be read from a string have  public static type parse(stringy input)  method. - all objects which can be written to a string have a  public stringy getasstring()  method.  should 888. ##  -   -   -   (),IO,App,Network,Logging,Util,Test,UI
1459,create update checker for the enduser,implements #661.  the updater regularly checks if there is a new stable version of jabref available [via github api]( if there is  a dialog will popup:  ![newversion]( -  download update  points directly to [fosshub]( -  ignore this update  will ignore this specific version on automatic version checks -  remind me later  will inform the user on the next version check (automatic or manual) of this version -  view changelog  points directly to the changelog specific to this version (eg. v3.3 would point to   under  help  there is another button to check for updates.  ![updatetab]( under preferences you can see: - the current version - when the version was last checked and a button to check it now - if there s a new version available and a download button - if a version was ignored and a button to unignore it - you can also define how often the automatic check should occur,DB,Interpreter,UI,IO,App,Logging,Util,Network,Test,Logic
1460,1455 npe when retrieving bibtex data from doi,see #1455,Logging,App,Network,IO,Util,UI,Test
1466,add missing status translations for various specialfields,the status messages for some specialfields have not been translated correctly (missing localization has not been detected automatically as a variable has been used.) -  refactor java code to directly use  localization.lang  consistently for all specialfields -  lookup missing translations in previous releases  -  fix npe when clearing multivalue fields (ranking  priority  read status),App,Util
1471,preserve user comments in bib file,so i am finally having my take at #1026. the current solution was surprisingly easy so far (despite what i had written before). it looks explicitly for our encoding prefix in the file ( encoding:  ) and kills lines that contain it (but only lines preceding an entry  it will not delete something that is inside an entry). other user comments are left untouched and are _always_ written out again  even if the entry is reformatted.  user comments that are above meta data  bibtex strings  or the preamble will still be removed  though. changing that would require large scale changes to these items in our model  since we would also need to store the parsed serialization for them  which we do not do so far.  this should receive significant automated  but also manual  testing  since it modifies a quite critical part and has the potential to destroy bib files. i will add a few more tests for this pr. -   -,Util,App,IO,Test
1472,refactor writing of bib files,the main aim of this pr is to simplify the implementation of  (sql export) and other exporters. - abstract class bibdatabasewriter  which controls the generic things of   writing a database (i.e. sorting entries  applying save actions  some   basic conversations  ) - derived class bibtexdatabasewriter  which only contains logic how to   actually write to in bibtex format (should be simple to write similar   classes for other export formats like ris) - make savesession abstract and introduce two implementations which   write to a temporary file (filesavesession) or two a string/buffer   (stringsavesession) - move code related to lock files to filebasedlock ##  -   -   -   (),Test,App,Interpreter,IO,Util
1474,1434: static groups are now longer displayed as dynamic ones,reason for this bug: explictegroup now derives from keywordgroup and thus was sometimes displayed as a keyword group. -   -   -   (),IO,Logic,App,Util,UI,Network,Interpreter,Logging
1479,rewrite medlineimporter with jaxb and add nbib fields,regarding:1063]( i ve rewritten the medlineimporter (to be more specific: the  importdatabase  method)  so that it uses a jaxb parser now  instead of a sax parser. i ve also added the nbib fields to the importer. tests for the changes will be coming. -   -,Interpreter,Logging,App,IO,Util
1483,1482: correct number of matched entries is displayed for refining subgroups,the issue was that  for the number of hits  jabref only checked if the group taken separately matched the entry. that is  it was completely ignored that the group sits in a tree and might be set up to refine the search of the parent. taking the example given in #1482  577 entries satisfy the condition  articlé original  but only 38 are also matched by  articlé . -   -   -   (),UI,Test,App,Util,Interpreter,Logging
1486,1485 export shorttitle as standard field,shorttitle <-> shorttitle  includes the obvious migration problems  which i don t know if they really occur.,App,Util
1487,implement getextension and getdescription for importers,implement getextension and getdescription for importers. #1444  -   -,App,Test
1501,test customimporter,create a test for customimporter.java -,App,Util,IO,Test,Network
1511,1507: keywords are now separated by the delimiter specified in the preferences,also did some small refactorings / renamings. -   -   -   (),Util,App,Logging,IO
1520,improve group performance,-->  some performance and memory improvements: - lazy initialization for journal abbreviations (reduces memory usage) - remove flickering of group tree updates by removing  grouptree.reload  (which apparently is not necessary) - remove group tree update on db changes since selection changes in the list view already trigger an group tree update and thus would result in two redrawings (admittedly  this is not very clean  but i don t understand why changes in the entry editor and cleanups result in  selection changes ).  a db with 6000 entries and a huge amount of groups was no problem with these improvements. build available under   results of further performance investigations: - conversion to lowercase of the field name in bibentry.getfield is the most expensive method for loading and showing a db (2 sek self-time for big db). changing to treemap (with case-insensitive option) or apache s caseinsensitivemap resulted in no improvement.  - disabling  show number of group hits  further improves perfomance. - but the keywordgroup match algorithm is pretty fast. the problem is that we run through the whole list of groups every time one entry changes  we could be smarter here.  - biggest performance hit for the group tree is now the actual rendering. -   -   -   (),App,Util,IO,Test,Network
1532,fix update notification for developer builds,just running the compiled version without using gradle resulted in a numberformatexception since the version update was based on the wrong version string  ${version} . this is fixed with this pr (also in this case no update notification is shown). -   -   -   (),Util,Test
1546,some code cleanups,while i was at it: some code cleanups - entryset instead of keyset - correct order of static and final - used equalsignorecase instead of equals() and tolowercase() - added default switch case -  correct  form of lambda (not sure what it is called) - isempty() instead of size() > 0 - removed unused private variable,Util,UI,Network,Logging,IO,Interpreter,App
1549,searchbar across all bib files instead each having its own,implemented #825. the searchbar is now in the top toolbar instead of each tab having its own (always at the right). on tab change the tab gets updated. the autocomplete is bound to the current tab (maybe extend this one in another pr?). the old global search (opening all findings in a new window) is gone  do we really need it?  ![jabref_globalsearch]( -   -   -   (),Interpreter,Logging,IO,Network,Util,App,UI
1552,performance improvements for groups,the bibentry now stores a list of words which are contained in the field. in this way the keywordgroup.ismatch method just has to compare two arrays instead of analyzing strings over and over again. for a big file (> 7000 entries  > 100 groups) the load time decreased by 1 sec from 4.8 seconds to 3.7. half of the time needed for showing the groups tree is spent in calculating the number of hits. moreover  subsequent rerendings of the groups tree (for example after changing an entry) are also quicker.  note that the match algorithm changed slightly. for example  previously looking for  test  in  some$test  resulted in a match  this is no longer the case. however  normal word separators (like whitespace  comma and semicolon are recognized properly)  i.e. searching for  test  in  some test  returns true.  also fixed a npe. -   -   -   (),Util,Interpreter,App
1555,link to forum,adds another entry to the  help  menu:  online help forum  (see  -   -   -   (),App
1557,some internationalization improvements,- better casing - removed duplicate strings - more consistent naming,DB,App,UI,Logic,Logging,Util,IO
1561,some codacy issues removed and some more use of getfieldoptional,minor cleanups,UI,Logging,Logic,App,Interpreter,Util,IO
1563,added button to crossref entry editor field to select parent entry,based on the idea in #1338 a button is added in the crossref entry editor field to select the parent entry in the main table. it is not exactly the same thing as suggested in #1338 though. -,UI,Util,Network,Interpreter,Security,IO,Logging,App
1565,added information in the tool tip for undo and redo and disabled when…,a tool tip text is shown describing the undo/redo action. also  the undo/redo buttons are enabled/disabled when there are things to undo/redo.  <img width= 167  alt= capture3 2  src=  >  current problem is that it doesn t work on startup (both undo and redo is enabled as before)  but as soon as one edit is done it works just fine. -   -   ()  … no undo/redo is available,App,Util
1567,fix 1530: integrity checker should ignore unescaped hashes in url field,addresses #1530  -   -,App,Logic,Interpreter,Util,UI,Logging,Search,IO,Network
1569,removed support for optinally following crossrefs since it wasn t used,initialized to true and set to true,Security,IO,Logging,Network,App,Util,Interpreter,UI
1570,some more testing of bibdatabase  primarily related to duplicationche…,a bit higher coverage of  bibdatabase  and  duplicationchecker .,App,Test,Util
1571,encapsulated some fields in globals,a bit of refactoring,Logging,Interpreter,Network,i18n,IO,App,UI,Util,Logic,APM
1572,implement 1356,implements  #1356 and provides a formatter that converts html to unicode (converting characters and eliminating tags) -   -,APM,Search,Security,Logic,Network,IO,Test,Logging,Interpreter,App,i18n,Util,UI
1574,refactored exporter and split it into gui and logic,should be a no-brainer but better wait until after 3.5 with merging.,Test,App,IO,Util
1576,fixed undo when update time stamp on edit is enabled,fixed a bug where the field change compound was not ended  leading to that field changes could not be undone when  automatically update time stamp on edit  was enabled. -,UI,IO,App,Logging,Interpreter,Util
1577,remove teamscale findings in the database package,remove the teamscale finding in the database package  that is in the model package. this means refactoring of methods  that are too long  adding comments to public method/classes and used streams in some situations for better readability (and reducing code).,App,UI,Util
1581,fixed #1264,i finally got around to understand the reasons for #1264 (and parts of #1464). it turned out that commands starting with c was handled in a special way and that  {\v{s}}  was for unknown reasons used as  line tabulation set .  as a result  not only does jabref now render  \v{s}  and  \chi  correctly  it also renders combining accents  see screen shot. <img width= 291  alt= capture4  src=  > -   -   (),Network,App,Util,APM,UI,Test
1582,extend the openconsolefeature,extend the openconsolefeature by offering a selection between default terminal emulator and configurable command execution.  @koppor  s wish (see  was to have a selection between own terminal emulators. this feature extension provides that. - add:   - radio selection to the externaltab   - program execution to jabrefdesktop   - new jabrefpreference entries   - ui outputs   - localization keys  screenshots: ![oc_sc3]( -   -   (),UI,App
1583,fixed #1527 and some refactoring/cleanups,fixed #1527 and did some refactoring and cleanups. -,IO,UI,Logging,Interpreter,Network,App,Util,Security
1584,added layout dateformatter  see #1249,added a configurable layout formatter for dates. 1249. -   -,App,Util
1586,added isbn integrity checker,isbn integrity checker -   -,Network,Util,App
1588,added filter to not show selected integrity checks,added the possibility to dynamically filter out some classes of integrity check messages. <img width= 356  alt= capture5  src=  > -   -   (),Util,App,UI
1589,implement 1516,implements #1516. selected fields ( isbn    url    uri    issn    doi ) are displayed in upper case in the entry editor. -,Util,App,Test,Logging,IO,Logic
1590,implemented #1345 - cleanup issn,implemented cleanup that adds a missing dash in the issn field if it looks like an issn (checksum is not controlled  but eight digits  where the last may be an x). -   -,Network,Util,App,Test
1591,replace getfield with getfieldoptional in all of the tests and in som…,132 to go.  there may be cases where the optional can be better used,Test,IO,App,Util,Network,UI,Search,Interpreter
1593,some globals.prefs injection in logic and model,based on the discussion that globals should not be accessed from logic and model.,Util,IO,App,Test
1594,create new fetcher infrastructure,-->  the aim of this pr is to refactor the fetcher interface  in particular separate logic and gui code as well as implement  and    i propose the following class hierarchy for fetchers: - webfetcher: search web resources for matching bibentries   - searchbasedfetcher: based on a free-text query (may return multiple results)   - idbasedfetcher: based on an id (single item as result) - idfetcher: looks for an id (arxiv  doi ) based on an existing bibentry - fulltextfetcher: find fulltext of an existing bibentry (i.e. rebranding of fulltextfinder) ##  -   -   -   (),App,Util,Network,Test,IO
1595,rename helpfile enum to singular,-->  based on  and  enums should be named in singular form. -   -   -   (),UI,Network,App,Interpreter,Logging,Util,Test,Logic,IO,i18n,Search
1596,cleanup findfile and asssociated tests,cleaned up the findfiles method reworked tests  added some new tests tests should now work in linux  too  -,App,Util,IO,Logging
1599,fixed #1592,this should 1592. -,App,Util,i18n,IO,Logging,Logic
1601,move event,moves the  event  package into  model   as discussed in #1579  no need for changelog  since this has no externally visible effect. commits will be squashed on merge.,App,Test,Util
1604,move preferences,moves preferences-related classes into a new top-level package as outlined in #1579. this is a pure refactoring  no functional changes. it doesn t fix the dependencies on preferences  but separates them from the remaining classes in the root package.  additionally  the class  jabrefpreferencesfilterdialog  is moved into the gui package  where it belongs. this also allows to rename the class and reduce its visibility.  commits can be squashed on merge.,Logging,App,Util,IO,Network
1606,updated preview entries,while working on #1602 i realized that the preview entries used deprecated fields  so i updated them and improved the casing a bit.,Util,App
1607,added labelpatternpreferences,the  static  initializer is quite ugly  but i do not really know what the best way to change it is. maybe call  updatedefaultpattern  in  jabrefmain  after setting up the preferences?,App,Interpreter,UI,Util,Network,IO,Logging
1611,fix outofboundsexception when importing multiple entries in medline format,@zellerdev found out a bug when importing more than one entry in the medline format into jabref.  jabref version jabref 3.5 windows 8.1 6.3 amd64  java 1.8.0_25  steps to reproduce: 1. select more than entry from [here]( . 2. select  send to file  and then choose  medline  format. 3. open jabref and select  import into new database . 4.  i get an indexoutofboundexception shown on the console and no entries are imported.  alternatively use the testfiles i added in this pr.  quick fix: add an if clause around the substring method  that causes the exception. -,App,IO,Test,Interpreter,Network,Util
1616,1613 use jabref default icon for uninstaller for now,using standard icon for now. should be replaced by specific uninstaller icon after redesign #482,Util,Interpreter,Search,Logging,Test,APM,Logic,App,Security,Network,UI,i18n,IO
1617,added more fields and fixed some issues,i guess   publishers   in  xmputil  was a typo?,Network,Interpreter,Logging,App,Util,UI,IO
1618,moved  removed  and used string constants,moved some string constants from  globals  to better places. maybe we should introduce a class  logic.util.string.stringconstant ? not sure if there is a better long term plan for  globals.newline ?   unified used of the constant   /   as field separator.  removed unused preference key and default value in  persistencetablecolumnlistener .,IO,Logging,Util,App
1619,added dateformatter to layoutentry so that it actually works,nowadays it is not just enough to add a class (maybe).,IO,App,Util,Logging
1620,protected terms management dialog,the idea is that the lists with protected terms should be user configurable. this pr adds the mechanism for this as well as a dialog to manage the lists.  eventually the internal lists should be managed as resources to simplify adding more. -   -   -   (),Test,Util,App
1622,improved latex to unicode/html formatters to output more sensible val…,see #1321. main thing is that  \latex{}  outputs  latex   same for all unknown commands. also behaves a bit better for some other situations with unknown commands and there are now tests for it to make sure that it happens. -   -,App,Util,Test
1623,table row height adjusts on windows as the font scales with the menu,when increasing the menu font size on windows (at least windows 10)  the tables also scale but not the row width. this has been fixed in some dialogs earlier  but this is a general fix.  i have no idea how it works on osx  but on linux (my centos office machine) it seems like the table font is not the same as the menu font.  this is relevant for high resolution displays (although i cannot find the issue that discussed it)  before: <img width= 366  alt= capture8  src=  >  after: <img width= 368  alt= capture9  src=  > -   -   (),UI,IO,App,Util
1626,move labelpattern,minor refactoring and moving of classes from logic into model. the  xxxlabelpattern  classes really describe how we serialize and store label patterns (part of the structure of meta data). hence  they belong into model and have already been almost independent of other classes. the util class with helpful functions regarding label patterns can stay in util.,Security,UI,Network,IO,DB,App,Logging,Interpreter,Test,Util
1627,more field names and a method,more field names in  fieldname  and a method  fieldname.orfields(fieldname.year  fieldname.date)  to generate   year/date  . -,Util,App,Interpreter,IO,UI,Logging,Network
1630,export oo/lo citations to new database,based on a forum discussion   . 40 minutes later. -   -  manually tested changed features in running jabref,Logging,App,Network,i18n,IO,Interpreter,UI,Logic,Util
1631,replaced some getfield and fixed some bugs,thanks to @siedlerchr reminding me about the brilliance of optional  i decided to try and convert some bibentry.getfield to bibentry.getfieldoptional in a  proper  way. i managed in a few positions  but more importantly i reinstalled find bugs as a consequence of this.   i found a few quite bad bugs  such as npes when clicking  browse  in the journal management dialog with an empty text field. also  there where some other example of introducing requirenonnull without really checking that all existing calling functions did call without a null hard coded  @siedlerchr as i know that you are a big fan of path  find bugs complains that some method there is quite likely to return null (i think getpath())  so stacking a number of method calls is claimed to be risky.  still a few to be fixed (appending a database with explicit groups will most likely not work at the moment)  but i leave that to the persons introducing them. -  manually tested changed features in running jabref,IO,Util,Network,App
1635,more tests,a few more tests of cookie  stringutil.intvalueofwithnull  and reenabling some tests for layout.,IO,Util,App,Test
1636,updated errorprone to 2.0.11,version 2.0.11 should have solved the issue making 2.0.10 unusable. as i did not face the problem  i have no idea if it actually is working though,Test,Util,App,IO
1638,keep @comment text in a bib file,implements #1632. user comments marked by  @comment  are now kept in the bib file  regardless of whether they use brackets or not. -   -   -  manually tested changed features in running jabref,Test,Network,IO,Util,App
1644,resolve crossrefs and strings in main table,based on a discussion in the forum  this is a quick hack to show the possibilities. can be downloaded and tested from    it would be especially interesting for people with large databases with many strings to test it for performance. a better implementation can be done if this will make it to the released version. at least removing the commented out lines. -   -  manually tested changed features in running jabref,Util,Logging,App,Network,UI,IO
1648,refactoring of importer,moved classes to gui and logic and created a bit more structure.  (eclipse just hang and i have other things to do at the moment  but there are mainly some code cleanups: - getting rid of a gui-dependency in arxiv by moving correctlinebreaks - import grouping in a few files   ),Test,DB,App,Util,Network,IO,Logging
1650,replaced output of getresolvedfield to optional<string>,a bit weird that there are no explicit tests at all for  getresolvedfield,App,Logging,Interpreter,Security,Util,Network,IO,UI
1651,changed name of entry type in layout files,for consistency with the recent versions of the code. still backwards compatible though. -,Test,UI,IO,Util,Logging,App,Network
1652,made possible to make the oo/lo panel a bit more narrow,by using a shorter text for the button introduced in #1630   it is possible to make it more narrow. now   openoffice/libreoffice  is limiting the width.  some small refactorings. -  manually tested changed features in running jabref,Logging,App,IO,Util,i18n,Logic
1654,isbn fetcher using the new fetcher infrastructure,implement an isbn fetcher using the new fetcher infrastructure #1594  -   -   -  manually tested changed features in running jabref,Logging,App,Util
1656,gvkfetcher,implement a gvk fetcher using the new fetcher infrastructure #1594 -   -   -  manually tested changed features in running jabref,Test,Util,Search,Network,App
1659,pushtoapplication cleanup and refactoring,moved pushtoapplication functionality from external.push to gui.push and cleaned up a bit  like getting rid of the static list. -  manually tested changed features in running jabref,Util,UI,IO,App,Logging
1660,replaced object with appropriate class where possible,and some better variable names. -  manually tested changed features in running jabref,Logic,App,IO,Logging,Interpreter,DB,UI,Util
1662,fixed most of the errorprone warnings,introduced when updating to the latest errorprone version.,Network,IO,Test,App
1666,rewrite bibtexml importer with jaxb parser,regarding: #898  i ve rewritten the bibtexml importer: it was written with a sax parser and i ve used a jaxb parser. i will be addings some more tests for the changes i ve made.  note: exporting in bibtexml format and then trying to import in bibtexml format is not working because of #1665. -   -  manually tested changed features in running jabref,Logging,Interpreter,i18n,Util,IO,App
1671,1288 newly opened bib-file is not focused,-  open a new file and it is correctly focused afterwards -  open a file that was already opened before is correctly focused afterwards -  open a file two times and it is only opened once,Util,Network,IO,Logging,App,UI
1672,got rid of unused preferences,and marked some which can not be changed from within jabref. -   -  manually tested changed features in running jabref,Logic,UI,Logging,IO,App,Util,Network,DB
1673,removed thrown exception declarations,when they were not thrown,Network,Logic,Interpreter,Util,i18n,App,IO,Test,Logging
1675,replaced some arrays with lists,in some places it made no real difference  in other it improved the code a bit.  unitstolatexformatter  is reworked a bit  partly as a consequence.,App,Util,IO
1676,introduced method getcitekeyoptional and made getcitekey deprecated,there are some interesting consequences in the code. or rather it is clear that in quite a few places the code breaks with a  null  cite key.,IO,Security,Logic,Test,Util,Logging,App,UI,Network,Interpreter
1677,proper copying of entries,i m making a method to properly copy entries from one database to another  including crossref entries and used strings. this is useful in generating a database from an aux file and for generating a database based on an oo/lo document. it could also be useful for generating a subdatabase from selected entries (or copying relevant strings when copying entries).  there are some problems though related to the preamble. in oo/lo the entries may come from several databases and there it is not obvious how to deal with the preamble. however  a possibly solvable problem is to detect which strings are used in the preamble.  in auxparsertest @stefan-kolb have generated a test file with a string in the preamble. jabref doesn t parse this in a way such that the string can be resolved automatically. earlier  the preamble and all strings were copied in auxparser  but i was hoping to only copy the relevant strings. any input on how the preamble issue should be solved? one way would simply be to parse the preamble for strings  i guess. any other suggestions? -   -   -   () -  manually tested changed features in running jabref,Interpreter,UI,IO,Security,Test,App,Logging,Network,Util
1678,fixed oo/lo manual connection dialog on linux,doesn t fix the whole issue #1669  but at least the bug in the ui code so that the manual connection dialog can be drawn on linux.,Logic,IO,App,Util,UI,Logging,i18n
1683,do not cite entries without a key in openoffice/libreoffice (#1682),check that all entries to be cited have non-empty keys  show a popup if there are empty keys  and generate keys if instructed to do so.  references #1682  -   -  manually tested changed features in running jabref,UI,Util,App,Logic,Logging,i18n,IO
1685,added diva fetcher based on the new interface,-,App,Util,Network
1688,removed dependencies of globals.prefs in some tests,as a consequence of the introduced preference classes  it is no longer as often required to set  globals.prefs .,Util,IO,App,Network,Test
1693,removed (false) npe issue reported by findbugs,findbugs reported a potential npe here  which never occurred since it would only happen if  model.getsearchstate() == maintabledatamodel.displayoption.disabled . as this is checked for in the first part of the if-clause  i removed the second check.  so this shouldn t affect any perfomance since  matches  will only be triggered under the same conditions as before.  nothing in changelog since the npe couldn t actually happen. -  manually tested changed features in running jabref,Logging,Interpreter,IO,Util,UI,App
1695,injected layoutformatterpreferences in exportformat,and removed the need for the static variable  customexportnameformatters  in  jabrefpreferences .  ~~still  savepreferences  to inject and remove the reference for resource loading to~~ completely get rid of  globals .,Logging,Network,Test,UI,App,IO,Util,Interpreter
1696,some cleanups to initialize empty metadata at fewer positions,fewer initialization of empty  metadata  to simplify when moving to  model .,IO,Network,Test,Util,App
1705,improve db tests,the new database tests cannot be run locally as it requires postgres and mysql to be installed. therefore  i reused the idea of the integration tests to separate the tests as  databasetest .  alterantive solution: assumetrue ( in  @beforeclass  and check whether the database is there. i opted for the separate grdle task to make it obvious when the database test is done and when not.  <s>minor thing: i added  assertutil.assertdoesnotthrow  (inspired by  to improve the output of unexpected exceptions.</s>,Util,App,DB,Test
1706,get rid of npe on travis,travis uses jdk 1.8.0_101  whereas circleci uses 1.8.0_40.  current state: there are no protected terms loaded any more. i don t know  why.,Util,Logging,App,IO
1717,fixes broken serialization of bibentries containing an @,1716. -   -   - ~~ ()~~ -  - ~~ ( (  as this is rather crucial it would be great if someone else checks what i have done  -)  to explain:       -                // get the text before the entry -                string prolog = parsedserialization.substring(0  parsedserialization.lastindexof( @ ))        did not work properly if an  @  is used within an entry.  however  determining from the complete parsed serialization where the entry begins and what are comments before the entry is not so trivial. thus  i added another attribute in the bibentry  commentsbeforeentry  in which the serialized form of the comments stored in front of the entry is directly saved during parsing the entry.,App,Util,Network,IO,Test
1720,used field properties for some operations,used the  journal_name  field property instead of hard coding the field names. as a consequence  journaltitle  is included in the integrity check and if we want to add  journalsubtitle    issuetitle  etc later it is just to change in a single position for checks  abbreviation and so on.,Logging,Util,App
1722,better layout of general preferences tab,i know i have strange font settings  but i couldn t see some preferences on my portrait screen:  ![before](  hence  i changed the layout a bit to scale:  ![after](  it is not perfect since all the stuff to the right keeps moving  even though all text is shown but still more practical than the current layout. -   () -  -   ( ()?),IO,UI,App
1733,fixed concurrentmodificationexception when removing a field in the so…,1724. really simple it turned out  no changelog since i m not sure if it was in 3.5. -  -   ( ()?),App,Logging,Network,Util,UI
1737,importer now use fileextensions enum  too  filedialogs display extension,grouped importer in fileextension created test for fileextensions file dialogs now display description and extension   (internal change) -   -   () -   ![filefilter](https://cloud.ent.com/assets/320228/17650854/a26d01ba-6258-11e6-977f-277d52442032.png),i18n,App,Network,Interpreter,DB,UI,IO,Logging,Util,Test
1738,added method singlefromstringoptional,seemed convenient  even though the source does not fully benefit from it.,Logging,App,Network,Util,Test,IO
1740,got rid of globals in tests,removed not needed initializations of  globals.prefs .,IO,Test,Network,App,Util
1743,disable some actions while no database is open,i am working on this issue   i have disabled and greyed out all menu items and toolbar buttons that should not be active if no database is open. (take a look at screenshots)  ![2016-09-05_14h06_41]( ![2016-09-05_14h08_15]( ![2016-09-05_14h08_31]( ![2016-09-05_14h08_52]( ![2016-09-05_14h09_09]( ![2016-09-05_14h09_22]( ![2016-09-05_14h11_28]( ![2016-09-05_14h11_41]( ![2016-09-05_14h11_55]( ![2016-09-05_14h12_04]( ![2016-09-05_14h12_20]( -   -  insert screenshots of menu item and toolbar item  if no database is open.,Util,Logging,UI,IO,App
1753,enable failing unit tests for javafx,fixed failing tests  (localization  duplicate or obsolete or missing keys),Logic,DB,Interpreter,Logging,App,IO,Test,Util,Network,APM,Search,UI,i18n
1755,fixed name column rendering #1499 and #1531,fixed #1499 and #1531. better to format the author names before converting latex to unicode bah!  <img width= 368  alt= capture17  src=  > -   -   -   () -  -   ( ()?),Util,Test
1756,moved a few more initialization to guiglobals.init(),no point in having a static initializer when there is an init method that is called at startup or a single line just after the init method call. -  -   ( ()?),Logic,IO,Logging,Util,UI,App,DB
1761,added more characters to converters,added a number of characters to the converters. sorted a bit so that it is easier to find the gaps.,Util
1765,export to office 2007,first fix for #1750. i will continue reworking some other fields  too and will add some more tests.     --> -   -   -  -   ( ()?),Logging,Interpreter,App,IO,Network,Util
1766,added program to generate a table of all characters and fixed some ch…,i made a small program that generates a latex table with all characters in the converter. it prints the number  the character as unicode  \symbol{nnn}   the resulting latex symbol  and the latex code  see the attached file. in this way  we can make sure that all symbols makes sense (some of the current one were incorrect). also relates to #1761 which is not currently included.  i note two thing:  1) using  \usepackage[utf8]{inputenc}  did only work for accented characters. i had a version where i printed the unicode character in the table  but that only rarely worked  although they appeared nicely in the .tex-file 2) packages and fonts are a bit of a mystery. it may be that with a better font and maybe a few more packages  more symbols are shown. [chargen5.pdf]( -  -   ( ()?),Util,App
1769,fixed bibtexmlimporter,moved location of generated files from importer to logic.importer. will merge when the tests pass. -  manually tested changed features in running jabref,i18n,Interpreter,Logging,App,Util,IO
1770,implements #1767: add help button to access new help page,(refs #1767) -  manually tested changed features in running jabref,UI,App
1772,removed/moved preferences which are constants,remove constant preference values.  relates to: 155,DB,UI,App,Network,Util,IO,Interpreter,Logic,Logging
1773,added updatefieldpreferences,less dependency on jabrefpreferences in a small part of logic,App,Util,IO,UI,Network,Logging
1774,1771 show all supported import types as default file filter,little bit tricky to get this done. would have preferred a cleaner option but i still need access to some jfilechooser methods,UI,Logging,Interpreter,DB,Search,Network,Test,App,IO,Util
1777,quickfix for import into current [shared] database,quickfix for the comments in   > jabref shows  aktualisierung verweigert. den eintrag  den sie zur zeit bearbeiten  ist auf der geminsam genutzen datenbank nicht mehr vorhanden.  for each entry.  and  > after the import  all entries appear twice.  bug occured due to change of a  bibentry  before adding it into local database.,App,Util,Logging,DB
1780,fix arxiv fetcher not working correctly,1776 remove cookie handler implementation our urldownload works without or own cookiehandler cookies  too.  edit// 3.5 worked partly for me with arxivid all unit test and manual tests work again.  i think the problem was that due to the inheritance  our cookie handler was called in every  connection. no idea why it failed with arxiv only. @stefan-kolb,Util,App,IO,Search,Interpreter,Network,Logging
1781,moved some logic preference instantiation to jabrefpreferences,less passing of jabrefpreferences for better long term architecture.,Test,Logging,UI,IO,App,Network,Util
1782,removed one globals call from metadata,one further step towards a  globals -free  metadata .,Util,Network,UI,IO,Logging,App,Test
1783,fix npe when closing the last tab,the (new?) focus feature lead to an npe when closing the last tab since there was no table to focus -   - introduced in dev version -  manually tested changed features in running jabref,App,Util
1786,moved preference constants to jabrefpreferences and renamed,all preference constants should be in  jabrefpreferences .  relates to   also  renamed some variables (not the actual preference strings).,DB,Logging,Test,Network,Interpreter,Util,App,Logic,IO,UI
1787,removed entry preview toolbar,has been disabled since long so might as well remove the code.  also cleaned up the preferences a bit. -,Network,Util,UI,Logging,IO,App
1789,replace all file dialogs with new filedialog,and set default filefilter or aggregate filefilter for all supported types. -  database from aux -  remove browseaction,App,UI
1791,removed jabrefpreferences dependency in fileutil and removed timestamp,removed some jabrefpreferences dependencies in logic. move timestamp methods to entryeditor as they are only used there.  second part from #1731  -  manually tested changed features in running jabref,App,Logging,Test,Util,UI,Interpreter,IO
1793,some improvements to layoutformatterpreferences,some suggestions from by @koppor in #1695 which i didn t fully understand then. also final globals call in  logic removed.,Logging,IO,App,Util
1794,removed some warnings and findbugs issues,- renaming variables - closing resources - checking for null - removed deprecated method - added annotations - removed unused code -  manually tested changed features in running jabref,App,Util,Test,UI,Interpreter,Search,Security,Logging,Network,IO
1796,removed jabrefpreferences from filehistory,-  manually tested changed features in running jabref,Logging,IO,Network,Test,Util,App,UI
1797,improved main table rendering when using e.g.  title/author,earlier on a name formatter was used if any of the fields in a column contained person names  now it is determined by the used field. (marginally related to #1795  or at least one step towards a solution  figuring out which field actually was used.)  before: <img width= 432  alt= capture18  src=  >  after: <img width= 527  alt= capture19  src=  >  (as can be seen  the author/editor column is still rendered as it should.) -   -   () -  manually tested changed features in running jabref,App,UI
1811,preview panel height is now saved immediately,the preview panel height is not stored when changed (only when jabref is closed) ### steps - selecting an entry (thus opening the preview panel) - changing the preview panel height - closing the preview panel - selecting an entry (thus opening the preview panel) - the preview panel has the old height  not the new one we just changed,App,UI,Util,Logging,IO
1814,made output of bibdatabase.getpreamble() optional,the code was/is a bit confusing since both null and    preamble are dealt with in the same way (not saved).,IO,Network,Util,Logging,Test,App
1815,fix delete entry keybindings bug,when using a different localization then english  setting the keybindings does not work correctly (see here #1235 ). i figured out that the problem is that the  keyevent  returns localized key texts so you can not use this to set the  keybindings (the jabref  keybindings  use english key texts). at the moment i only see two possibilities that do not end up in comparing tons of strings to manually get the english localization.   ~~first would be to change the locale to english  so that the  keyevent  returns english key texts  but i don t know what i might break with that and if the rest of the localization will still work.~~   ~~second solution would be to change the  keybindings  so that they use  keycodes  instead of strings. this would imho improve the  keybindings  system but it would mean a lot of changes in all the  keybinding  related code.~~ see the comment below for my approach  -  manually tested changed features in running jabref,App,Interpreter,Test,Util,IO,Logging,Network,Search,Logic,UI
1816,when inserting a duplicate the right entry will be selected,when you insert a duplicate in your database the editor has the wrong entry linked. ### steps to reproduce - select an entry - copy and paste it ( ctrl+c  &  ctrl+v   leave the old entry selected) - now the entry editor is open  edit any value and you ll see that the lower duplicate has changed although the upper one is selected,Logging,App,Interpreter,UI,Util,IO
1818,add check for obsolete database structure. add help popup.,issue:  -  -   ( (  ~~tests for  may fail while  is not merged.~~  _screenshots:_ ![osd3](  ![migrate-pre-3 6-db](https://cloud.ent.com/assets/15609468/17874551/a81a5da4-68cc-11e6-9fd3-977a8642cb6b.png),DB,Test,Logging,App,Util
1822,integrity checker for fields with keys,checks field containing keys so that an entry with the key exists. -   -   -  -   ( ()?),Test,Util,App
1823,fixed #1804: url field is not removed by integrity check,better to disable the check than remove the field from the entry.  -)  1804  -   -   (one may think of adding a test that no fields are removed from the entry in the integrity check  but i haven t done that here  ideally the entry should have every possible field included) -  -   ( ()?),App,Util
1826,disable incompatible properties for shared database,issue:   > database properties dialog: >     do not show  save sort order  - database sorts arbitrarily :innocent: >     do not show  database protection  - makes no sense in a shared database setting  ~~depends on:  and  -  manually tested changed features in running jabref,Util,App,UI,Logging,IO
1828,made metadata.getgroups return optional,-   (sort of  at least that it returns an optional.empty() when nothing is set) -  manually tested changed features in running jabref,Util,IO,Test,Logging,Network,UI,App,Interpreter
1830,made bibdatabasecontext.getdatabasefile() return optional,plus one (or two  i couldn t confirm the second but i think there will be an npe if starting jabref with an already existing file as an argument and an unsaved (untitled) database open) bug fixes.  this also includes #1782 as i messed up a bit -   -  -   ( ()?),Logic,Logging,i18n,Util,App,DB,UI,IO
1837,1687  month  field ascending/descending sorting swapped,when sorting according to  month    ascending / descending  are switched. -   -   -  manually tested changed features in running jabref,Test,Util,App
1838,added more field constants,i removed the field  search  which didn t seem to be used. (removed as didn t add explicit support for it  it should show up if someone uses it anyway.)  also renamed  fieldproperties  to  fieldproperty  and the method  getfieldextra  to  getfieldproperties .  all bibtex and ieee-fields are now included in  fieldnames .,Network,UI,IO,Interpreter,Util,Test,App,Logging
1842,some more optional,- parserresult.getfile() - author.getfirst()  getvon()  getjr()  and getlast()  some minor clean ups in htmlchars and latextounicodeformatter  also fixed an npe when the pattern  authfirstfull  is used and the author does not have a von-part.,App,Logging,IO,Util,Test
1844,cleanup of some import tests,fixes some encoding problems when running gradle check on win -   -   -   () -  -   ( ()?),IO,Test,App,Util
1845,fix localization entry.,replace determinated with terminated in  en .,Util,UI,DB,App
1848,allow setting the etal-string empty. implements #1841,earlier it was not allowed to set the etal-string in the authors layout formatter to be empty. however  as clear from #1841 there is at least one use case for it and it is not obvious why it wasn t allowed earlier.  a side note: it is still not allowed to set sep and lastsep empty. maybe there are good reasons for that? -   -   -   ( ()?),Util,App,Test
1856,removed globals from bibdatabasecontext,this almost worked. the penalty was that i had to (temporarily) introduce it in  fileutil. where the arbitrary extension line makes it extremely cumbersome to get around it.,Util,App,IO,UI,Logging,Network,Test
1857,fixed npe when loading a style file that has no default style,found when trying #1841 although non-related. -   -  -   ( ()?),App,UI,Util,Logging,IO
1865,fixed #1663 better multi-monitor support,-  location of windows is keep also for multi-monitor setups -  location of window is only reverted when it is not displaybale (no multi-monitor anymore/wrong preferences) -  removed duplicate maximized state logic -  dialogs are centered as overlay over the main window not always on the main screen  @jabref/developers please try on your multi-monitor setup @ work and or a @ home.  - the location of the windows should stay the same or should be adapted to a visible alternate location.  - also the maximized state should be remembered correctly on all monitors. - do you see any dialogs that are not correctly centered in multi monitor scenario (jabref on 2nd screen  dialog on main screen),Logging,UI,App,IO,Util
1867,removed last globals dependency in metadata,still a bit of logic dependencies left to be able to move to model.  all globals dependencies in  logic -test except one is now gone  so it is not possible to add an architecture test yet. it is only the globals dependency of externalfiletype that remains (good to be able to move external to logic and gui as well).,Logging,Test,App,Network,Util,IO,UI
1868,moved one method from external and fixed some minor things,move regexpfilesearch  two preference constants and removed an ignored test that wasn t close to passing (there is no trace of any nameformatter/layout in regexpfilesearch).,Network,App,UI,IO,Logging,Util
1869,download many files in one go,implements #1496 and also allows selecting multiple documents to find full text documents for. i think that it doesn t always show a dialog for every failed files when having multiple ongoing downloads.  please try it out at  -   -  -   ( ()?),IO,App,Util,Test,Logging
1870,fixed some minor things and removed the final bibentry.getfield(),some minor code issues found while browsing the source and checking warnings.  as all  bibentry.getfield()  calls were removed  i also renamed  getfieldoptional()  to  getfield() .,Logging,Interpreter,Search,App,i18n,DB,Network,UI,Util,IO,Logic,Security,Test
1872,removed some globals in tests,and in parts of shared (to possibly allow easier refactoring to gui/logic later).  (not sure if the database tests will actually pass  so better wait until everything is green,Util,App,IO,UI,DB
1874,moved bibdatabasecontext and metadata to model,not working because of grouptreenode being in logic. any ideas how to solve this? (not obvious where to set the cut between logic.groups and model here.)  the parsing and serialization is moved out from metadata  which looks a bit ugly. the alternative is to move quite a bit of classes to model  so i went for the other approach. -   -   -   () -  -   ( ()?),Logging,App,Security,Interpreter,Test,Util,Logic,DB,UI,Search,i18n,Network,IO
1876,added anykeyword and anyfield pseudo search fields,see   will add tests etc if it is a good idea and works. -   -   -   () -  -   ( ()?),Interpreter,i18n,Network,IO,DB,Test,Logic,Util,Logging,App,Search,UI
1885,doi fetcher using the new fetcher infrastructure,(please do not squash at merge to keep author ships - @koppor)  implement a new doi fetcher using the new fetcher infrastructure #1594  in this case  the two classes doitobibtex & doitobibtexfetcher has been merged into the new fetcher. -   -  manually tested changed features in running jabref,Util,Test,App
1891,tests for makelabel and some cleanups in bibtexkeypattern prefs,improved tests for bibtexkeypatternutil and made some related changes (removed unused preference and move a gui class). -,Util,Logging,Test,IO,Network,App,UI
1893,fix invalid bibtexkey freeze,1882. reference: #1863. -   -  manually tested changed features in running jabref,Interpreter,Network,UI,Test,DB,Util,IO,App,Logging,Logic
1894,implemented title and camel key modifiers,implemented #1506  -   -   -   ( ()?),App,Util
1896,more tests and some cleanups of bibtexkeypatternutil,removed some unused/unnecessary code and added a number of tests. -,Test,Util,App
1899,move files to subfolders in file directory,implementation for #1092,App,Test,IO,Util
1905,fixed problem where closing brackets could not be used as texts in la…,the first closing brace in a layout argument was interpreted as a closing brace  so it could not be used as text  despite the help file doing so.  see:  -  -  -   -   -   ( ()?),Test,Search,APM,Logic,Interpreter,DB,Network,Util,App,UI,i18n,IO,Logging
1906,check integrity year check added,#1897 added last four nonpunctuation characters should be numerals in check integrity year -   -   -  manually tested changed features in running jabref,Util,App
1907,fileutil: copy files using files methods,jabref now copies files by using java.nio package instead of java.io  see: 23,Logging,Util,App,IO
1909,fix location field not exported correctly to office 2007 xml,fix location field not exported correctly to office 2007 xml -   -  -   ( ()?),IO,Interpreter,Util,Network,Logging,App
1913,mark some methods as deprecated in bibentry and bibdatabase,-->  changes are only in bibentry and bibdatabase (the rest are propagated renames / method signature changes). -   -   -   () -  -   ( ()?),Security,Interpreter,UI,Util,IO,Logging,Network,App
1914,check integrity edition check implemented,#1912 implemented a check for the field edition. the check differentiates between bibtex and biblatex mode of the database. -   -   -  manually tested changed features in running jabref,Util,App
1915,improve find entry,i imroved the  findentry -method some more. now it always finds the correct entry (by searching it with the id and not with the canonical representation. ### steps to reproduce a situation in which the problem occurs - have multiple duplicates in a database - search them and open the results in the extra window - select one of the duplicates in the extra window but the first - in the main window always the first of the duplicates is selected,Util,Logging,Interpreter,UI,App,IO
1917,introduce cell factory helper (javafx),-->  it is relatively cumbersome to create custom (tree) table cells in javafx. the aim of this pr is to introduce helper classes which provide a simpler way to customize tables.  @jabref/stupro @jabref/stupro-qa please also review this pr  thanks. -   -   -   () -  -   ( ()?),App,UI,Util
1918,improve localizionconsistencytest to include javafx files,-->  the fxml files may contain localized strings in the form  <label text =  %localized description >  (and not  localization.lang( localized description  )). i adapted the localizationparser to also look for these kind of strings. together with #1753  the javafx branch should now build without errors.  for some reason the managejournalabbreviationsview has some problems with localized strings  although the same code works for the other dialogs. this needs further investigations (not part of this pr). -   -   -   () -  -   ( ()?),UI,Util,i18n,IO,Test
1919,translation of shared,the text  shared  after a shared database was not translated.,Logging,UI,App,Util,IO
1921,added error dialog when setting invalid main file directory,many users set file directories by copy pasting the path and not by opening the file chooser. this means invalid paths could be set in preferences -> file -> main file directory  see  for more information.  now the preferences tab won t save an invalid path anymore and notifies the user about it. also there is now an error message when trying to download a file to a directory which does not exist or can not be written to.  ![errormainfiledirectory]( ![filedownloadproblem]( -   -   -   () -  -   ( ()?),App,UI
1923,ads fetcher using the new fetcher infrastructure,recreate the ads fetcher from ads using the new fetcher infrastructure #1594 -   -  manually tested changed features in running jabref,Test,Util,App
1926,extract all integrity checker classes to it s own file,issue #1922 -   -  manually tested changed features in running jabref,Network,Util,UI,Search,Logging,App,IO
1927,some oo/lo cleanups,removed deprecated calls  renamed a few variables  and restructured the code a bit.,App,Util,Logging,UI,IO,Logic,i18n
1928,support citationstyles,implements #119.  the user can choose multiple citationstyles which he can cycle threw in the preview panel (forward with <kbd>f9</kbd>  backwards <kbd>shift</kbd> + <kbd>f9</kbd>  both are in the context menu and the menu bar) . as discussed i removed the 2nd preview. ### preview before:  ![preview_before]( ### preview after:  ![preview_after]( ### preferences before:  ![preferences_before]( ### preferences after:  ![preferences_after](  i didn t include the localization (other the english) on purpose because they create unnecessary conflicts when rebasing quite often (i push them when everything else is fine).  the help page has to be updated too. i do that as soon as this pr is merged. -   -   -   () -  -   ( (  warning: currently i read the available citationstyles at runtime. i had problems reading them from the gradle dependency thus currently they are only found when jabref is started from the jar.,Util,IO,App,Logging
1929,new fetcher,-->  a few new fetcher are introduced: - ads search based - mathscinet  - zentralblatt  also a bit of code was refactored (mainly to facilitate the development of fetcher).  -   -   -   () -  -   ( ()?),App,Network,IO,Util,Search,Test
1930,integrity check for note and howpublished field,in bibtex mode  the first word should be capitalized for the fields note and howpublished. in biblatex mode  there are no restrictions for these fields.  see also #1914 -   -   -  manually tested changed features in running jabref,Logging,Logic,Test,Interpreter,Util,i18n,IO,Network,UI,App
1931,export number field as number if not patent or issue in office 07 xml,add : export key field (not to be confused with bibtexkey field)   add test for custom entry type and key field  refs #1851   documentation has to be updated.     --> -   -   -   () -  -   ( ()?),App,Util,UI,Logging,IO
1934,removed external dependency in logic,an alternative to #1924 : hard coded  ps  and  pdf  as file type names.  still some methods that can be removed in  externalfiletype  (the original thing done in #1924 .  i created three  gui  packages: -  externalfiletypes  for things related to  externalfiletype  -  externalfiles  for things (primarily) related to the actual files -  filelist  for things related to  filelist  -,Util,App,IO
1940,added default icon to all javafx dialogs that inherit from fxalert,this will add a small jabref icon to the upper left of every dialog that is a subclass of fxalert. also the keybindings dialog has used the localization strings from the menu files which displayed an and ( & ) sign in front of the actual tranlsation. i changed them to use the  normal  localization files and updated the localization files as well. (there were quite some keys missing and/or not available)  this is the current state of the dialog (applies to all javafx dialogs) ![keybindingsnoicon](  and after the change ![keybinding]( ![keybiningssave]( ![journalduplicate]( ![about]( -   -   -   () -  -   ( ()?),App
1942,mods importer,regarding: #1920   adds an importer for the mods (xml) format. the importer is written with a jaxb parser. details on the format and the newest xml schema can be found [here]( i ve used the newest schema (version 3.6). -   -   -  manually tested changed features in running jabref,App,Util,IO,Logging,Interpreter
1944,try around with xmlunit,-->  see #1943 for details  -   -   -   () -  -   ( ()?),UI,Util,i18n,Logic,Logging,IO,Network,Interpreter,App
1947,redesigned about dialog in javafx,as discussed in #968 the about dialog is still not satisfying and therefore i redesigned it. the new design is a more flat like design with all important information in one place. the version still clickable and copies the version information to the clipboard and the logo is a hyperlink to www.jabref.org. i also changed the copied version string to include jabref  java and os version so it is the same as in the master branch.  ![screen shot 2016-09-10 at 14 59 58]( -   -   -   () -  -   ( ()?),Util,Logging,App,Network,Interpreter,Search,i18n,UI,Security,IO,Logic,Test
1948,fixed some warnings in eclipse,some code cleanups,Network,Logging,App,UI,Util
1950,towards hierarchical keywords,-->  this pr is the first step towards supporting hierarchical keywords #628.  -  refactor the keyword-related code to use new classes  keywordlist  and  keyword   -  unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877 -  move keyword delimiter from preferences to metadata (database properties) -> new pr -  add hierarchical delimiter and change parsing logic in  keywordlist  accordingly -> new pr -  change ui to support hierarchical keywords -> new pr  note: i also moved the stringutil class to model (in some sense it is jabref s own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) ). -   -   -   () -  -   ( ()?),Network,Test,App,Util,IO
1951,adjusted key bindings according to master branch,recently the keybindings at the master branch have been changed with #1525 . this pr will change the keybindings in the javafx branch accordingly. -   -   -   () -  -   ( ()?),App
1952,fix wrong path in error message,1949  an error message directs to the wrong preference tab. -   -   -   () -  -   ( ()?),Search,Network,Interpreter,UI,Security,IO,App,Logging,Test,Util
1953,add key shortcuts to search result frame and main table,- <kbd>pos1</kbd> / <kbd>home</kbd> now select the first/last entry in the main table and the search result frame. - <kbd>up</kbd> / <kbd>down</kbd> / <kbd>tab</kbd> / <kbd>shift+tab</kbd> in the search result frame have now the same functionality as in the main  table.,App,IO,Logging,Util,UI,Interpreter
1955,merged master into javafx branch,updating javafx branch to include all the latest changes from the master branch. -   -   -   () -  -   ( ()?),Network,UI,Test,Security,Logging,App,Util,IO,Logic,Interpreter,i18n
1961,fix when editing a bibentry field the searchbar would be focused,fix for #1549 ### steps to reproduce: - select a bibentry - edit a field - save the change (eg. click outside the field) - the searchbar would be focused,IO,Logic,Util,Logging,i18n,App,UI
1962,minor improvements to the javafx about dialog,follow up of #1959. @bartsch-dev had a great idea to use his  version  class to get the changelog url since it already provides a method for it. i only adjusted it slightly so dev versions will be redirected to  links will also stay gighlighted after they have been visited.  ![normal version](  for snapshot versions a new label will be added for the complete version string. ![snapshot]( -   -   -   () -  -   ( ()?),IO,Network,App,Util,Logging,UI
1968,refactored remotepreferences,as logic should not reference  jabrefpreferences .,Test
1969,refactored proxypreferences,fewer dependencies to  jabrefpreferences  in  logic .,Interpreter,IO,UI,App,Util,Network,Logging
1970,1958: verbatim url field is no longer checked for html encoded chars,-   -   -  manually tested changed features in running jabref,App,Util
1976,add search test,this pr updates  to the most resent jabref code. - tests for search expressions - ui test for the search  this could help create tests for a solution for #1975   meta: i found this using  (refs 1303),Test,Util,App
1981,icon does not change when toggling global search,issue: #1979,i18n,UI,Network,App,Util,IO,Logging,Logic,Interpreter
1982,fix failing test from #1976,there was a failing test in #1976. this should fix it.,Test,App,Util
1988,german translation fix,the german translation of jabref has some issues  have a look at the following screenshot:  ![file-open](  the function to open a database is called  datei öffnen  the displayed hotkey is  f4 . in the english version of jabref the file menu looks like this:  <img width= 246  alt= openfilemenu  src=  >  as you can see the right hotkey for this function should be ctrl + o . also  the word database gets translated as  datei  instead of  datenbank .  this pr aims to fix this issue by rewording the translation. every english occurrence of  database is now translated as  datenbank . this is what it looks like now:  <img width= 304  alt= openfilemenu  src=  > -   -  -  internal qs,Test,IO,Network,Util,App,i18n
1989,rewrite mods exporter and add test for it,regarding: #1920  rewrite the mods exporter with a jaxb parser.  details on the format and the newest xml schema can be found [here]( i ve used the newest schema (version 3.6). this pr uses the same gradle script and schema as in #1942 .  -  internal qs -   -  manually tested changed features in running jabref,Interpreter,App,Security,i18n,IO,Search,Test,Network,Logging,Logic,Util,UI,DB
1991,some minor code cleanups,not thrown exceptions etc.,Search,UI,Network,Util,App,Logging,Test,IO
1995,fix search mixed from contains and grammar,-->  as observed by @oscargus in  certain mixed search queries does not work (for example   fruity and keywords=apple ). this pr fixes this issue.  side-effect: simple queries as  fruity  are also recognized as  grammar based  (which is why i had to change a few tests). however  there should be no major performance decline since the query parsing is quite fast and for the actual search in the end the same code gets called. -   -   -   () -  -   ( ()?),App,Util,Search
1997,move stringutil to model,-->  in #1874 part of the stringutil was already moved to the model package. with this pr the whole class is moved. i think it does not make sense to have two classes with the same purpose but different locations.   the stringutil class is rather big and we should consider splitting it or moving some parts of it to different classes.  -   -   -   () -  -   ( ()?),Logging,Util,App
1998,introduce convienent interface for id-based fetcher,-->  follow-up from #1929. since the changes in this pr are completely parallel to #1929  i will merge it as soon as the build passes. -   -   -   () -  -   ( ()?),App,Logging,Util
2004,remove help suffix at help pages,implements  in jabref.,Test,Network,App,Util,Search
2005,check avaiable help lanugages when opening specific help page,-->  if help lang not avaiable use english fix for #1937 -   -   -   () -  -   ( ()?),App
2009,implementation of liveupdate for postgresql & oracle systems,related to:   this feature extension called liveupdate enables shared databases (using postgresql or oracle) to be synchronized without any user interactions. thus it also reduces the conflict occurrence radically.  user is going to be informed by a popup when working on an entry which is removed from shared database simultaneously. -   -   -  -   ( ()?),Util,DB,App,Logging
2014,add restoration functionality for shared database,related to   > session restore: jabref should open all  [shared]  tabs after startup.  -> decision: open from last connection. -   -   -  -   ( ()?),Network,App,Security,Util,Logging,Interpreter,DB,Test,Search,IO,UI,Logic
2015,implemented integrity monthchecker,monthchecker added. #2012 -   -   -  manually tested changed features in running jabref,Util,App
2023,revert deprecation,following the discussion at #1913  that pr should be reverted.  this pr reverts the  @deprecations   but tries to keep the other improvements.  i m not sure whether  bibentry.getresolvedfield  should be kept.,Network,Security,Logging,Interpreter,Util,Test,UI,IO,App
2024,prohibit more than one connections to the same shared database,bonus extension to   ~~:warning: depends on  do not merge before  gets merged in.~~  _screenshot_:  ![snapshot4]( -   -   -   () -  -   ( ()?),DB,Security,Network,IO,Interpreter,Util,App,Logging,UI,Test,Logic,Search
2027,disable context menu action on selection of multiple entries,if multiple entries are selected  some  context menu  toolbar and menu actions are now disabled. disabled actions: - print entry preview - attach file - edit entry - open folder (enable only  if file exist) - open file (enable only  if file exist) - open url or doi (enable only  if url or doi exist) - merge entries (enable only on select of two entries)  these actions make no sense to be used when there are multiple entries selected. for further information have a look at #463   context menu before change:  ![2016-09-22_15h50_28](  context menu after change:  ![2016-09-22_15h50_45](  edit menu before change:  ![2016-09-22_15h51_28](  edit menu after change:  ![2016-09-22_15h51_55](  bibtex menu before change:  ![2016-09-22_15h52_21](  bibtex menu after change:  ![2016-09-22_15h52_44](  quality menu before change:  ![2016-09-22_16h34_33](  quality menu after change:  ![2016-09-22_16h34_52](  tools menu before change:  ![2016-09-22_16h35_17](  tools menu after change:  ![2016-09-22_18h08_02](  toolbare button  edit entry  before change:  ![2016-09-22_15h53_17](  toolbare button  edit entry  after change:  ![2016-09-22_15h53_44](  toolbare button  merge entries  before change:  ![2016-09-22_16h38_10](  toolbare button  merge entries  after change:  ![2016-09-22_16h37_00](  please take a look for merge. thx 😄  -   -   () -  -  internal qs,UI,App,Logging,Util,Interpreter,IO
2028,fix ris import,regarding: #1647  doi import should now work with the do field. also i ve added some fields  that are available in the [ris specification]( i ve also done some code cleanups. #1074 should be also fixed now. i ve added the scopus file as test file. -   -  manually tested changed features in running jabref,IO,Util,App,Interpreter
2031,fix localization task hints,fixes: #2029  replaces hints to the old gradle localization task names with the new ones.,IO,Util,Test
2033,fix search syntax error,this should fix following exception which occurred since short.      12:51:21.727 [awt-eventqueue-0] warn  net.sf.jabref.model.search.rules.grammarbasedsearchrule - search query invalid org.antlr.v4.runtime.misc.parsecancellationexception: line 1:0 no viable alternative at input  <eof>   at net.sf.jabref.model.search.rules.grammarbasedsearchrule$throwingerrorlistener.syntaxerror(grammarbasedsearchrule.java:50) ~[main/:?]        at org.antlr.v4.runtime.proxyerrorlistener.syntaxerror(proxyerrorlistener.java:65) ~[antlr4-runtime-4.5.3.jar:4.5.3]   at org.antlr.v4.runtime.parser.notifyerrorlisteners(parser.java:564) ~[antlr4-runtime-4.5.3.jar:4.5.3] at org.antlr.v4.runtime.defaulterrorstrategy.reportnoviablealternative(defaulterrorstrategy.java:308) ~[antlr4-runtime-4.5.3.jar:4.5.3]        at org.antlr.v4.runtime.defaulterrorstrategy.reporterror(defaulterrorstrategy.java:145) ~[antlr4-runtime-4.5.3.jar:4.5.3]      at net.sf.jabref.search.searchparser.expression(searchparser.java:283) ~[main/:?]      at net.sf.jabref.search.searchparser.start(searchparser.java:108) ~[main/:?]   at net.sf.jabref.model.search.rules.grammarbasedsearchrule.init(grammarbasedsearchrule.java:91) ~[main/:?]     at net.sf.jabref.model.search.rules.grammarbasedsearchrule.validatesearchstrings(grammarbasedsearchrule.java:108) ~[main/:?]   at net.sf.jabref.model.search.rules.searchrules.getsearchrulebyquery(searchrules.java:12) ~[main/:?]   at net.sf.jabref.logic.search.searchquery.<init>(searchquery.java:29) ~[main/:?]       at net.sf.jabref.gui.search.globalsearchbar.getsearchquery(globalsearchbar.java:348) ~[main/:?]        at net.sf.jabref.gui.search.globalsearchbar.clearsearch(globalsearchbar.java:271) ~[main/:?]   at net.sf.jabref.gui.search.globalsearchbar.performsearch(globalsearchbar.java:304) ~[main/:?],Util,UI,i18n,App,Logic,IO,Logging
2034,fix bad web search error messages,1542  i rewrote the error messages when the fetchers fail (or added them).,Util,Interpreter,Search,Logging,App,Network,IO
2039,hotfix for indexoutofboundsexception in maintable,hotfix  maintable  using  optional .  steps to reproduce the bug: - open two jabref instances a and b - connect a and b to a shared database supporting liveupdate - create a new entry in a - open the entry and change the value of a field like author - delete the new entry from b and confirm the upcoming dialog in a   maintable  and  entrymarker  contains a lot of ugly code which produces such errors and can be refactored. @bartsch-dev shows interest to do this probably in the next week. :+1:,App,Interpreter,IO,UI,Logging,Util
2040,right click menus should allow copying doi url,right clicking on the doi field in the main table or the entry editor shows a sub menu where the user can copy the url of the doi to the clipboard. refs #490  right click menu when doi field isn t present ![rightclick](  right click menu in entry editor when doi field is not empty ![entryrightclick](  right click menu in entry editor when doi field is empty ![emptydoi]( -   -  add the menu to the entry editor -   -   () -  manually tested changed features in running jabref,App,UI,Util
2043,use parallel stream while searching,with this the search should be much faster on platforms where multiple cores are available. (#1993),Util,IO,Test,App,Interpreter
2044,remove unsafe operation from treenodetest,-->  removes build warning  > note: /home/travis/build/jabref/jabref/src/test/java/net/sf/jabref/model/groups/treenodetest.java uses unchecked or unsafe operations. > note: recompile with -xlint:unchecked for details. -   -   -   () -  -   ( ()?),Test,App,Util
2045,fix logged warning when searching for nothing (i.e. clear search),--> -   -   -   () -  -   ( ()?),Util
2051,create sensible default settings for  enable save actions  and  cleanup  dialogs,sensible default settings for  enable save actions  field of database properties dialog and  run field formatter  field of cleanup eintries dialog are now identical 🐨 please take a look for merge. thx 🐰  - change the default setting - by click on  reset  button:  ![2016-10-15_23h31_31](  ![2016-10-15_23h31_45]( - change the default setting - by click on  recommend for bibtex  button:  ![2016-10-15_23h35_28](  ![2016-10-15_23h36_12]( - change the default setting - by click on  recommend for biblatex  button:  ![2016-10-15_23h38_27](  ![2016-10-15_23h38_40](  for further information have a look at:  😄  -   -   () -  -  internal qs,App,UI,Util
2055,fix ignore version,2054   made a rookie mistake and ignored the already ignored version again. reworked the preferences to the new design.,Network,App,DB,IO,Util,Logging,UI,Logic
2059,implemented integrity nobibtexfieldchecker,background: converting to biblatex format changes journal to journaltitle. because journaltitle is a biblatex field only  integrity check now reports a problem for a journaltitle field in a bibtex mode database. -   -   -   () -  -   ( ()?),Util,App
2066,medline fetcher using new infrastructure,rewrite the medline fetcher. refs #2012  -   -  manually tested changed features in running jabref,App,Util,Test
2067,undo #2002,undo #2002. see #2064.,App,IO,Logging,UI,Interpreter,Util
2069,fix changing the font size not working when importing preferences,i initialized the fontselectordialog with the variable that keeps changes made in the dialog instead of the current globals. this seems to fix both issues named here #1808  -   -  manually tested changed features in running jabref,Test,Search,IO,UI,Interpreter,Network,Logging,Logic,App,Util
2070,fix execution of preference migrations,follow up of #1704 to fix the key pattern part of #2021  preference migrations are executed too late after other operations already worked on the prefs node --> execute them directly in the main class.,Logic,Interpreter,Util,App,Logging,DB,UI,IO,Network
2071,tooltips now working in the main table,fixes:   tool tips in the main table now work as expected.  if the content of the cell is too big to be rendered in the cell itself it will be shown as a tool tip. what is more important  the original tool tip or the content?,IO,Interpreter,App,Logging,Util,UI
2072,fix number column alignment,fixes:   now the number in the  # -column is always left aligned.,Util,App,Interpreter,Logging,UI,IO
2075,other fields fix and changes,these are the claimed improvements: - removed optional fields from  other fields  (bibtex) - removed deprecated fields from  other fields  (biblatex)  see: #2064 -   -   -   () -  -   ( ()?),Util,Logging,IO,UI,App
2077,revert  rewrite mods exporter and add test for it,reverts jabref/jabref#1989  there is a java 8 problem with dependency on internal java code:  import com.sun.xml.bind.marshaller.namespaceprefixmapper,IO,Interpreter,App,Network,Logging,Util,Test
2082,quick fix google scholar entry fetching,google scholar fetching was broken again (see #1886)  with this fix at least getting the first 10 search hits is possible again.   configuration is no longer possible in the current form and google generally limits the responses (per page) to 20 hits (however  even using this will cause a captcha challenge for jabref).  as only 10 hits are allowed a rewrite to the new fetcherinfrastructure should now be possible (thus  omitting the 2-step approach). -   -   -   () -  -   ( (   -  update of  might be useful to indicate that only 10 hits are (currently) shown,Logging,Interpreter,Network,Security,App,Util,IO
2087,fix npe in the previewpanel,fixed a npe which rarely appears on window  more often on linux (b/c of the  invokelater  in line 299),IO,Util,UI,App,Logging
2088,rewrite mods exporter and add test,follow up of #1989 and regarding #2078. rewrites the mods exporter with a jaxb parser.   in comparison to the last pr  i do not longer rely on the namespaceprefixmapper. i added an annotation in the package-info.java which also does the namespace prefix mapping. only problem is that this annotation cannot be automatically generated by a gradle or ant script  that s why added the package-info.java to src/main/java/net/../mods. -   -  manually tested changed features in running jabref,App,IO,Test,Util
2094,make all files selectable in file chooser dialogs,make all files selectable in filechooser   fixed #2021 -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,UI,App,Util
2097,rtfchars fix,rtfcharstest had some ignored test. so i looked into it and made the necessery changes. i added some of the tested but missing special characters. i also modified the  expected  and  actual  vaulues where needed (because to my understanding of this topic  some values were wrong). since i am not 100% sure if everything is correct  comments are appreciated.   also i added  translator  which takes the unicode and transforms it back into its root letter. e.g.  é - > \\u233e   my final change is that i removed duplicate keys inside the rtfcharmap. -   -  tests work for changes -  internal qs -  double check mappings,Interpreter,App,Logging,IO,UI,Util
2099,clear searchterm with esc from main table if neither preview nor editor is open,at request of @koppor.  when hitting  esc  in the main table and neither preview nor editor is open the search term will be cleared.  since the action in the main table overshadows the actions in the preview-/editorpanel i have to call the  close()  method manually (same keybinding).,IO,i18n,Logging,UI,App,Util,Logic
2101,rewrite google scholar fetcher to new infrastructure,follow up of   google scholar search fetcher now use the new infrastructure - old class  googlescholarfetcher.java  with its excessive interweaving with the ui has been removed.  new implementation uses the cookie approach @tobiasdiez proposed in   as i had no problems with captchas during development i ll check whether getting more than the 10 hits of the first result page is possible -  get more hits? - ~~~~ -   - ~~ ()~~ -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Test,Util,IO,Network,App
2102,store latex-free fields in bibentry,based on the discussion in #1993 and the work of @bartsch-dev in #2091  this pr aims to improve the speed of search by storing latex-free versions of field values in a cache. it aims at a balance between better performance and an acceptable memory footprint. basically  all ideas from #1993 are implemented: a cached store of latex-free fields which is computed on demand  string internalization  and regex performance improvements in  latextounicode .  here are measurements with the new branch:      benchmark                             mode  cnt         score        error  unit benchmarks.latextounicodeconversion  thrpt   20    119823.078   2063.425  ops/s benchmarks.parallelsearch            thrpt   20       735.890    113.685  ops/s benchmarks.search                    thrpt   20       397.807     28.557  ops/s      the memory footprint of a database with 6500 entries is ~ 912 mb on my machine  and on current master:      benchmark                             mode  cnt         score        error  unit benchmarks.latextounicodeconversion  thrpt   20     94367.718   2570.784  ops/s benchmarks.parallelsearch            thrpt   20        58.204       3.285  ops/s benchmarks.search                    thrpt   20        30.531       0.952  ops/s      the memory footprint of the same 6500 entry database is ~ 888 mb.  all in all  this looks like a hefty performance improvement at little memory cost. -   -  manually tested changed features in running jabref,Network,Util,Logging,App,UI
2106,crash after saving bibtex source with parsing error,2104. -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,App,Test,Util,UI,Logging,Network,Logic,Interpreter,IO
2112,refactoring: completey typed metadata,-->  the metadata class is completely rewritten and now only uses typed fields instead of a map of serialized strings. serialization and parsing now happens in the dedicated metadataserializer/parser classes. for this also some of the cleanup classes had to be moved to the model package.   final big refactoring pr from my side :smile:   -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Test,App,Util
2114,ctrl-s parsing error message,2109. ctrl-s doesn t trigger parsing error message. problem: conflict of local shortcut (of the entry editor) with the global shortcut. solution: local shortcut removed. (the action assigned to local and global shortcut is essentially the same (save database)) -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Util,App,IO,Interpreter,UI,Logging
2121,fix codecov issue,fix for #2050 i ve added a gradle task  that copys the resource to where they should be.,Util,App,IO,Test
2124,unify parserexception and parseexception,we have two very similar exceptions in the code that are used for several very similar purposes:  parseexception  and  parserexception . this pr replaces the latter with former. additionally   parseexception  is moved from  model  to the exact same place of  parserexception . its prior position in  model  was architecturally misplaced and its usages in  model  have been replaced with  illegalargumentexception   which is more suitable for the actual purpose there.  no need for a changelog entry  this is purely internal.,Network,Util,IO,Test,App
2131,add shortcuts to context menu,fixes:   added shortcuts to the context menu (just displayed them  didn t create new ones) and refactored the context menu a little bit.,App,UI,Interpreter
2132,remove some unicodetolatex uses,i removed some uses of the  unicodetolatexformatter  and used the latexfreefield directly.,Search,App,Util,Network
2141,code cleanups,removed some unused arguments. used constants from top level definition.  i also added some comments to consider during the review.,Util
2145,change download url to downloads.jabref.org,we want to get back control of the download site we offer. thus  we created  ( with a redirection to fosshub.  refs #1670,Network,Logging,IO,Util
2149,ctrl+f in search field highlights everything,implements/fixes 103,i18n,Logic,UI,App,Logging,Util,IO
2151,fix duplicationchecker and key generator,fixes   the duplication checker was faulty and didn t catch all the cite keys. there needed to be used a special method in the basepanel which wasn t used at all. i registered the duplicationchecker with the eventbus which now gets notified when an entry changes  gets added  or removed.  this fixes the automatic key generation which before had wrong information on what cite keys exist.,Util,UI,App
2152,add test case for other and unknown type,regarding: 29](  i ve added a test case for reading and writing a file with other and unknwon type.,App,Util,Network,IO,Test
2154,doi resolution ignore,i implemented a missing test case  notreturnanythingwhenmultiplelinksarefound   that has been ignored. -  internal qs,Util,Test,Network,App,IO
2161,fix group drag and drop,this 2119 and #2098  - ~~ ~~ introduced in dev builds - ~~ ~~ - ~~  ()~~ -  -   ( ( - ~~ if you changed the localization: did you run  gradle ate ?~~,Interpreter,App,Logging,Util
2162,specialfields refactoring,rewrite of #1964   this kept bugging me  so i invested some time in it. it integrates the changes from #1964 and turns the different special fields into enum values. the different classes composing special fields are now aligned to our architecture. the enum  specialfield  has to go to  logic  as it involves quite some localization.  there are still some possible improvements based on this pr  in particular: - outsourcing localization from  specialfield  so that this class can be moved into  model  (this is not necessarily needed  though) - rewriting  specialfieldsutil   which is already marked as deprecated.  to maintain a reasonable scope for this pr  these improvements should be done in separate new prs. they should now also be much simpler based on the new structure. -  manually tested changed features in running jabref,Interpreter,UI,App,Util,IO,Search,Network,Logging,Test
2163,fix highlighting issues,2133.  earlier  highlighting was done manually by adding tags to matches in the html text being sent to the pane. instead  i have opted to make use of the highlighting features of the jeditorpane class. this gives the additional benefit that the highlight colour is changed automatically based on the system theme.   changes  - created jeditorpanewithhighlighting class - removed matchhighlighter class and its tests - removed highlighting related tests from layoutentrytest -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Test,IO,App
2165,support \r when using citationstyles,fixes:   the citationstyle library cannot handle  \r  thus i parse to a  space . i also added another return (and localization) to always have a feedback for the user.,Logging,Test,Util,App,IO
2167,update vietnam translation,translation in vietnam language is on progress 🎅: - complete translation the entryfield for bibtex and biblatex   - insert new localization.lang keys - complete translation for shared database -   -   () -  -,UI,App
2169,fix failing ads test,added missing fields  2168,Test,App,Util
2175,fix memory leak in entry editor,this is to 2166.  list of changes - - updated microba to latest version - unregister entryeditor as a listener to entry  - implement searchqueryhighlightobservable using entrybus - make entryeditor unregister all fields that are listening on the global search bar.,App,Interpreter,IO,Util,Logging,UI
2178,improve titlecaseformattertest,i had issues with  [title]  until i found that i should use  [title:capitalize] . during the search  i thought   title  was functioning wrong  but it doesn t. nevertheless  i added a test case and in parallel tried to change so that the one-assert-per-test-case rule holds.,Util,Logging,IO,Test,App,UI,Network,Interpreter
2179,clear bibtexkey exception,2177. nullpointerexception caused by clearing bibtexkey field in entry editor. -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,UI,Logging,IO,App,Interpreter,Util
2187,fixed close entry editor block,something went wrong with the old pr dealing with this issue. so here a new pr. fixes an issue with closing the entry editor. (i ve discarded some additional save action  because this might not be the desired behaviour.) here again the bug: fixed close action of entry editor not working after parsing (and invalid field) error corrected. 1. generate parsing error in source tab 2. save database 3. error message > edit 4. correct parsing error 5. close entry editor (x) blocked -   -   -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Logging,IO,App,Util,Test
2193,google scholar: add better error message for reached traffic limit,title already explains the purpose.  as proposed by @tobiasdiez in  a more specific error is now shown if the fetching is failing due to a redirect. - ~~ ~~ - ~~ ~~ - ~~  ()~~ -  -   ( ( - updated text directly in the  gh-pages  branch:  -  if you changed the localization: did you run  gradle ate ?,Network,Logging,Search,IO,Util,App
2194,improve autosave and backup feature,applies the remaining feedback from  and fixes  -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,Test,Security,IO,Network,Interpreter,App,Util,DB,UI,Logging,Search
2195,enable version checker to recognize alpha/beta builds,the update checker is now able to handle alpha/beta builds. the alpha/beta tag has to be appended after the version number with a prepended  -  (eg.  3.7-alpha    3.7.1-beta ). i also suggest that the  dev  tag gets prepended by a  -  to make it easier to read (especially if its a pre-stable version (eg.  3.7-alpha-dev--snapshot )). currently this isn t necessary but it is supported.  the versionchecker only suggest non-stable builds if the currently installed version is also not stable (that s why i need to grab all the available versions now).,Network,Util,IO,Logging
2196,fix for #2184: add space after separator,seems to be as simple as that.  change has been introduced as the delimitor is no longer saved as a string      but as a  character  which chops away the space after the comma. - ~~ ~~ introduced in dev builds -   - ~~  ()~~ -  - ~~  ( ( - ~~ if you changed the localization: did you run  gradle ate ?~~,Util,App,Test
2198,integrity hotkey,the  check integrity -action seems to be in need of a hotkey. (see #1908) i used  ctrl + f8  for this action  because f8 is currently used to cleanup entries. these 2 functions seem to be related so it would make sense to group them. -   -  -  if you changed the localization: did you run  gradle ate ? -  internal qs,Test,App,Util
2199,refactor entryeditor & entryeditortab,i refactored many comments (some of them even referred to variables which do not exist anymore). i removed some unused methods  replaced some code with already existing methods and refactored a switch-case.,App,UI
2202,refactoring for pr #2051,@koppor refactoring follow pr #2051. take a look for merge pls 😄,Test,App,Util
2212,improvements to the javafx error console,the log messages in the list view of the error console can now be selected and copied. the error message will also automatically scroll to the newest log message. refs #2210,UI,Logging,Network,Util,App,IO
2213,fix strange styling behaviour of the error console,this should fix the wrong styling behaviour of the different log messages when scrolling. it seems like the styling error came because we never resetted the style classes of the cells when adding new ones. i also created a generic listfactory class (similar to #1917) so this issue won t occur in the future. refs #2210,IO,UI,Logging,Interpreter,App,Util,Network
2217,autosave for shared databases,this _ui_ extension makes _shared databases_ (and also _autosave_ functionality) more popular as the combination of those two makes it possible to synchronize _bib_ files on the local file system  without saving them manually.  _screenshot:_ ![shd_autosave](  _changes:_ remove _autosave for shared databases_ option from _preftab_ and add an asking panel into connection dialog.  change the name of  open shared database -menu entries to  connect to shared database . -   () -  -   ( ( -  if you changed the localization: did you run  gradle ate ?,App,UI,Util,DB
2225,fix editor freeze,possibly fixes: #2220.,UI,Util,App,Logging,IO,Interpreter
2226,fix for #2218: reenable ads fetcher,(see #2218),Network,App,Util,Search,IO,Test
2229,fix medline fetcher by using https,fix for #2228,IO,Network,Util,Interpreter,Logging,Search,App
2234,global search usability improvements,some minor changes:,Logic,Logging,UI,App,IO,i18n,Util
2236,biblatex mode: add month and year field to deprecated tab,issue #2233: in biblatex the  date  field is recommended. for backward compatibility the bibtex fields  month  and  year  are also accepted. i ve added both fields to the deprecated fields tab  although the year field is present in the required fields tab too.,Logging,Interpreter,UI,IO,App,Util
2248,moved return out of for-loop,i found some time to look into the code. it seems  only the last conditional statement was accidentally placed inside the for loop.,IO,Test,Util,App
2262,change log level to debug,fixes  a side aspects mentioned in #2249.,Logging,Logic,App,Util
2265,fix translation warning,in the javafx branch  jabref outputs,App
2266,when an isbn is not available on ebook.de  the error message is more clear.,when fetching a valid isbn from ebook.de  but the site has no data of the isbn  the error message just showed  filenotfoundexception . this pr fixes that.,Test,App,Util
2278,urls can be passed as command line arguments to the import,if an url is passed as an argument to the  -import  or  -importtoopen  command in the console  then the file is first downloaded and afterwards imported as usual. this functionality will enable jabfox to pass pdfs directly to jabref for importing.,App,IO,Test,Security,Interpreter,Logging,Network,Util
2283,implement #1359: collect telemetry,in this pr  [microsoft azure application insights]( is used to record the following information about how jabref is used:,IO,UI,Util,App,Logging
2287,add fallback exception handler,previously  uncaught exceptions were simply ignored by our logging framework. with these changes  they are properly logged in log4j.,Logging,Util,App,UI,Interpreter,Network
2291,javafx some small improvements,-->,Util,i18n,IO,UI,Test
2295,fix  no suitable driver found,i got the error message  no suitable driver found for jdbc:pgsql://fizzy-cherry.db.elephantsql.com:5432/zdndklfq  when using the session restore of shared databases of jabref. google pointed me to   which states that all drivers should be loaded before they are used.,Logging,Util,App,DB
2296,remove duplicate code getresolvedfieldoralias,the method getresolvedfield was in bibdatabase and in bibentry with identical same code. this pr removes the copy from bibdatabase.,Security,App,Interpreter,Logging,UI,IO,Network,Util
2300,fix local metadata synchronization (fixes: #2219),issue: 2219.,App,Logging,Util,IO,DB
2301,readd drop down content selectors,first attempt at readding the code for,Logging,IO,App,UI,Util
2302,fix initialization of a shared database,fixes 2300#issuecomment-261801274.,Util,DB,App,Logging
2303,update citeproc dependency to 1.0.1,see https://github.com/michel-kraemer/citeproc-java/releases,Test,App
2306,adapt csl tests to crlf and lf,the discussion at  revealed that  \r  does not appear as line separator alone. thus  our tests should be adapted accordingly.,Test,App
2310,replace usages of throwable with exception,reviewing #2307 i noticed that  baseaction  and  abstractworker  use  throwable  in their method signature. i cannot find a reason for linking to the highest possible error type here. after all  this has nothing to do with jvm errors or the like.,App,UI,IO,Util,Logging
2314,rework dblpfetcher to new structure,also 2311,Util,App,Search,Network,Test
2317,cleanup emacs code,- this pr removes support of emacs<23 as this version of emacs disappeared even in [debian/stable](https://packages.debian.org/stable/emacs).,Util,IO,Logging,UI,Network,App
2320,installer code signing #1879,-,Logging,Util,Test,Network,Interpreter,i18n,App,UI,IO,DB,Logic
2328,add bibtex key deviation check,refs #2206,IO,Util,Network,Logging,Test,App
2331,improve entrytype customization,goals:,Interpreter,Network,IO,App,Util,Logging,UI
2333,seperate tests by categories  not by different folders,this implements 181,i18n,Test,Util,App,IO,DB,Search,Network
2339,fix biblatex cleanup for date field,this 2335,App,Test,IO,Util
2344,follow up for #1323 batch fulltext downloader,- 	rename menu item to plural for finding full texts,App,UI,Util,Logging,IO
2348,1446 only add non empty paths,suggest current bib folder when no defaults are set.,IO,App,Util
2349,integrity checker improvements,follow up for #1779,UI,Logging,Network,Security,Interpreter,IO,Util,App
2352,remove old jdk bug as it should be fixed,see http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4760081,IO,UI,App,Util
2358,2012: use bibtexformat for month field in medlinefetcher,2012,Test,Util,App
2361,fix a few group related issues,this pr 2334  #1873 and #1681.,UI,Test,Util,App,IO
2362,[fx] review about dialog,-->,Logic,Test,IO,Interpreter,APM,UI,Network,Util,Logging,DB,i18n,App,Security,Search
2364,be more friendly when using journal alias field,i d like to copy bibtex entries to biblatex databases and vice versa. when using required fields only  this works perfectly. when in biblatex mode  jabref does not display the value of  journal  in the required fields  because jabref demands the field  journaltitle . this is not only confusing for me  but also for other users: #2209.,App,Test,Util
2368,never manually set id of a bibentry,the internal id of a bibentry should never be set manually. closes #1721,Util,IO,App
2371,reenable more tests,-  corrections of wrong bibtex serializations: i inverted the tests for the file field so they test if the fields are not changed for \n and \t.,Network,DB,Logic,IO,Security,UI,App,Logging,i18n,Interpreter,Search,Test,Util
2372,relevance and read status field actions were switched,2370,App,Util
2374,include  as fallback for the ebook.de fetcher,the fetcher offered by ebook.de does not offer bibtex for all valid isbns. this pr adds  as fallback for the ebook.de fetcher,Logging,Interpreter,Test,DB,UI,App,Network,Util,IO
2375,preserve % sign inside bibtex fields via cleanup,2011,Logging,Network,IO,App,Interpreter,UI,DB,Test,Util
2377,[fx] review key bindings dialog,-->,UI,Util,App
2383,[fx] review abbreviations dialog,-->,UI,App,Util,Logging,IO
2384,[fx] use native file dialog,-->,IO,App,Util,UI
2386,review mathscinet tab,-->,Logging,IO,Network,UI,App,Util,Interpreter
2387,fix color,-->,UI,IO,App,Util
2388,rename  xmp data  to  xmp-metadata,i worked with the  import inspection dialog   which offers to offer entry-creation based on xmp meta data (refs #938). the dialog renders as follows:,UI,App
2396,introduce explicit list of all_biblatex_only_fields,this 2390. the last implementation used  entryconverter.field_aliases_ltx_to_tex . this implementation is based on  bibtexentrytypes  and  biblatexentrytypes .,Test,UI,Logging,IO,App,Network,Util
2400,2394 groups matching with brackets in name,2394.,App,Test,Util
2401,alllow ftp urls for downloading,i wanted to download ftp://ftp.informatik.uni-stuttgart.de/pub/library/ncstrl.ustuttgart_fi/inproc-2016-15/inproc-2016-15.pdf using the  download from url  button. however  this did not succeed as jabref insisted on an httpurlconnection.,Test,App,IO,Network
2405,datepicker fix,fix for #2403 - and as i was just touching this stuff again: i replaced our custom  easydateformat  class with a standard  datetimeformatter,Logging,IO,Interpreter,App,UI,Util
2414,replace calls of bibtexparser.parse,this is a follow-up to #2139  so that we can finally get the pr into master.,Network,App,Test,Util,IO
2415,fix several file cleanup + rename issues,separated move + rename cleanup logic,Util,UI,Network,Logging,IO,App
2416,fix  collapse sub tree  functionality for groups tree,fix of #2319: function  collapse subtree  is working again,Interpreter,App,Logging,Util
2420,remove the redundant worker interface,this is a refactoring pr (yeah  i know we do not really want pure refactoring prs for now)  and it is open for discussion (i will not throw a tantrum if it does not get merged).,IO,Logging,Util,App,UI
2421,revert  replace calls of bibtexparser.parse,-->,IO,Search,App,Logic,Network,Util,Test,Logging
2422,replace parse,-->,IO,Test,Network,Util,App
2425,2417: doi no longer contains url,-->,Test,Logging,App,Network,IO,Util
2428,2427: arxiv fetcher works with prefix,-->,App,Interpreter,IO,Test,Util,Search,Logging,Network
2437,group all checker which only check the value of one field,most of the integrity checker only work on one field and thus i introduced a new abstract class which groups the common functionality.,Util,App,IO
2438,follow up #2428,-->,Test,Util
2440,add support for pages in the format 2:1-2:33,this fixes 212,Util,Test
2442,add  look up dois  to quality menu,this adds  lookup dois  to the quality menu. additionally: rename lookup to look up (see http://notaverb.com/lookup),Util,App
2446,make icon colors (and size?!) configurable,implementation of a [feature request at the forum]( colors can be changed now in the  appearance  preferences tab (see screenshot).,Logging,Interpreter,IO,Util,UI,Network
2452,incorrect log name of jabrefexecutorservice,-->,Logging,Util
2457,ctrl+f selects current query while the searchbar is focusd,implemented a feature request from the forum (http://discourse.jabref.org/t/ctrl-f-behaviour/408).,i18n,Logic,IO,App,UI,Util,Logging
2459,fix conversion of tilde n,and although i said that i would not work on jabref for the next two weeks  here is a pr. this stuff is addictive and i need help :-/,App,UI
2463,medline fix test,internal change only. fixed author in test data and removed keywords,Test,App,Util
2464,fix conversion of   n  and  \ {n}  from latex to unicode,this is a follow up for fixing  #2458,Test
2473,remove html code from acm fetcher,remove html code from acm fetcher,Util,Network,Search,App
2476,add update from doi to the entryeditor sidebar,implement 2432.,App,Network,Logging,Util,IO
2487,make sure that unregistered event sources do not stop jabref from shu…,…tting down,IO,Util,Logging,Logic,Test,Interpreter,Network,i18n,App,UI,DB
2488,catch numberformatexception if context can t be parsed in groups,fixes  in the sense that a more detailed error message is displayed.,Util,App,IO,UI,Test
2492,fix medline testsagain,-->,Util,Test,App
2496,change key binding for cleanup from f8 to alt+f8,2251. this solution is the quick solution by changing the shortcut. the alternative is to change the actiontable etcl.,App
2507,fix apostrophe conversion,2500. this repairs the apostrophe handling in the latex to unicode conversion broken by #2464 and maintains the special handling of apostrophes in conjunction with the character  n  that #2464 intended to fix.,Test
2508,groups button and context menu for adding groups,-->,UI,App,Test,DB,i18n,Util,Logic,IO,Network,Search,Security,Interpreter,Logging
2510,fix journal title in ris importer,fix for #2506.,App,Util,IO
2519,fix repeated escaping of % sign,extracted regexe in patterns,Util,App,Test
2520,revert  fix repeated escaping of % sign,reverts jabref/jabref#2519,App,Test,Util
2521,fix % sign cleanup,fix previous stackoverflow errror with large input,Util,App
2527,fix error when path is no valid directory,fixes the exception folder parameter must be a valid folder,UI,App,Util
2530,make doifetcher the default fetcher in new entry dialog,i think making the doi fetcher default is reasonable  i always need to select it otherwise as the first alphabetical entry is default for now.,Network,App,IO,Logging,Util
2531,check more results returned by crossref api for matching,2431,App,Util,Search,Network
2532,switch to latex2unicode,motivation is discussed in #2465. fixes many conversion problems  such as those discussed in #2063 and #207.,Parser,Util,DevOps
2538,fix import of ms office xml in case of invalid month,fix for:  http://discourse.jabref.org/t/msbib-import-not-working/463,Util,App
2541,enhance integrity check tests,see 162,App,Test,Util,IO
2549,correct naming of biblatex,2493,Util
2550,bib database -> library,2095,Interpreter,Util,IO,Logging,App,Logic,Network,DB,UI,i18n
2554,replaced lrumap with a guava cache,this is intended as a fix for #2546.,App,Logging,Util,IO
2557,refactored around the fileannotationcache.,the cache now works as intended  i.e.  fully automatically instead of manual maintenance.,UI,Interpreter,IO,Test,App,Util,Network,Logging
2558,move whole codebase to package  org.jabref,implements #1179,Util,IO,Test,App,Interpreter
2563,make automatic groups a first-class citizien,-->,UI,App,Util
2564,remove groups edit mode,-->,Util,Network,App,IO,Logging,UI
2567,fix npe on tab switching in entryeditor between mr dlib,and file annotations,App,UI,IO,Logging,Util,Interpreter
2568,fix medline fetcher test,add missing/changed fields to fix test,App,Test,Util
2575,check similarity of entry when using doi retrieval with arxiv,2570,Interpreter,UI,IO,Logging,App,Network,Test,Util
2582,localization tests,test for #1985,Util,IO,Test
2583,keyword - special field synchronization,2580,App,Util,UI
2585,replace urldownloading logic,imho the downloading logic should be based on some stable  library.,IO,Util,Security,Interpreter,Network,App,Logging
2588,implement #1904: filter groups,-->,UI,Util,Test,App
2601,remove ordinalstosuperscriptformatter from recommended biblatex save actions,2596,Util,Test,App,Network,UI,IO,Logging
2610,fix title-related key patterns in bibtexkeypatternutil,-->,Test,Util,App
2611,fix exception when parsing groups which contain a top level group,fixes the import of #2600,Test,Util,UI,App,IO
2612,add icon + color and description to groups,-->,IO,Network,Interpreter,Logging,UI,Util,App
2614,cleanup window has a scrollbar now.,fix for issue #2501.,Util,UI,IO,App
2616,fixes displaying of mr dlib recommendations,fixes 231,App,Test,Logging,Interpreter,UI,IO,Util
2618,fixed wrong logger import,fixes the first part of #2617,Util,IO,Logging,App
2621,add mathscinet as id-based fetcher,-->,IO,UI,Network,App,Interpreter,Util,DB,Test,Logging
2623,fix2613,provided a macos specific routine for opening tex editors to import citations to 2613.,IO,UI,App,Util,Logging
2624,refactored around the pdf annotation importer,- i mainly refactored the pdfannotationimporter. it now uses java.nio and has sane error handling.,App,UI,Util,Logging,IO
2625,change dialog of download fulltext to save dialog,fix for #2572,UI,Util,Logging,App
2628,filenames,-->,Logging,IO,Util,App
2632,add drag and drop for groups -> groups,-->,UI,Logging,App,Interpreter,Util
2634,finally write the new group properties to the bib file: icon with color  description  expanded status and automatic groups,-->,App,Util,Test,IO,UI
2636,improve perfomance of opening a database that still used the old groups format,-->,Util,App,UI,Logic,IO,Logging,DB
2639,add option to copy title of bibentries,implements issue 210]( from [@koppor](https://github.com/koppor).,Network,UI,App,Logging,Util
2640,put the pdfannotationimporter under test  enhance fileannotationtab,i have created tests for the pdf importer. however  the coverage has yet to be improved and i m planning to extend the fileannotationtab in this pull request. so this is the follow-up for #2624  but this time in tdd.,Util,UI,IO,Test,App
2641,improve issue reporting a bit,see #2573.,Network,Util,IO,Logging,App,UI
2644,refactor oo connection,also 2484,IO,Network,Util,App,Logging,UI
2645,2455: add crossref as fetcher for everything (id-  entry-  search-based),-->,Network,Interpreter,Logging,UI,Util,App,IO
2649,paying off technical debt: almost all utility classes have a private constructor now.,i also removed an unused private method. according to sonarqube scans  this removes at least five days of technical debt.,Interpreter,App,UI,i18n,Test,Logic,Network,Search,Util,Logging,IO
2650,performance improvements related to import,-->,Util,App,UI
2659,oo formatting,openoffice text formatting now handles nested tags properly 2483](#2483),Logic,App,IO,i18n,Util,Logging
2661,add possibility to clear the log at runtime,2660,Logging,IO,Util,Network,App,UI
2666,add sorting of all groups and subgroups  recursively,implements some features from #2599,Test,Network,Parser,APM,Logging,Util,Security,DevOps,Interpreter,IO,App,UI
2669,fixed issue #2652,commas should only be interpreted as separators of several authors if there is no possible interpretation that conforms to the bibtex rules  i.e. if there are more than two commas.,Util,Test
2670,revert  paying off technical debt: almost all utility classes have a private constructor now.,reverts jabref/jabref#2649,App,APM,Util,UI,IO,DevOps,Search,Network,Interpreter,Logging
2681,2680 and 2667: swing errors are catched properly and without freezing,hopefully  fixes that the error console is not updated properly #2667 as well as that swing errors lead to frezzing #2680. at least for me  it works now without problems. @stefan-kolb @lynyus can you please also check it.,Logging,Util,App,UI
2683,fix selecting all entries with shortcut,fixes 2615,Interpreter,UI,IO,Logging,App,Util
2684,fileannotationtab now only shows the filename  not the full path.,2676,App,IO,Util
2688,export single corporate author to ms office xml,if the author in jabref is enclosed in curly braces .e.g  {jabref developers}   it is now recognized as corporate author and exported in the corresponding field.,Util,App,Test,Network
2692,add pdf viewer,-->,Util,App,UI,IO
2697,remove the following commands in the right-click menu of a group:,- expand/collapse subtree,Logging,Util,App,Interpreter
2699,parser no longer warns about empty bibtex keys,-->,Test,Util,App,IO,Network
2702,open main file directory in correct file dir,change to fxdialogservice,UI,IO,App,Util
2703,628: implement hierarchical keywords,-->,Util,Test,UI,App
2704,write groups under tag  group  instead of  groupstree  to enhance compatibility with previous versions,right now  files written with 4.0 cannot be opened in older versions. the new format of the groups leads to a npe.,App,Test,IO,UI,Util,Logging
2710,add arxiv identifier batch lookup,-->,Logging,IO,Interpreter,UI,App,Test,Search,Network,Util
2711,avoid conversion of single underscores,2664,App
2716,keep unkwown meta data,as discussed in #2704  unkown meta data items were deleted so far. with this pr  this is no longer the case. the only problem is that the formatting of meta data items is not parsed (and this would be a bigger thing)  since so far we assumed full control over the meta data items. this version tries to keep formatting as far as possible  but does a few customizations (escaping     and adding newlines where appropriate). the result is that you can rename a  groupstree  meta data item and it will be kept and formatted in the very same way  also with a different name.,Network,Security,IO,Interpreter,Test,APM,App,Logging,Parser,DevOps,Util,UI
2719,extend architecture tests to javafx and javafx.collections,extends the architecture tests to also cover  javafx  and  javafx.collections   as discussed in #2617.,IO,App,Test,Util
2723,refactor parsed file field,-->,Util,IO,App
2724,azure test,-->,Test
2726,remove gui dependency in logic,-->,IO,Network,UI,Interpreter,App,Logging,Util
2727,fixed freeze on mac os x when creating/editing groups,fixed that jabref for mac os x was freezing / not responding when using the  add subgroup  or  edit group  feature. also fixed some menu items which had the wrong functionality. refs #2722,UI,App,Util
2731,improve date parsing,-->,Network,App,IO,Logging,UI,Util
2732,fix 2701 too may files found,-->,Test,App
2737,speedup start by improving application insights configuration,-->,App,Logging,APM
2747,replace  datenbank  by  bibliothek,this addresses #2095 for german.,Util,App,Test,UI,Logging,IO
2751,sauliusg fix 2700 null pointer exception on get fulltext,followup from @sauliusg  pr  #2744,Test,App,IO,Util
2752,add test for ordinals,this is a follow up for  and  i d like to test how i can reproduce the behavior of ordinals.,Util,DevOps,Test,Parser
2754,entry editor goes javafx,-->,UI,NLP,Util,Test,Interpreter,Search,Security,App,Network,Logging,IO
2759,more javafx editors,-->,UI,IO,i18n,Test,Util
2768,remove preferences and globals from tests,-->,App,Test,Util
2774,2766 if file is not found annotations might be null,still  the real reason is a missing file,UI,App
2778,fixes handling of unknown pdannotation types.,refs. #2777,Logging,Util,IO
2781,reimplement date editor in javafx,-->,Util,App,UI
2791,do not log an exception if side pane was not found,some older versions had different names for the side pane components and their preferred sizes are still associated with these old names. thus opening a newer jabref always logged some errors  which only can be resolved by resetting the preferences.,App,Util
2798,rework file editor in javafx,-->,Network,UI,Test,Util,IO,App
2809,reimplement context menu for field editors in javafx,-->,UI,Network,App,Util
2813,editor tab goes javafx,-->,Search,Network,Logging,UI,Util,Test,Interpreter,App
2816,2806: date editor also accepts incomplete dates,-->,Util,UI
2824,reimplement option field editors in javafx,-->,Util,App
2826,fix invalid folder when passed file/path is empty string,return the correct working dir,App,Network,NLP,Util,IO,Logging
2840,convert crossref editor to tag-like interface using javafx,-->,Util,UI
2861,adsurl to url,-->,IO,Util,App,Network,Search
2862,fix export and import of ms office day/year/month acessed fields,fix possible npe in date parsing,Util,App,Network
2864,implement #2785: resort groups using drag & drop,-->,Test,App,Util,UI
2865,add library of congress as id-fetcher,-->,Test,Util,App
2873,fix divide by zero exception if rows is zero in entry editor tab,internal thing  it could happen that when the fields array is empty the rows variable is zero which led to an arithmetic exception (divide by zero),UI,App
2875,fix entry editor,-->,UI,App
2878,support annotations created by foxit,fixes some problems when annotations were created using the foxit reader. (cf. 2839#issuecomment-302058227),Logging,App,IO,Util
2882,fix loading of preferencesservice,the else part tried to instantiate the interface otherwise,Util,Interpreter,App,UI,Logging
2891,adjust tests: ads fetcher returns url  dblp no longer works with negative operators,#2890,Test,Util,App
2895,update localization of greek translations,fixes 2893.,Util,IO,Test
2908,fix npe when calling requestfocus on non selected field,internal changes only related to the new entry editor:,UI,App,Interpreter,Util
2918,fix npe cases in filedialog configuration,add test for filedialogconfiguration builder,Util,App,Test,IO
2920,abbreviate journal names in parallel,-->,Util,App,Logging
2921,2854: readd context menu to linked files editor,-->,Interpreter,Util,Network,Logging,IO,UI,App
2923,fix key combination related exceptions,use keycombination match method,Network,IO,App,Util,Interpreter,Logging,UI
2926,better icon support for groups,parse enum icon value from icon field by name (and apply to uppercase),Network,IO,Util,App,Logging,Test,UI,Interpreter
2935,open urls for recommneded articles in the browser,added a generic hyperlinklistener which opens any hyperlink in a new browser window.,Network,App,Util,UI,Logging,IO
2937,fix propagation of key events back to the jabref main frame,related to the new entry editor,Logging,IO,Util,Interpreter,App,UI
2939,ask before deleting associated files from disk in entry,add new dialog,UI,App,IO,Network,Interpreter,Logging,Util
2943,add a shortcut to  quality - look up full text documents,this pr adds a shortcut key <kbd>alt</kbd> + <kbd>f7</kbd>  to the function  quality - look up full text documents . i ve found that a issue was already raised in #1323 after finishing the code revision (hence  i happened to use the modifier <kbd>alt</kbd> rather than <kbd>ctrl</kbd> :-) ),Util,App,Logging,IO,UI
2957,fix closing entry editor with esc,rename escape to esc for javafx,UI,App,Interpreter,Logging,Util,IO
2959,in junit tests  always state the expected value before the actual,this is only an internal change  no functionality was actually changed. i thought it would be good to open a pr anyways to raise awareness.,Util,Test,Network,App,IO
2965,complete rework of the auto completion,-->,App,UI,Util,Test
2972,add remove link context menu entry in file editor,-->,Interpreter,Network,IO,UI,App,Util,Logging
2990,remove <pre> tag from entries fetched using mathscinet,-->,App,IO,Network,Logging,Util,UI,Test
2991,check for different editions in the duplicate check,2960 by checking for different editions before the actual duplicate check.,Logging,App,Util
2992,add checkstyle check for constants (final static),to adhere the java code conventions i have added another checkstyle check to make sure that all  static final  variables are in caps. for some reason checkstyle suggests to exclude the logger  which i am unsure if we really need it. check the following regex for the exact specification:,Network,Interpreter,Logging,UI,App,Util,APM,IO
2995,less backups,addresses #2993,Logging,Util,IO,App
3000,fix mac keybinding by replacing ctrl it with meta key,this should make the entry editor commands work again with command+x /c etc,UI,App,Util
3002,2998: improve auto completion,-->,App,Util,UI
3004,only do a back up for bigger changes or if a different field is edited,this pr makes the backupmanager a little more intelligent. it fixes a bug that i ve only noticed locally and discussed with @tobiasdiez in chat. there s no issue for it  but the fix comes directly here.,Util,App,Logging,IO
3005,javafx replacement for file dialog,2970,App,IO,Util,i18n,Interpreter,Logic,UI,Logging
3007,add preference migration for keybdingings,fix for #2980,Logging,Network,IO,Util,Interpreter,App,UI
3008,don t enforce default windows font,check below 3008#issuecomment-315136683,IO,UI,Network,Logging,App,Util
3012,mark libraryofcongresstest as a fetcher test,this test is currently failing with a 500 error. i would suggest to add it to the allowed failures and open an issue.,Util,Test,App
3019,update source tab when an entry is changed,attempts to fix the remaining part of #2888. the source tab is now updated each time an entry is changed in the editor.,IO,Interpreter,UI,App,Util,Logging
3022,can t save a database to a new file,-->,App,Logging,UI,Util,IO
3024,link missing docbookeditors formatter in layoutentry,it seems that we overlooked the  createdocbookeditors  layout formatter in the formatter map in  layoutentry . reported in #3020.,Logging,Util,Network,App,UI,Test,Interpreter,APM,IO
3030,fix keybinding in entry editor in localized installation,check keycode to avoid localization problems,App,Util,UI
3037,fix navigation in entry editor increases modifies font size,-->,Logging,Util,App,IO,Interpreter,UI
3048,fix ads fetcher,fix for #3035,App,Search,Util,IO,Network
3078,only update auto completion suggestions upon major changes,-->,Logic,UI,Interpreter,App,Util,IO,Test,i18n,Logging
3079,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> automated rollback of e50ce7e7ed79fbce1901081838c8e0f9269d4128  *** reason for rollback ***  causing outofmemoryerror in some tests.  *** original change description ***  stop using bytearrayoutputstream in bytestreams.tobytearray methods.  they were using bytestreams.copy to copy the source to the baos. this meant reading from the source into a buffer  then copying from that buffer to a different buffer in the baos. additionally  the way baos operates is not great: whenever it needs more space  it creates a new array twice as large as the previous  copies all bytes from the previous array to the new one  and discards the previous array.  instead  read directly from the source into a sequence of buffers. when a buffer fills up  don t discard it  but instead create a new  twice as large  buffer and start reading into it.  ***  8e341060fcef24921ecc5a079c256b184ca164f2,Util,App,Interpreter,Network,Logging,UI,IO
3082,javafx fileannotationtab,i have created an initial port of the fileannotationtab. it is not done yet  as i am not so proficient in gui programming.,IO,Logging,Test,Interpreter,UI,App,Network,Util
3083,3034: make font size in entry editor and group panel customizable,-->,App,Logging,IO,Util,Network,Interpreter,UI
3085,only load the telementry service as a background task if used,up to now  the telemetry service was always running (even if the reporting was turned of).,UI,App,IO,Util,Logging,Network,APM
3089,add guava cache to citationstylecache,this uses guava s cache instead of a hashmap for caching.,App,Util
3090,add validation to entry editor,-->,Util,Logging,IO,Network,App,UI,Interpreter
3092,fetcher timestamp,3074.,Interpreter,App,Network,Logging,UI,Util,IO
3094,enable join and replace of keywords,this implements #1076,APM,Test,App,IO,UI,Util,Network,Logging,Interpreter
3095,fix for issue 3052,-->,UI,Network,Logging,IO,Util,Test,Interpreter,App
3096,followup to 2663 regexformatter,the regexformatter now handles protected groups correctly. this is a followup to #2663. there  the regex modifier was introduced and a minor issue with shorttitle was fixes,App,Util,Logging
3097,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> fix   a446dd1890a324769ef7dc829052d5118e053abb,UI,Util,App,Logging,IO,Interpreter
3104,source tab doi,3103 by making sure that updates to the source tab are always performed on the fxapplication thread.,UI,Interpreter,IO,App,Logging,Util
3105,remove entries from prior groups if move operation is selected,3101,App,Logging,UI,Interpreter,Util,IO
3111,trigger group display update when grouping changes,attempts to 1903,UI,Util,App
3116,move event processing from source tab into entry editor,solves the most critical part of #3113,Interpreter,IO,Logging,Util,App,UI
3120,additional filter functionality for check integrity popup,2718,Util,App,UI
3128,customjfxpanel,-->,App,UI,Util
3137,re-add  normalize to bibtex name format  context menu item and menu i…,…tem tooltips,Util,App,UI
3141,increase size of file and keywords editors,in the new entryeditor  we have the problem that sometimes text in the textareas is hard to read  because the areas are very narrow. the reason for this is that java tries to fit them in the available display space. examples: #3130 #3117 #2941,Util,App,Interpreter,UI
3147,export pdf/linked files,2539,Interpreter,Util,Logging,UI,IO,App
3149,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> continue migrating to type annotations for @nullable  relnotes=n/a  f642763e15c2814c2ed6208fb7302235d6518829  -------  <p> remove usages of calipermain from java_benchmarks targets since the deps for java_benchmarks don t need to (and shouldn t) include calipermain anymore.  such benchmarks should be run via the java_benchmarks generated binary directly.  github_breaking_changes=n/a  84d45bc4e1a9b2a87256e30374c517fed329dcae,Util
3151,fix errorprone,-->,Test,Util
3154,add preference to disable validation in the entry editor by default,adds a preference option for enabling/disabling validation in the entry editor: #3100 (but not the ui),Interpreter,App,Logging,Util,UI
3158,fix freezing on browse in protected terms dialog,when adding from entrry editor,UI,Logging,App,Interpreter,Util
3162,update protected terms list in context menu when a new list is added.,3161,Logging,Test,IO,Util
3163,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add duration info to checkarugment() call in suppliers.memoizewithexpiration()  relnotes=add duration info to checkarugment() call in suppliers.memoizewithexpiration()  3eadb52dcb210704fefa547853b17e7bfa57e06c  -------  <p> some changes to the guava readme.  move most information about the latest release to the release badge at the top  which now links to the github release page for the latest release and automatically displays the latest release version number.  note: i probably would have removed explicit references to the latest version number entirely (meaning no changes to it need to be made when a new release is created) except for the fact that the release process currently relies on there being *some* change made when prepare_release is run so that the release script knows what commit to create the release from. there are ways we could deal with that  but i didn t want to deal with that yet.  0f364779d314470c8855a6c0c805f858ed418c65  -------  <p> fix  by implementing a proper collectspliterators.flatmapto{int long double}.  9e6e1d02faa4ff07f2c5746a1902ae36cd54335b  -------  <p> automated rollback of 9e6e1d02faa4ff07f2c5746a1902ae36cd54335b  *** reason for rollback ***  appears to tickle a j2cl bug.  *** original change description ***  fix  by implementing a proper collectspliterators.flatmapto{int long double}.  ***  15db5b7f84531a19e7e0ab6f7932208e35b8b068,IO,Logging,Util
3169,allow removal of online links from entry,don t call paths.get on  link to prevent an exception,Util,Network,IO,App,UI,Logging
3171,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add a direct dependency from guava-gwt to checker-qual.  the gwt sources (specifically  gwtserializationdependencies) use @nullable directly  so we shouldn t rely on relying on it indirectly through guava-jre.  however  what actually prompted this is a strange behavior in compile-testing  which truth uses. this cl should help  though it might not be a fully solution.   5cb6f0a87d75c6b3cd6c79c31d66e3a28620101d  -------  <p> fix mangled javadocs.  5928882017809a1d0e57bd1b55dd6abdcf5604d0,Util,UI,Interpreter,Logging,App,IO
3191,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.,Util,App,Test
3192,update link from  to https,-->,Network,App,IO,Test,Util
3194,implement drag and drop reordering in general files list,add drag and drop related methods to viewmodelfactory,App,UI,Network,IO,Util
3195,fix local db and shared db sync #2284,-->,Logic,i18n,App,Logging,Network,IO,UI,Test,Util
3196,fix tooltip for hotkey,before,UI,Util,App,IO,Logging
3198,localisationtestforinvalidstrings,…te for instance,IO,Util,Test
3201,first attempt at autocompletion for crossref,fixes 257,UI,Util,App
3202,followup to issue #3167,entry editor now adds missing curly braces on closing.  3167,Util,Network,Interpreter,UI,Test,IO,App,Logging
3203,when groups are removed  also remove them from entries,3190,Util,UI,Test,App
3204,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> adds constants for sec-metadata header.    relnotes=adds constants for sec-metadata header.  2035a276dcecb354dcf68b41f11480786cdeb109  -------  <p> update public suffix data.  this copy is updated whenever chrome s copy is updated  which is typically every 6 weeks. star the following to watch chrome s updates:    0dc71528308c0ff43961b4869df55b0f582c963b  -------  <p> add @nullable to abstractsequentialiterator s computenext() method return value so that  doesn t complain  e59ed3d738accabf895ede47ae07b9cf320b6c8a  -------  <p> internally  use patterncompiler from doubles.tryparse.  (redo of cl 202132002  which was partially rolled back in cl 202139691.)  this time including tests to cover the re2j approach. to avoid the errors of last time  i had to remove the possessive quantifiers under re2j and replace \p{xdigit} with [0-9a-fa-f] (which is equivalent  see the pattern javadoc).  e51afe5a60f68c169e1aec6d30112bb77e423fdd,UI,App,Network,Logging,IO,Util
3205,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> change hostandport equals() and hashcode() to stop depending on whether brackets were included  now they depend only on host and port.  useful for storing ipv6 addresses in set and map  relnotes= net.hostandport : changed equals() and hashcode() to stop depending on whether brackets were included. now they depend only on host and port.  6684d0f68ae91d41eac67873d87e13e2ae2b1db0,UI,IO,App,Logging,Util
3209,2775: hyphens in last names are properly parsed,-->,App,Test,Util
3210,add file description to gui and fix sync bug,3208,Util,Logging,UI,Interpreter,App,IO,Network
3211,added logic to check whether linked file already exists,#3172,Util,IO,App,Logging
3214,real test linking real other entry,-,Test,App,Util
3218,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> fix initialcapacity calculation for a maximum size over integer.max_value.  noticed during discussion of   813ebd6909096797c6587487a1c67931e73b2bc5  -------  <p> remove futures methods that implicitly use directexecutor().  relnotes=removed the  futures  methods that implicitly use  directexecutor() .  52fa8683024d7093bb90df2789ac0a8ebf5aea04  -------  <p> reduce proguard retained code from usages of multimaps.synchronizedxyzmultimap.  effects on multimapsynchronizedproguard: jar bytes: 148295 bytes => 50236 bytes (-66%) classes: 67 classes => 28 classes (-58%) methods: 458 methods => 155 methods (-66%)  b42b6d20bb20ff239a361d990fc3f42048a4d217  -------  <p> remove deprecated charmatcher constants.  relnotes=removed deprecated  public static  fields from  charmatcher . use the equivalent  public static  methods instead.  2786afac3ef177232a2e543703c97d42a277c2d8  -------  <p> move executionsequencer into guava as @beta.  relnotes=added  executionsequencer   a new utility to run a series of asynchronous operations serially.  3b25fe7882459991f2336c5021c46f0c374a152b  -------  <p> automated rollback of c7aa4671cd70853515171333c823e3cdece92918.  *** original change description ***  move executionsequencer into guava as @beta.  ***  35aa102cfe256bdf8a23aa89d259ba4916f50c62,App,Util,Logging,APM
3221,[minor change] fix assertion failure due to change of online reference,it seems as if the on-line reference changed by adding an author s first name.,Test,Util,App
3233,implemented issue #3229,added an error dialog if the file is open in another process and cannot be renamed. 3229]. this is my first contribution. please give me feedback if you see any problems.,IO,Logging,Util,App
3238,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add a gap method to range which computes the range that lies between two ranges. this operation is particularly useful as a replacement for joda time s interval.gap when migrating to java time which has no interval class.  joda time: interval interval =   interval gap = interval.gap(interval)   java time (after this cl): range<instant> interval =   range<instant> gap = interval.gap(otherinterval)   relnotes=adds a gap() method to range that computes the range that lies between them.  856f3bc431f7f145f35c6a42a07e1f7158964467  -------  <p> use gradle formatting  fixes   44abd86cf18afa64d1776b19a7bedabda395877f  -------  <p> add missing @since tag.    noticed because of   2e93145e51699a3e533c72db2633456f65542ad7  -------  <p> add information about thread wakeup or scheduling delays to timeoutexceptions thrown from guava futures.  b155e35606632c756e8db2c414145237a02ef9ca  -------  <p> remove unnecessary local.  it is a holdover from when we used the value locally  rather than just returned it: 353ae349a24fb6c9b3e233ca03e4012761c7f3d8  94134ff0559baefa9ecc8df2a7c61945b6dfc523  -------  <p> make delayed get() test more resilient to thread scheduling delays.  cc18f991f9934b4cd06d8d7fc0dbd1cc7ea1b83f  -------  <p> switch fluentfuture and abstractfuture in inheritance chain  relnotes=abstractfuture doesn t expose fluentfuture apis anymore.  4d8e0a81d78cea279441625adc96467a5b7d0879,Logging,UI,IO,Interpreter,App,Test,i18n,Util,Logic
3240,use only last name for auto completion in search bar,now only the last name of the author is added (and shown as a suggestion) to the search bar. previously it was in the format  last  f. . thus authors specified as  last  first  were not found correctly because of the  dot .,Logging,IO,UI,App,i18n,Logic,Util
3241,update link to renamed file,this patch fixes the issue described in #3230. the link to the renamed file is successfully updated now.,IO,App,Util,Logging
3242,add  -console  parameter for windows launcher,-->,Interpreter,Logging,Util,App
3243,fix for issue 3143: import entry from clipboard in different formats,see #3143,App,Logging,IO,Network,Interpreter,Util
3245,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> don t allocate a cancellationexception if cancellation causes are not enabled.  99393cf80ba7a5c861b564b3289debbf5dbbeb51,App,Util,Test
3246,implement native messaging,-->,Test,IO,Network,App
3248,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> fix parameter name in javadoc   name  doesn t exist in the current context.  #codehealth  relnotes=fix parameter name in javadoc  9dbaf13b31c58b67ecc7d1ae3950534cdf04a344,Test,i18n,Logging,Interpreter,Util,IO,UI,App,Network
3272,open statistics dialog from correct thread,the dialog to ask for collecting anonymous statistics needs to be created in,App,UI,IO,Util,Logging
3287,change oo paths to libre office in preferences,hopefully enough to 3263,Util
3288,empty string instead of n/a in file annotations,3280,UI,App
3303,open unix filenames with spaces,3264,UI,App,Logging,IO,Util
3305,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> enable goodtime-api for guava (with some exceptions).  603ecca60c11d9a343423ae908bbc325521a7f50  -------  <p> *builder.java: add @param documentation for the node/value/edge types that clarifies their behavior.  this is in response to (and should resolve)   9db70c6519ef588697a9c522ee36aea439f36241  -------  <p> suppress warnings in classes that implement equals() without also implementing hashcode().  the contract for object.hashcode states that if two objects are equal  then calling the hashcode() method on each of the two objects must produce the same result. implementing equals() but not hashcode() causes broken behaviour when trying to store the object in a collection.  73f7e84a345805dc4fcc9927201e03fdbf408c5f,Interpreter,IO,Logging,Util,UI,App
3308,add \textendash to the html conversion table,3307 by adding \textendash to the html conversion table,Util
3315,fix freezing when running cleanup file operations like rename,i noticed a problem when executing a rename cleanup operation. it lead to a freeze.,UI,App,Util,Logging
3318,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> address why users should prefer our immutable collections to things like collections.emptylist().  2b9f74c16acbb9bbe18bc20e171996c79a476e31  -------  <p> add the origin-trial  response header.  229188e18e6504ffa9747e8bd00622d28e460477,IO,Logging,App,Interpreter,Util,UI
3320,increase relative size of abstract field in editor,-->,Logging,Interpreter,IO,Util,UI,App
3327,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> update public suffix data.  the copy is updated whenever chrome s copy is updated  which is typically every 6 weeks. star the following to watch chrome s updates:    when that bug is not updated  the copy is updated 3 weeks before the estimated week of stable:    648071f0c529c87cb28537488f27f971bce3c3c5,Logging,Util
3328,small fix in drag and drop handler of linked files,-->,Util,App,UI
3330,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> internal change  3e74359d4e0479bf6c461d031bb4761b06cf2e66  -------  <p> add the @immutable a few more classes. both annotations enforce at compile-time that the annotated class meets the annotation’s requirements.  16001aae5eb8c4be0b7aa160970d22e6ef5b8ed0,Logging,Interpreter,UI,Util,IO,App,Network
3333,refactoring: lazy init of all editor tabs,-->,Util,UI,Interpreter,Logging,App,IO
3336,remove underscore in localized messages,-->,App,Network,DB,IO,UI,Util,Logging
3340,used late initialization for context menus,i believe i could bring down the performance impact of the context menus to a bare minimum. i reported this in  and @tobiasdiez provided me with the hint how this could work. against his suggestion to not overshoot  i decided to prove my point that even those small context menus have a significant impact because things will sum up in the end and those menus are newly instantiated for every visible field in the editor.,App,Util,UI
3343,fix npe when calling with bib file as cmd argument,3342  follow up issue from #3325,Logging,App,Util,IO
3353,refactor collab package,-->,App,Util
3360,source tab entry duplication,adapts the source tab a little better to the new and no longer re-created entry editor. it is a fix for the problem described in this comment  the remaining problems in the issue are not addressed here  so the issue should stay open when merging this and the update flow in the source tab should be reworked in further prs.,App,UI,IO,Util,Logging,Interpreter
3368,rework autosetfilelinks,3346,App,Util,IO,Test
3370,refactorings,merge when build succesufl,App,Util
3378,treat crossref titles as optional,3376,Search,Util,App,Network
3387,source tab: hide notification pane when code is correct again,-->,Util,App,IO,Logging,UI,Interpreter
3388,added checking integrity dialog,this change is related to #3358. jabref looked like it is hanging during long integrity checks. i added a dialog with a progress bar to show that it is working.,UI,App,Util
3398,fix problems in source editor,-->,Util,Logging,IO,UI,App,Interpreter
3399,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> use j2objc s @retainedwith annotation instead of @weak on immutablemap.entryset() to prevent crashes on ios.  tested=created a map inside an autorelease pool and saved a reference to the entry set. checked that the entry set functions correctly outside the autorelease pool. checked that both the entry set and the are deallocated by the autorelease pool when not holding a strong reference to the entry set. did this test with the following constructions to cover all entry set implementations: - immutablemap.of(<2 entries>) - immutablemap.copyof(<enummap with 2 entries>) - immutablesortedmap.of(<2 entries>) - immutablebimap.of(<2 entries>).inverse()  relnotes=j2objc: fixes crashes from use of immutablemap.entryset().  c4eef3f4fa8f30fef8061d3ea2197fb427ee3cfd,i18n,DB,UI,Logging,Network,Util,Test,Logic,IO,Interpreter,App
3400,fix static localized text,-->,Util,Logging,App,IO
3402,fix mathscinet fetcher,-->,Test,App,Search,IO,Util,Network
3403,replace linkedfiles backslashes with forward slashes,follow up from #3364 (damn case sensitivy),App,IO,Network,UI,Util
3404,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> lazily allocate compacthash backing arrays on first write  empty maps/sets are extremely common. lazily allocating the backing arrays can save hundreds of kb of heap and reduce load on the garbage collector.  while here: - use serialized size to pre-size the arrays - respect ordering during serialization (without using an iterator) - consistently mark unused links as unset  memory savings before first write (bytes): - compacthashmap.create(): 184 -> 64 - compactlinkedhashmap.create(): 240 -> 80 - compacthashset.create(): 136 -> 40 - compactlinkedhashset.create(): 200 -> 56 - compacthashmap.createwithexpectedsize(0): 136 -> 64 - compactlinkedhashmap.createwithexpectedsize(0): 168 -> 80 - compacthashset.createwithexpectedsize(0): 96 -> 40 - compactlinkedhashset.createwithexpectedsize(0): 144 -> 56  801e018184d2f5196c80e2b2168a883c093ffe5a,Logging,App,Util,UI,IO,Interpreter,Network
3405,3046: no longer allow duplicate fields in customized entry types,-->,Util,App,Network,Test,IO
3407,move groups field from others to general,-->,Interpreter,UI,App,Util
3424,fix test for quoted lang messages,fix for 3397,App,UI
3427,rework entry editor toolbar in javafx,-->,Interpreter,App,Util,Network,UI,Logging,IO
3428,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add (unimplemented) api for grapbbuilder.immutable() and immutablegraph.builder.  50eddd03e92dc2855a3ae05c3b8d93de18e6bddd  -------  <p> adds constants for prefetch headers.  of note  x-purpose is not just a google specific header as previously defined.      relnotes=adds constants for prefetch headers.  966879ff982425a4418341c9ccbe9a7249bb0a4d  -------  <p> implement graphbuilder.immutable().  relnotes= graph : added  graphbuilder.immutable()  for building immutable graphs in a fluent way  7998dc473efbfa7ec7d57ece8b4c527fa9e11b9b  -------  <p> add fluentfuture.from(fluentfuture) factory method.  this follows the steps of fluentiterable.from(fluentiterable) and other “migration aid” methods that are deprecated from inception and are just here to point out code that is no longer needed.  relnotes=added deprecated  fluentfuture.from(fluentfuture)  to point out redundant code.  2d060028e9d99f798a29fd1ec09c844f4fc58a1d  -------  <p> use byte/short/int for hashtable depending on size  the hashtable is stored as an object and cast to the correct type using instanceof checks.  memory: byte sizes (2-89): 12-41% better (average: 32% better) short sizes (90-22937): 20-29% better (average: 24% better) int sizes (22938+): unchanged  runtime on a pixel 2: createandpopulate: 9% better to 6% worse (average: 4.3% better) get: 1% better to 8% worse (average: 3.5% worse) iteratewithkeysetandget: 9% better to 13% worse (average: 3.2% worse) iteratewithentryset: unchanged (doesn t use hashtable)  effects on immutablemapproguard: 59105 bytes => 60369 bytes (+2.1%) 21 classes => 21 classes (0%) 200 methods => 201 methods (+0.5%)  effects on immutablebimapproguard: 68893 bytes => 70235 bytes (+1.9%) 25 classes => 25 classes (0%) 232 methods => 233 methods (+0.4%)  b1a11396bd731ddcd1efd60850b0aa004c9f874b  -------  <p> add valuegraphbuilder.immutable().  relnotes= graph : added  valuegraphbuilder.immutable()  for building immutable value graphs in a fluent way  79e0a573fc00db17f0916426ce2107d3bf63d481  -------  <p> remove unnecessary type parameter  6f0b66d172a9532aaa82dac8a1add496c916ad97  -------  <p> add networkbuilder.immutable().  relnotes= graph : added  networkbuilder.immutable()  for building immutable networks in a fluent way  a812af75ee14d8cb01a1a180b2c369c2f16311a3,App,UI,Network,Logging,Interpreter
3430,add support for junit 5,-->,Logging,Test,Interpreter,App,IO,Util,UI,Network
3438,fix removal of special fields when syncing them via keywords,fixes a bug where jabref special fields (such as  printed    relevant   ) were not cleared (e.g. removing the  printed  flag) when using synchronization of special fields via the bibtex keywords field.,Logging,UI,Util,Network,App
3443,fix for issue #3381,because the javafx tooltip used in the [globalsearchbar]( cannot render html  @tobiasdiez recommended in #3381  to create a textflow object in the [searchdescriber]( classes for structuring the text.,App,Util,UI,Test
3444,implements #1664: group based on aux file,-->,Test,Util,Logging,UI,IO,App
3454,replace swingx with standard swing,in order to be able to properly move to java 9 (see #2594)  we need to get rid of all accesses of internal apis. unfortunately  we also use libraries that make such internal accesses and we need to find a solution for that.,App,UI,Util
3457,use junit5 conditions to disable some tests on ci server,-->,Network,Util,IO,Logging,Test,App
3458,remove dependency to jgoodies-looks,jgoodies-looks uses internal apis (see  )  which means that it causes problems with java 9. this pr removes this dependency. the biggest change is that two look and feels go and that particularily affects linux users.,IO,Network,Util,Search,Test,App,DB,Security,Logic,Interpreter,Logging,i18n,UI
3479,prepare usage of crowdin: remove underscores from l10n,this pr prepares the usage of crowdin: no more strange  _  in our translation files. with this pr we are not bound to crowdin  we can still use our current github worfklow. furthermore  crowdin pushes new translations using pull requests.,IO,Util,Test
3486,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add a link back to the goodtime rate bug.  5750fb6c05d0f8b32060f56b0a94a12a52c89260  -------  <p> copy durations.saturatedtonanos(duration) to package-private c.g.c.u.c.internal so it can be used by the concurrent package (and in guava).  #goodtime  568cbb67101fdb56436e75467a23de8d027b1089  -------  <p> tighten the goodtime suppression locations in ratelimiter.  #goodtime  0df55a98cf54e2c3ccf1c1180ad4a20419d69a55  -------  <p> add duration-based overloads to uninterruptibles.  #goodtime  relnotes=add duration-based overloads to uninterruptibles.  e194e7578e5e8fea2edddd5a9544ebdeac961141  -------  <p> always complete timeoutfuture  even if tostring() throws  6c09c1732c040050752b5a087a1070ebf899ae9f  -------  <p> add duration-based overloads to moreexecutors.  #goodtime  relnotes=add duration-based overloads to moreexecutors.  e2da132822d1e62d000564e51816c789dc823998  -------  <p> add duration-based overloads to fluentfuture.  #goodtime  relnotes=add duration-based overloads to fluentfuture.  7f5390dcb99c6930facb2a91cca056a25b8581a4  -------  <p> add duration-based overloads to futures.  #goodtime  relnotes=add duration-based overloads to futures.  070e07da83e8320f2c368709cb773f08a383797f  -------  <p> add duration-based overloads to abstractscheduledservice.  #goodtime  relnotes=add duration-based overloads to abstractscheduledservice.  e7a7a1f0c4962231d73f72d101deeaa2c2b0144c  -------  <p> add duration-based overloads to service.  #goodtime  relnotes=add duration-based overloads to service.  76718f4617a2d4daea00a578f808cae59c5cdc59  -------  <p> add duration-based overloads to servicemanager.  #goodtime  relnotes=add duration-based overloads to servicemanager.  6c6edfa0b24148d5665a8e31a1811df7045b9460  -------  <p> remove checkedfuture utilities from util.concurrent.futures.  d3dcc67f6da3cbd5be687e2cddec6fb13a68dd8b  -------  <p> add duration-based overloads to ratelimiter.  #goodtime  relnotes=add duration-based overloads to ratelimiter.  7aee4f5c283e501c854ae06aaa201fc5328ebe4f  -------  <p> add duration-based overload to monitor.  #goodtime  relnotes=add duration-based overload to monitor.  ac540c41979ade6931d9d604eff1e6223e247a9a  -------  <p> define project build source encoding as utf-8  closes   196dd9edd4a8d7caa2f5f073268fab759d91b3e2  -------  <p> fix  apache license  version 2.0  spelling  there are many java libraries licensed under  apache license  version 2.0  that do not use its official spelling. this causes issues like  with every library defining its own spelling  it s difficult in large projects to have a clear view of all licenses in use. this pr changes the license spelling to the official one  as advised by maven developers.  closes   eb8695c81d20d83871ddd105954bd5ac3528de71  -------  <p> fix streams.zip documentation typo.  8cc9e91bafa0b90360b6972fca23f9d4f8dd3f65  -------  <p> add mediatype for  application/geo+json .  via   relnotes=add mediatype for  application/geo+json .  b47e9ba4e2efa318a0cc44cd9acdb1c215d41c42  -------  <p> upgrade maven-javadoc-plugin to 3.1.0.  fixes   34b7a1eff5091a14ed3a325a5966c9c43b219754  -------  <p> add cross-origin-resource-policy header name constants.  details   relnotes=add cross-origin-resource-policy header to library.  161241d58e93dfdba5a9021d2ee8dc64e3cd3937  -------  <p> fix javadoc links.  fixes   86be2d13b5677207cbc49bfb4431142b119647e6  -------  <p> update documentation to refer correct method name.    relnotes=n/a  a6f7253500de9a6a88c56e94858759c437dee20b,Util,UI,Interpreter,Logging,App,IO
3487,add \textquotesingle to the html conversion table,-->,Util
3496,fix mapping of textquotesingle,follow-up to #3487 actually  the mapping in that pr has not been correct syntactically.,App,Test,Util
3497,fix npe in search bar,-->,App,Logging,Logic,Util,UI,IO,i18n
3503,update internal state of databasechangemonitor when external changes …,…are resolved,Network,Test,UI,App,Security,IO,Interpreter,Util,Logging,Logic,i18n,Search
3506,3359: automatically remove colon and apostrophe from key pattern,-->,Util,App,IO,Interpreter,Logging,UI
3507,add option to remove the link when file is no longer found,3493,UI,App,Util,Logging,Interpreter,Network,IO
3508,implement #3491: clicking the pdf icon in the linked files editor opens the file,3491. a click on the pdf icon on a linked file in the entry editor opens the file. this is consistent with the behavior in the main table and thus i didn t added a new button and / or changed the double-click behavior as it was suggested in the issue.,UI,App,Util
3509,3472: files starting with bibtex key of a similar entry are no longer found by mistake,-->,Logging,IO,Util,App
3512,3505: another try to fix the npe in the search bar,fiexes #3505,IO,UI,Logging,Logic,Util,i18n,App
3521,new crowdin translations,enjoy!,Test,Util
3523,refactor shared package into the architecture,the new java 9 module system brings us the possibility to actually modularize inside java  i.e. to distribute our source code into multiple modules and specify dependencies and constraints among them  much in the way that we do it now with tests. but to extract modules  there can be no cyclic dependencies among them.,Util,App,DB,Logging
3529,add null checks in groupchangeviewmodel,this avoids the npes in #3526. however  i can t get the groups side pane to repaint and depict the modified groups tree. i ve tried different ways via calling the  groupssidepane  or setting selected groups in the  statemanager   but no success.,UI,App
3530,describe new workflow with crowdin,[crowdin]( automatically adds missing translations to the other languages.,Util,Test,IO
3533,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add rangemap#merge  analogous to map#merge.  rollback of 8000dc992d0124372972729b20df40a42b27a849  cebc1985b8d64f3960e363b5641428447e6d33ae,Logging,Util,IO,Interpreter,UI,Network,App
3539,fix options databinding by adding elements if they are not in the initial map,3538,Logging,UI,App,Util
3541,add  convert to bibtex format  cleanup,-->,App,UI,IO,Util
3551,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> remove inaccurate comment.  2cc9ccd8f58402927f4903ebf40f19a63f47c789  -------  <p> change the splitter::limit arg to maxitems  for ide usage.  the old name of  limit  was uninformative when presented in e.g. ide autocompletions.  maxitems  will help distinguish it from the alternative meaning of max number of splits to make.  013d0f1b058f7c6e3ac159745fcead5f481f5b66  -------  <p> gwt.xml change from internal change.  a13896bd6b55883dbe1f4ae71603597f3831a89d  -------  <p> add mediatype for  image/heif  and  image/jp2   relnotes=add mediatype for  image/heif  and  image/jp2   4c70d7f3c3083946aa74e59098b51f521da27239  -------  <p> change a use of iterable.foreach  which isn t available under desugar.  6508a374b7483ea2ec7f5170b94489cb9dc3537d,App,IO,Util,Test
3553,fix group search performance,this includes currently 2 changes:,Util,App,UI
3569,disable the autocompletion as default,implements the workaround presented at 3522#issuecomment-351046350.,UI,IO,Network,App,Util,Logging
3574,convert entry preview panel to javafx,-->,Logging,Util,IO,UI,App
3578,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> restore javadoc unintentionally lost in cl 264984423.    0a9ddbca861d787f2b1d110905e043c25dacfc89,App,UI,Util,IO,Logging,DB
3581,add oadoi fulltext fetcher,-->,App,Logging,Test,Util,Network,IO
3583,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> release the input futures as soon as we submit the combiner task. but really  redo how we release resources in general.  this is a followup to cl 265489523  which  only  released the input futures as soon as the combiner task finished running (which had often happened even before that cl but hadn t if the combiner returned a future that was still pending). that cl was good enough for practical purposes  but i wanted to better understand how we release resources.  this cl standardizes on aggregatefuture.releaseresources() as the way to null out all fields[*]  merging logic from releaseresources()  releaseresourcesafterfailure()  and asynccallableinterruptibletask.setvalue(). as part of that  it merges aggregatefuture and aggregatefuturestate/runningstate into a single object.  [*] ok  except seenexceptions  which gets its own handling. as a bonus  i believe that this cl clears seenexceptions earlier than it used to be cleared in the combinedfuture case. specifically  it clears it when all inputs   rather than when the combiner task has finished running.  it turns out that blindly nulling out fields is too aggressive  so we need to be careful in 2 cases:  1. combinedfuture.releaseresources() can t null out  task  until the future is done or the task is done running. that s because it may need to interrupt the task. to handle this  i don t null out  task  in releaseresources() unless isdone(). to ensure that  task  still gets nulled out as soon as it s done running  i null it out directly in afterraninterruptibly(). (ok  this is another exception to my claim that releaseresources() handles nulling out  all  fields.)  2. even if the output future is done  processcompleted() sometimes needs access to the original futures in order to see whether any of them failed. to handle this  i store them in the listener and pass them through to processcompleted() (when necessary).  the changes to prod code are net negative in line count  at least ignoring the added comments. i ve also added a couple tests  only one of which passed before this cl. and i think the model for when fields are nulled out is overall clearer after this cl. so hopefully this cl is a step forward  despite the complexity of the changes and the remaining complexity in the code. (i also included a few unrelated simplifications  like not bothering to check collectsvalues before calling collectonevalue(...).)  (aside: this cl s releaseresources() is like our proposed aftercommit() api but different. first  releaseresources() may be called even before set() or setasync() in the combinedfuture case. second  combinedfuture may rely on the fact that it s called twice in some cases: it s called once when all inputs complete  but it doesn t null out  task   and then it can be called again if the output is cancelled  at which point it *does* null out  task . but that probably doesn t matter too much because the task was probably handed to an executor in the meantime  so combinedfuture is unlikely to hold the final reference to it. anyway  for more discussion of aftercommit()  see     41a8adb81e2ebf27e9d85f70671ff8f97fd7721b,App,Test,Util
3585,new crowdin translations,enjoy!,APM,App,UI,Logic,Logging,i18n,DB,IO,Util,Network,Interpreter,Security,Test
3591,maintable leaves the swing year and comes back in a new javafx dress,-->,Network,Interpreter,Logging,i18n,IO,App,Util,UI,Test
3597,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> explicitly document that whenallcomplete will swallow failures (in contrast to waiting for all futures to complete and then propagating the first failure).  98971ae01e62ed36f99c8bb5c4e897eac8cb1988,App,Util
3600,make it possible to disable autocompletion in the search bar,3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor.,Logging,UI,Util,i18n,IO,Logic,App
3603,catch and propagate uncheckedioexception in filefinder,-->,Interpreter,App,IO,UI,Logging,Network,Util
3606,add exporter desc to enum analog to import,3605,IO,App,Logging,Network,Util
3620,cleanupstep.move_pdf is not a cleanuppreset anymore,this fixes  with a (imho) less confusing default:,Network,App,Logging,UI,Util,IO
3623,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> s/a/an/  e2564c321bd3bc71cbb77a6af7ccac1be30e9b46  -------  <p> add splitter.splittostream().  61affd0d3d70fdadf90100d54e1a83425b717f56,Util,Logging,i18n,IO,Interpreter,Test,Network,UI,App
3624,add installation directory to java version error message,-->,App,Network,Logging,Interpreter,UI
3632,export translator field to msoffice 2007 xml,upcoming issue from #1750,App,Logging,UI,IO,Network,Interpreter,Util
3635,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> check the array indexes in quantiles.scaleandindexes is non empty.  3210 3211  823a432ddaa2d274b539e12ed2bb46e5be0658ee  -------  <p> simplify some code.  fixes #3580  e2362def3408478a4a74d24671aef39171a1e93f  -------  <p> document the jdk 9+ alternative to  iterators#forenumeration   fixes #3382  e432be553038b4c67f22abb8c27f82ab6d480f3d  -------  <p> add a mime type mpeg-dash (mpd files)  fixes #2677  relnotes= net : added the  mediatype  constant for mpeg-dash.  579ccf6c0181097be7b895ec145f04502234ef0e  -------  <p> fix the logic that decides whether to use currentrequestthreadfactory() under app engine.  while there  also support thread renaming under app engine.  fixes  relevant to  (also  the cl in which i experimented with  before backing it out)  7bd4b2351c1483f34e7192768b4f3e7a10447c33,Test,IO,Util
3636,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> add testlib readme.  3453  3b0f1e580b4e0bde8fd4806c832389d0aade4063  -------  <p> change quantiles  compute() methods for multiple indexes to return a map with entries in the order in which the indexes were provided in the call to indexes().  fixes   relnotes= math :  quantiles   compute()  methods which return a  map  now return a map with entries in the same order in which the indexes were provided.  6a2d070ac268c138d6ad039605de54f535d5f5f3,UI,Util,App,Logging,Network,Interpreter,IO
3637,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> bump version  which went out of date since the previous cl was created.  90f4a1c88941d1d68ec2fc68397a5e11fefa7355  -------  <p> use if statement instead of for statement for a single item.  3633  020621e474e228b4b9c12dbd24badd9590b0af8e  -------  <p> upgrade maven source plugin from 2.1.2 to 3.1.0  fixes   e87b8807798808d5a526a6fd2f49b484bb4a846a  -------  <p> document the jdk 9+ alternative to  moreobjects#firstnonnull   fixes   145da12d85b536d6f2a527e1ccf2430147fa6b83,UI,Util,IO,App,Interpreter,Test,Network,Logging
3638,quickfix to get build running on all platforms,the current version does not compile on my computer locally. this pr fixes it. it was already discussed with @halirutan on gitter.,App,Util,UI
3642,extend ris import with multiple fields,meeting time is programming time :),Test,IO,Util
3647,reimplement special field and file columns,-->,Interpreter,App,IO,Util,i18n,Logging,UI,Network
3654,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> switch to an internal annotation for ignoring jre requirements  3652  relnotes=removed dependency on  animal-sniffer-annotations .  3324ce6af9d672b4a1e4431ebaf84b0e22d7ca86  -------  <p> rename package-private duration apis:   saturatedtonanos() -> tonanossaturated()   saturatedtomillis() -> tomillissaturated()  #goodtime  f3a053ea12ae808ddd52094d36fcd88fe95881f2  -------  <p> suppress more goodtime errors.  9e885c85265c3686aa876acebe6bb6bda18de1f3,Test,Util,App
3658,moe sync,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> resolve some rawtypes warnings in converter  4e37244fb859e1f99ce3356ffab5b2e8333ad268,Logging,Util,IO,UI,App
3661,export no empty lines in ris format,this fixes the remaining part of #3634,Logging,Network,Util,IO,App
3665,migrate importer tests to junit5,in the course of  we realized that our current (junit4) parameterized tests are not executed on the (junit5) travis build. this is tracked here: #3645 i think this is a huge problem  because we are missing out on a lot of validation here.,IO,Test,Util,App,Network
3666,bring back the context menu,-->,IO,UI,Util,Interpreter,Logging,App
3668,fix medline and convert some fetchers to junit5 where possible,i converted only some  because others rely on mockito and there is not yet an offical mockito-extension for junit5,Test,Util,App
3670,3648: chained modifiers work again,-->,App,IO,Logging,Test,Util
3675,moe sync 2019-10-29,this code has been reviewed and submitted internally. feel free to discuss on the pr and we can submit follow-up changes as necessary.  commits: ===== <p> move the setfuture check into abstractfuture.tostring() and out of pendingtostring()  so that even if the latter is overriden we can include the setfuture detail.  this is useful for futures that initially do some of their own work  but then delegate to setfuture()  as futurecombiner.callasync() does.  68bdc31a5cc1ff0dfb3af4003703d93d09ef6485,Util,App
3681,reimplement copy and paste of entries,-->,Util,Network,UI,App,IO,Logging,APM,Interpreter
3682,fix annotation tab,-->,Logging,Interpreter,UI,Util,App
3683,fix select entries my holding mouse,-->,App,IO,Network,Util,Logging,APM,UI,Interpreter
3684,moe sync 2019-11-06,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> add @suppresswarnings( donotmock ) to mocked com.google.common types  @donotmock will be added to these types. this change suppresses warnings for current cases where these types are mocked.  13ed6d3846bb3765b19ec06819a215ae93644b6c  -------  <p> add graphbuilder.incidentedgeorder().  2c1db61cfae457a58554f4390c3907f18f406b6a  -------  <p> remove usages of deprecated charmatcher functions  3565  213ec90d8647412c4d25870fbc1c8bb3a44798ff  -------  <p> have immutablegraph.builder set incidentedgeorder to stable().  c43a2bf57ccc089bb64f2704321e175a611cdc4b  -------  <p> migrate org.mockito.matchers#any* to org.mockito.argumentmatchers  the former is deprecated and replaced by the latter in mockito 2. however  there is a functional difference: argumentmatchers will reject  null  and check the type if the matcher specified a type (e.g.  any(class)  or  anyint() ).  any()  will remain to accept anything.  all remaining  any(class)  references are migrated to  nulllable(class)  to maintain the functionality of mockito 1. all remaining  anystring()  references are migrated to  nullable(string.class)  to maintain the functionality of mockito 1.  3e96e06575ea0bb1e8be61ce2edd57ac9427c71d,Interpreter,APM,UI,Util,Network,Logging,App,IO
3688,reenable drag n drop support for tabs / libraries,-->,IO,Logging,App,Util,UI
3690,moe sync 2019-11-07,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> simplify some range constraints.  fixes   88ef8691008d0c8c65f06a8eeb6a4e253a7a4868  -------  <p> add javadoc in attempt to help readers differentiate futures.allaslist() vs futures.successfulaslist().  980e6e68b72c1adb89b01862b12fdf554b1d5f33  -------  <p> fix broken links in atomicdouble.  see   6c501c499020db010dd96918c26b3a07a655a1dd,IO,Test,Util,UI,Network,App
3694,differentiate inbooks with different chapters,this is my simple solution for #3344 issue. i ve added statement that checks authors  titles and chapters of two inbooks. what do you think?,IO,App,Logging,Test,UI,Interpreter,Util,Network
3696,use streams in group matcher,-->,App
3699,moe sync 2019-11-13,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> clean up some unnecessary initializations.  df0d13f964c729a3e0311f0b9db7e42fea70945e,Logging,IO,Interpreter,App,UI,Util
3700,doi encoded with % supported,fix koppor issues   doi: encoded urls should be supported . new divider within the doi % is supported.,Util,App,Test,Network,Logging
3708,try to change color of magnifier icon,i am trying to change the color of the magnifier icon as requested here: #3535,Logging,App,Logic,IO,i18n,Util,UI
3709,group separator escaping,3646,Test,IO,App,Util,UI
3710,dublin core,938 : only supporting [dublin core](https://en.wikipedia.org/wiki/dublin_core),Util,Interpreter,Logging,UI,Network,App,Test,IO
3711,moe sync 2019-11-19,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> update public suffix data.  the  copy is updated whenever chrome s copy is updated  which is typically every 6 weeks. star the following to watch chrome s updates:    when that bug is not updated  the  copy is updated 3 weeks before the estimated week of stable:    for this update    d6c3cd99a466583651a7058505371fab8b76e554  -------  <p> update to truth 1.0  e6225a652e1a4651541fdeed15a400cdcba29b7a,DevOps,DB,IO,App,Test,Util
3713,add endnote xml importer,-->,Network,Logging,IO,Util,App,Interpreter
3714,update entry editor when entry type changes,fixes an issue partly described here: 289,IO,Logging,Util,UI,App,Interpreter
3717,code cleanup abbreviateaction.java,removed redundant code in line 60 and 61 (callable was executed twice without using the return value of the first execution).,App,Logging,Util
3718,add cleanup operation for replacing ligatures,3613,Util,App,Test
3720,refactor deprecated part of protectedtermsformatter,just a code cleanup pr.,UI,App,Util
3733,refactor bibdatabase migrations,this is the followup for 3658#discussion_r168779345.,Util,DB,App,IO,Logging,Test
3734,moe sync 2019-12-09,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> add @donotmock to several com.google.common types  relnotes:   - add @donotmock to several com.google.common types.  dbd97473cab26185e48620b7916159915621bb14  -------  <p> add @donotmock to listenablefuture  remove @donotmock from abstractfuture  as it is now covered by @donotmock on listenablefuture  relnotes=n/a  ad9d3eae25e3f7a8bb07a0b00105ec4426beab88  -------  <p> fix small error with how caseformat calculates the stringbuilder size when converting one format to another.  fixes   0dc680192f18b7664f900304576736c1914d14ba,Test,Util,UI,App,Logging,Network,i18n,Logic,DB,Interpreter,IO
3735,convert strings dialog to javafx,convert strings dialog to javafx,Interpreter,UI,Util,Network,App,IO,Security,Logging
3751,add the menubar to the titlebar in macos,3146,Logging,Util,DB,UI,IO,Logic,App
3760,pressing esc while searching clears searchfield and selects first available entry,,Logic,UI,Interpreter,Test,DB,Logging,Network,Util,i18n,IO,App
3761,don t trim when migrating review field,fixes 311,Logging,Util,App
3762,meaningful button review field migration,fixes 312.,App,Util
3766,update architecture tests to catch static imports,fixes a part of #2617,IO,Test
3767,moe sync 2020-01-09,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> add incidentedgeorder() to the [value]graph interface  relnotes= graph : add  incidentedgeorder()  to the  [value]graph  interfaces  ae2710e8cb1d0ab80e247334273695da0c7b3afb  -------  <p> make incidentedgeorder() public for [value]graph  relnotes= graph : allow setting a stable incident edge order by calling the newly added method  [value]graph.builder.incidentedgeorder(elementorder.stable()) .  0ceaed084bb7e52d8fa3b0760cb0ffe486918a00,UI,Logging,Util,i18n,App
3769,add group coloring in maintable as replacement for marked entries,,Logic,IO,Network,Interpreter,DB,App,UI,Logging,i18n,Util
3778,fix delete action and convert confirmation dialog to javafx,,App,IO,Util,Logging,UI
3783,save order of columns across sessions,,Util,IO,App,Interpreter,Network,UI,Logging
3784,allow side pane to be completely hidden,,Util,UI,IO,Logging,App
3785,show empty group pane if no database is open,,UI,App,IO,Logging,Util
3789,add telemetry to track every action,,Util,UI,App
3790,set main stage for file dialogs,,UI,IO,Logging,Util,App
3798,new crowdin translations,enjoy!,Interpreter,App,Util,UI,IO,Logging
3800,change open last edited dialgo to javafx,3799 @halirutan  have a look if this works for you,IO,App
3801,moe sync 2020-02-17,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> rename  configurablex  to  standardx  for [value]graph  which better captures what these implementations represent.  note that this work was already started in the past with the abstract standardgraph tests.  1be4110bac4c8540053fb4d096fdbb6d28d8a504,IO,App,Util,Logging,UI
3806,update applicationinsights from 1.0.9 -> 2.0.1,@tobiasdiez this is another round of trying to update the applicationinsights.,Util,IO,App
3808,remove color customization for maintable from preferences,,IO,Network,App,UI,Logging,Interpreter,Util
3820,3796: pretend that we have every translation for every key,3796,Logging,Util
3821,fix copy linked files dialog showing npe when no linked files,,Util,App,IO,Logging,UI
3824,moe sync 2020-03-16,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> implement some more tostring() methods for debugging.  i added these locally while debugging  but they seem potentially generally useful.  d52651a64c4965bb06be812b90aee6191e7a80f8,Util,Test,App,IO
3826,show dialog when copy files did not found file,follow up from #3818,App,Util,UI,IO
3839,moe sync 2020-03-31,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> introducing floor(e) and ceiling(e) method in gwt emulated immutablesortedset package.  relnotes= com.google.common.collect.immutablesortedset : added  ceiling  and  floor  methods for gwt emulated immutablesortedset  706830ee1c7903af3d1d04478a601c2bd0a763bc,i18n,Network,Util,Logging,IO,DevOps,UI,Logic,Interpreter,App,DB,Test
3862,get rid of journal abbrev loader in linkedfiles,cleanup pr for my changes i had to make during merge,Network,Test,UI,Util,App,Logging,Interpreter,IO
3863,fix tests in maintable beta except l10n,i fixed some of the failing tests  except the l10n tests.,Util,UI,App
3865,do no longer log invalidfieldvalueexceptions during autosave,3811,App,Logging,IO,Util
3871,switch colors of search icon for the two search modes,3870,Search,App,Util
3872,fix freezing by replacing codearea with textarea,i looked a bit more at the freezing problem and could nail it down to the codearea.,App,Util,IO,Interpreter,Logging,UI
3878,improve doi resolution fetcher,- increase timeout as doi resolution often fails from  5000 to  10000,Util,Logging,App,Network,IO
3880,make it easier to create fxml dialogs,,IO,App,UI,Logging,i18n,Interpreter,Util
3882,priority fetcher,- all fetchers are run in parallel now,Util,App,Network,Logging,IO
3883,reenable closing of entry preview by pressing esc,,UI,Logging,IO,i18n,Util,Interpreter,App,Logic
3884,bunch of smaller improvements,,App,Util,Test,UI
3886,state button,,UI,App,Util,Interpreter
3887,moe sync 2020-04-28,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> fixed treerangemap.subrangemap.putcoalescing  the short circuiting on an attempt to put an empty range caused the contract of putcoalescing to be violated.  3886  6e0e978abc6d3de458ed7e2b9cb0533c735d36a2,Util,App
3893,moe sync 2020-05-06,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> adds constants for  cross-origin-embedder-policy(-report-only)?  headers ([w3](  relnotes=adds constants for  cross-origin-embedder-policy(-report-only)?  headers.  a061f7e066ad470b47b749c0514ac581cf2397e2  -------  <p> implement trylockuninterruptibly  3880  c9278360493d074ecc88c9d42adbcde2ad90f035,Logging,Util
3895,add xmp exporter,refs 319](319).,App,Util
3899,moe sync 2020-05-13,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> in immutableintarray  use arrays.copyof when expanding the internal array.  909bdb290675c41238a194ad32e6686cda58f6dc  -------  <p> implemented lastindexof in cartesianlist  3878  13da6dd1e8446bc2e5e6a5ac6e87e82ce0b7743f,App,Test,Util
3903,fix pureauth,fixes 74.,Test,IO,Search,Logging,i18n,UI,Util,APM,Network,Logic,Security,App,Interpreter,DB
3907,integrate codestyletest into stringutiltest,during   i observed that having many classes causes difficulties in migrating to a multi module build. since 1) we have [archunit]( in place and 2) the current test in  codestyletest  just covers  stringutils . therefore  i propose to include the test included there into  stringutiltest .,IO,Test,Util
3909,add required mock to linkedfileviewmodeltest,while working on #3704  test were failing in other settings. this is a quick fix to get the tests running.,IO,Util,UI,Test,App,Network
3911,remove all @author comments and empty method/class comments,this removes all  @author  patterns as we do not track author ship by these annotations  but with the version control system git.,App,Util
3919,moe sync 2020-06-04,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> remove @donotcall from fluentiterable.from(fluentiterable).  4ec122fa84a4d3384324250a74120d32e0ccfa1c  -------  <p> update public suffix data.  this copy is typically updated whenever chrome s copy is updated  which is roughly every 6 weeks. subscribe to the chrome milestone calendar to see the dates.  0d5c668d46ecba2a1ec5656b603bbdb30786e9e1,Util,Logging,App
3927,prevent accidentaly deleting a second file when pressing del key,3926,UI,Util,App
3931,moe sync 2020-06-12,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> upgraded bytestreams#copy(inputstream  outputstream) to use the faster filechannel if possible. see also  for some background.  relnotes= io : upgraded  bytestreams#copy(inputstream  outputstream)  to use the faster  filechannel  if possible.  27bc3deb733b2f38bd853953fa21e2e116fc6c34,IO,Util,UI,Network,App
3932,corporate names in brackets are valid corporate authors,3928,Test,Util
3944,replace all ieee urls with  #3930,ieee tests are broken  but they were before. needs to be fixed.,Test,Search,IO,Logging,App,Util,Network
3947,moe sync 2020-06-29,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> correct longmath.roundtodouble for values at and near long.max_value  3d88ea8f940ecadea86d12f8993ac58f99684e6b  -------  <p> in immutabledoublearray and immutablelongarray  use arrays.copyof when expanding the internal array.  in immutableintarray  where we already made this change  remove an inconsistent  this. .  6a8cfb3c83f7bc2a6cbec83e0ce240988f20997e  -------  <p> implement bigdecimalmath.roundtodouble.  relnotes=add bigdecimalmath.roundtodouble.  690b2a6b02bddcaab0a4050a92f490546c71e2ee,App,IO,Util
3950,moe sync 2020-07-01,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> remove unnecessary comment.  a3084e48846ebddfc9d046670f7be8c0f60e6cb3,Logic,App,i18n,Logging,UI,Util,IO
3954,moe sync 2020-07-06,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> hint with the type that  oldfuture  /  newfuture  /  ref  s  future  never contains a value.  being clear may become slightly more valuable when we put nullness type annotations on this code.  e655aa8df4bd53a11edf8bb99e8b35f746f54196,UI,Logging,Util,Network,App,IO
3964,moe sync 2020-07-14,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> make breadth-first iterators consume the successor iterators lazily  and refactor to  cut about 150 lines of code.  relnotes=lazier traverser#breadthfirst().  579c06dc9453fc7b09c8b392507cba09e239c363,Util,Logging,App,IO,Interpreter
3965,fixed url column,this 3860,Logging,App,Util,Interpreter,UI
3967,moe sync 2020-07-16,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> unconditionally call setexception for rejectedexecutionexception.  under jdk11  the write to thrownbyexecute / thrownfromdelegate is upsetting tsan. i *suspect* that tsan is incorrect (and that it is likely to identify the same  problem  in other code).  however  we years ago questioned whether the code i m removing served any real purpose (fixes  so now seems like a good time to get rid of it and  at minimum  hopefully eliminate the current tsan failure.  the code that we re running in the executor is under our control. (that is  we re the ones who implement runnable.run().) we re catching exceptions (and thus any rejectedexecutionexception) in the obvious places. occasionally we do call listeners  but naturally we do that only after completing the future or at least calling setfuture (after which a stray setexception(rejectedexecutionexception) would be a no-op).  the one(?) exception to that is that interruptibletask.run() can call currentthread.interrupt()  which we learned a few years ago can call arbitrary code through nio callbacks. at some point  though  i throw my hands up and say  whatever.   (if the interrupt were to be a problem  it would have to be with an executor that executes tasks inline  like directexecutor. but i note that rejectionpropagatingexecutor  at least  already defends against this for directexecutor itself (by skipping the rejectedexecutionexception logic entirely). so the danger exists only with combinedfutureinterruptibletask or with a non-directexecutor that can execute tasks inline without catching exceptions -- and again  only in concert with nio interrupt callbacks. i think.)  238c383c13d05a75bb6b590f1542e5f4b11f0634  -------  <p> add @donotmock to traverser.  relnotes=add @donotmock to traverser  83e545cd90bbd64b71ac66ff51267bca670bf8f9,Util,App,Logging,IO,Network
3968,fix ieee fetcher by enabling cookie support,3966,Search,App,Network,Logging,IO,Util
3970,moe sync 2020-07-22,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> warn about stack overflows from directexecutor  add more warnings (including on abstractfuture.set* and cancel)  and move warnings to directexecutor itself.  e649a158d3202beefd3375c1774db90a31228708,Search,Logging,App,Util,Network,IO
3976,add generatekey button to entry editor toolbar,when re-designing the entry editor  the generate bibtex button moved to the left on the required fields tab. now i m re-adding it to the toolbar on the left  because i think it should be accessible from all tabs. see screenshot,App,IO,UI,Util,Interpreter,Logging
3979,add text file export for  find unlinked files,this is to add the feature which allows exporting of the list of files found in  find unlinked files  to a text file.,App,Util,UI,Interpreter,Network,Logging,Test,IO
3983,moe sync 2020-08-06,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> fix memory-leaks in localcache on ios  caused by:  1. retain-cycle between outer localcache instance and inner values  keyset and entryset instances. the use of @weak and @weakouter is incorrect there  since inner instances can outlive outer localcache instance. the correct solution is to use @retainedwith annotation to inner-classes.  2. retain-cycle between referenceentry objects which internally form a doubly-linked list. fixed by adding @weak annotation to  next  and  previous  links. this is correct  since referenceentry instances are already retained by segments.  the unit test for leak detection is added inside xplat  because the required testing infrastructure is not present inside  google_common  (the iosasserts class). eventually  everything should be moved to  google_common .  relnotes=fix memory-leak in localcache on ios  8fb1cada24cae186226f0d3785704fc19ea2e9fa,Util,IO,UI,App
3987,moe sync 2020-08-12,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> avoid boxing in doubles.constraintorange() and floats.constraintorange().  fixes   f850db59358a3b5f9b2da96b7feea06802077b19  -------  <p> remove  @beta  from  multimaps.tomultimap .  fixes   relnotes= collect : removed  @beta  from  multimaps.tomultimap .  b9fe10a7b1c67518d9c6b86fc6611473943c188c  -------  <p> bring back previously deleted serializedforms so that old data can still be read.  relnotes= collect : data that was previously serialized  and that originated from immutablemap.keyset() or .values()  is now deserializable again.  d66fda44e127d00e401cadde1834454feffade86,IO,App,Test,Util,Interpreter,Logging
3988,moe sync 2020-08-14,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> [efficiency] modifies testtonumericformatv6 to parse the input string in place.  relnotes= inetaddresses : inetaddress parsing is now more efficient  62a8cc4512d12d7afd1960ddca07b595be3eaf55,App,Util,Network
3996,moe sync 2020-08-24,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> adding sec-ch-ua-arch header.  header spec here:   relnotes=n/a  8ed8696b2a1700bfcf5e7727f0be6141d2438e20  -------  <p> work around an android bug in locksupport  this time with @canignorereturnvalue  a849f7f1264b586d44f2b34f274bac9f1d7eff19,App,IO,Logging,Util,UI
4002,fix look and feel related issues,enabled the change of the l&f for mac.,DB,Util,IO,UI,Logging,App,Logic
4004,activate context menu on key press,,IO,Util,UI,App
4011,reimplement tooltips for file and identifier columns,this 3973.,Logging,Interpreter,UI,Util,App
4015,fix custom exporter not displayed in file chooser,4013,DB,Util,UI,i18n,IO,Test,App,Interpreter,Network,Logging
4016,do not trim or remove whitespace from the title based id fetcher,4014,Test,Util,Logging,Network,IO,App
4019,fix acm fetcher import of entries,4018,Network,App,Search,Util
4030,moe sync 2020-09-18,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> fix unsupportedoperationexception from treerangeset.subrangeset().add().  4019  #4002  3685507ce36e24f111cabb45c6d5c5dd26565aad  -------  <p> deal with class#isinstance checks which are guaranteed to be false.  2fa82f2cb6e1d2f6c29b7986be6e95063b65bf71  -------  <p> change  forwardingmap.remove(object)  parameter name from  object  to  key  to match  map.remove(object key) .  fixes   204904cbe79852e29aec2e461273f9b6112bd2f9,Util,Test,App
4031,switch to org.postgresql,,App,Util,Logging,Interpreter,UI,IO
4035,moe sync 2020-09-22,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> add brief test to range for  [_  x].isconnected([x  _])    relnotes: n/a  4629a25981b1ff667315d481fc21bcb094d436dc,Interpreter,UI,App
4037,fix freeze when importing,,IO,Util,Logging,App,UI
4039,use all-text-fields magic also in bibtex cleanup.,the cleaup presets in bibtex were not equal to the ones at biblatex. i fixed that:,Util,App
4040,convert shareddatabaseconnect dialog to javafx,connection works so far.  no more freezes regarding addtabs. in basepanel,Interpreter,UI,App
4043,add  add braces  formatter,in the context using springer s default bst file  the  title casing  feature of bibtex is not desired. when working with persons quickly creating their bibliography  the solution is to put  {}  around the  title  field. up to now  jabref supports the inverse feature by the  removebracesformatter . this pr adds the  addbracesformatter . i am very aware that the other formatters such as our  org.jabref.logic.formatter.casechanger.protecttermsformatter . however  that formatter relies on a fixed list of terms  whereas this  addbracesformater   just works  (under some assumptions).,App,Util,Test
4044,streamline formatter implementation,this builds on  and streamlines the code of the  formatter  framework a bit.,App,Logging,Util
4046,add missing translation for  html to unicode,all formatters return a localized  getname . the only exception is the  htmltounicodeformatter . this pr fixes this.,App,Interpreter
4047,a first solution for the cli problem #4038,exportfactory is not initialized at this execution point,Logging,Util,Network,UI,Interpreter,App
4054,restructure startup,considered as necessary when reviewing #4047,Logging,UI,App,Util
4056,extract old bibtex key generation action,4000,Util,i18n,Logging,UI,App
4057,4041 to make push to application work again on osx.,for unknown reasons  it seems no longer possible to give the command,Util,UI,App,IO,Logging
4058,cpu leak,see #3943,Test,App,Util
4059,change date parsing warning to debug statement,,Network,App,UI,Util,Logging
4060,small fixes,,IO,UI,App
4061,groups right click,,UI,Util,Interpreter,i18n,Logging,IO,App
4074,mac graphics,4070,Network,Util,IO,Search,Interpreter,App,i18n,Logic,UI,DB,DevOps,Logging,APM
4100,migrate review field in entry preview to comment,migrate review field in entry preview to comment,App,Util,Test
4105,fix that sometimes an empty side pane is shown,,App,Util
4106,opens the directory of the currently edited file when opening a new file,opens the directory of the currently edited file when opening a new file,App,Logging,IO,DB,Util
4107,fix a few things in entry editor,,Logging,APM,IO,Test,i18n,DB,App,UI,Logic,Util,Network,Interpreter
4109,smooth shutdown,,IO,Test,Logic,UI,Logging,App,Interpreter,DB,APM,Network,Util,i18n
4111,fix open thread prevents shutdown,@tobiasdiez  as this is just contains the relevant fix and works for me  i would be in favor for using this pr. you could still have your pr as refactoring pr then,APM,UI,App,Util,Network
4123,fix convert to bibtex moves contents of the file field,4120,Logging,Util,IO,App,DB
4124,saves and reloads window state on close and on open,saves and reloads window state on close and on open.,IO,Util,DB,App,Logging
4128,fix build,,UI,IO,Test,Util,Network,App
4137,3805: dash correctly terminates commands in layout files,,Logic,App,Interpreter,Logging,Search,Test,APM,UI,Util,Network,IO,DB,i18n
4138,single line text fields,solution for 4126]( i ve used text formatter to force single line behavior. hope it s enough :) particular fields  that should contain only one line  are stored in immutable set.,Util,Search,Network,Logic,Test,App,UI,Security,Logging,DB,i18n,Interpreter,IO
4139,convert doaj fetcher to new interface,,App,Test,Logging,IO,Network,Util,Interpreter,UI,i18n,Search
4141,convert springer fetcher to new interface,,Logging,Util,IO,Search,Test,Network,App
4144,convert acm fetcher to new infrastructure,,App,Network,i18n,Test,Logging,Search,UI,Interpreter,Util,IO
4180,improve error message for fetchers,,IO,App,Util,Network,Search,Logging
4181,4134: no longer freeze when clicking browse in aux import dialog,,UI,App
4182,fix not on javafx thread exception in  generate data from doi,,App,Util,UI
4184,3062: ctrl + f selects search field again,,Logging,Util,Logic,UI,i18n,App,IO
4185,convert citeseerx fetcher to new infrastructure,the old implementation first extracted the detail pages for each article matched by the query and then went to every detail page to extract the bibliographic information. instead  we now parse the coins information that is already contained in the main result page and thereby reduce the number of requests to 1 per query.,Network,IO,Util,App,Search,Test
4203,rewrite web search pane in javafx,,App,Util,UI
4212,make attached files relative to the file directory,4201,Util,UI,IO,App
4216,fix fetcher tests,fix fetcher test and fix l10n logging for test,IO,Search,Util,App,Interpreter,Network,Logging
4245,fix style issues in about dialog,,Network,Logging,App,Interpreter,i18n,IO,UI,Util
4246,solved #3823 file annotation,this pull request solved #3823  and improved the new line remover.,Test,UI,App,Util
4252,fix attach file does not relativize file path,4241,IO,App,Util,UI
4255,fix for issue koppor 254 (auto cleanup url),,UI,Util,App
4259,remove spin comments,4192,IO,Logging,Util,UI,App
4260,fix for issue 3959: migrate all tests to junit 5,,IO,App,Util,Network,Test
4261,fix display of checkboxes,,UI,App
4268,convert part of the issue#3861 quality->cleanup entries,,UI,App,Util,IO
4275,changed the behavior of the field formatting dialog,i made the loops for formatting all fields in the fieldformattercleanup class test for not being the key_field.  i originally had this in the cleanupsinglestring method to prevent key_field from being cleaned up (reformatted) entirely  but decided to let the user specifically format that field.  when the user chooses to format all fields at once  however  the key_field will be not be reformatted. this solves issue 4148](4148),Interpreter,UI,Network,Logic,IO,Util,Logging,Test,i18n,DB,App
4277,convert bibtexkeypatterndlg to javafx as well,4253  in the bibtex key pattern panel there was an exception thrown if you had defined custom entry types or used biblatex mode.,UI,Interpreter,App
4278,fix npe with bibdatabasecontext in preview style dialog,3765. i discovered an npe with the bibdatabasecontext in the newdroppedfilehandler.,IO,Util,UI,App,Logging
4280,improve preferences,,IO,Util,Logging,App,UI,Network
4281,fix npe when importing from cli,,App,Util,IO
4282,added a comment for the purpose of the class,this is a comment that describes the purpose of a class.,Logging,App,Util
4284,fix exceptions when trying to change settings,i also took the opportunity to improve a few things around our localization code (mainly converting languages to enum).,Network,Logging,IO,UI,App,Util,Test
4289,fix npe in merge entries dialog,4233,UI,App
4290,fix error prone warnings,fix a few things found by error prone.,Network,App,Test,Util,UI,i18n,IO
4291,fix loading and storing of xmp field exclusions,4072,Test,App,Util,IO
4299,fix freeze on import into current library,execute import inspetion dialog in swing thread,App,Logging,IO,Util
4302,convert to circle ci 2.0,i just found that @koppor  already had a  branch and configuration for circle ci 2.0,App,Network,UI,Logic,Interpreter,Logging,DB,Test,Search,IO,i18n,APM,Util
4309,completely rework save operation,,IO,Util,UI,Logging,App
4311,fix drag and drop in entry editor,4305,App,Logging,Util,UI,Interpreter,IO
4312,convert new entry dialog to javafx,followup from  #4266,Logging,UI,App,IO,Util
4314,readd status line in form of a snack bar,,Util,Logging,IO,UI,App
4317,fix that  rename and move file  throws file not found exception,4307. moreover  i refactored a bit how files are renamed/moved to the default file directory. this should make it easier to reuse the code.,Test,UI,IO,App,Network,Util,Logging,Interpreter
4325,wrap preferences in scrollpane as well,don t override pref size,App,UI,IO
4326,fix height of entry editor fields,some of the text fields didn t use all the available height  which resulted in a unharmonic display. this is now fixed.,IO,Util,App,Interpreter,Network,UI,Logging
4327,save sort order column of main table,4224,IO,Logging,App,Network,UI,Util
4333,fix entry editor field display,some of the entry editor fields were not using all the available height which resulted in an inhomogenous display. this is fixed now.  i also marked more fields as  singleline . moreover  singleline fields are now vertically centered (i m not sure if i like this change or not - but i couldn t find a way to make text in text fields not centered).,IO,App,Util,Interpreter,Network,Test,i18n,UI,NLP,Logging
4335,fix that web search pane steals input,fixes  by making the search button in the web search pane not the default button.,App,UI
4336,remove globalfocuslistener and old textfield entry editor,fixes 4324.,IO,Util,UI,App,Logging
4337,fix export of corporate author to msoffice,fix tests,App,Util
4338,added new keyboard shortcut  ctrl+e  for closing the entry editor. (#4222),enhancement presented here [,App,Logging,IO,UI,Util,Interpreter
4341,convert oo/lo sidepanel to javafx,converted the oo/lo side panel to javafx. ported all dialogs do javafx.,App,IO,Util
4351,fix freezes in entry editor,fixes  and probably fixes  as well. the reason for the freezes were the pull-request  these changes mess up the layout for some reason. the fix is to inject a decorationpane ourselves directly from the beginning. although this fix started as a workaround for this bug in controlsfx  i think  we should keep it permanently for performance reasons.,Logging,App,UI,Util,DB,IO,Logic
4354,fix javafx thread exception when fetching new infos,fixes javafx thread exceptions by reworking the swingworker using javafx backgroundtasks.,Util,Logging,App
4355,auto trim url field,,Util,App
4367,arxiv fetcher support  url,in this pr i wanted to fix the issue from 328](328).,Logging,Search,Util,Network,Interpreter,App,IO
4369,fixed testexportasmodsandthenimportasmods,,Test,Util,App,IO
4379,change latex command handling only for xml chars,refs #3838,Util,Test,IO,App
4390,fix entrytype dialog not closed after generate button,when generating an entry from an doi or similar  the entry was inserted  but the dialog not closed.,UI,App,Interpreter,Util
4394,convert exporter customization dialog to javafx,this is my work so far.  i am just beginning the dialog conversion and wanted to share my reasoning so far.  what i am doing is listed in the comments in class  exportcustomizationdialogviewmodel .,UI,Logging,App,IO
4396,fixes for all mods exporter tests,,IO,App,Test,Util
4400,fix violations of always use braces,since @tobiasdiez already proposed the always use braces rule in   i just went ahead and fixed the violations in the code.,Util
4404,fixed an issue where corresponding groups are sometimes not highlighted when clicking on entries,fixes 3312](3112),Util,UI
4405,show dialog before creating entry,#4360,UI,IO,Util,App,Logging
4408,add a preference to add files in entry editor,this pr for #4356 mainly involves,UI,Util,App
4413,fix group hit counter when adding entries,3537 by replacing the eventbus subscription by a javafx listener.,Util,UI,App
4415,searchable/filterable preferences,1019,UI,Util
4419,update readme.md,remove obsolete integration test description. add a note on travis,Util,UI,App
4420,fix highlight color of selected text and progress bar,in the progress  also a few npes in the themeloader were fixed.,UI,App,Logging,Util,IO,Test,Network
4426,fix arrayindexoutofboundsexception on second pdf import,4422,App,Test,Util,IO
4428,fixed radiobuttons in preference menu (#4409),previously multiple radiobuttons in preference menu belonging to the same group were selectable simultaneously. this issue is now fixed on multiple occasions  allowing only one option per group to be selected at the same time. issue: 4409](4409),App,UI
4431,add citation styles as git submodule,this pr is prepares #3421 by removing the dependency on  org.citationstyles:styles:1.0.1-snapshot  and instead embedding it as git submodule. this builds the citation styles directly into the jabref jar.,App,UI,Util,Network,IO
4439,fix groups drag and drop,fix a bug with drag and drop groups.,UI,Interpreter,i18n,IO,Util,Logging,App
4444,improve mathscinet fetcher and add isbn fetcher to entry editor toolbar,makes the mathscinet fetcher more reliable in the case the entry already contains a mrnumber.,App,Test,Util
4445,add eprint cleanup,adds a cleanup operation that detects an arxiv identifier in the note  journal or url field and moves it to the  eprint  field.  i also took the opportunity to convert the cleanup panel to fxml and somewhat simplified/refactored the code around the cleanup.,Test,Interpreter,Network,IO,Util,App,Search,Logging,UI
4446,set auto-update checkbox enable/disable when reading preferences,this patch addresses issue 4427]( added a call to the existing event handler (which enables/disables the checkbox in response to user clicks) when we set the checkbox value from the preferences.,UI,App,IO
4448,change location of some fields in the entry editor,- journal/year/month in biblatex mode -> deprecated (if filled) - doi/url: general -> optional - internal fields like ranking  read status and priority: other -> general - moreover  empty deprecated fields are no longer shown,Util,App
4452,added extra stats to be sent with mrdlib recommendations,* added the following stats to hopefully improve quality of recommendations:,Logging,App,IO,Util,Network
4453,fix error in l10n file: toogle -> toggle,,UI,App
4468,respect preference state,address issue [4427]( where the saved state of the update timestamp checkbox is not restored.,UI,App,IO
4470,3189 fix group renaming,fix group renaming #3189 .,i18n,App,UI,Interpreter,Util,Logging,IO
4484,4467 - fix save button,: #4467,UI,IO,Util,Logging,App
4498,improve page checker,superseeds the pr #4188 and 4113. now page ranges like  r2-r5  are considered to be correct.,Test,App,Util
4505,create test,refactor  savedatabaseaction  send  jabrefpreferences  via constructor parameters.,Test,Util,IO,App
4507,bump java-diff-utils from 2.2.0 to 4.0,bumps [java-diff-utils]( from 2.2.0 to 4.0. <details> <summary>commits</summary>  - see full diff in [compare view]( </details> <br />  [![dependabot compatibility score](  dependabot will resolve any conflicts with this pr as long as you don t alter it yourself. you can also trigger a rebase manually by commenting  @dependabot rebase .  ---  <details> <summary>dependabot commands and options</summary> <br />  you can trigger dependabot actions by commenting on this pr: -  @dependabot rebase  will rebase this pr -  @dependabot recreate  will recreate this pr  overwriting any edits that have been made to it -  @dependabot merge  will merge this pr after your ci passes on it -  @dependabot cancel merge  will cancel a previously requested merge -  @dependabot reopen  will reopen this pr if it is closed -  @dependabot ignore this [patch|minor|major] version  will close this pr and stop dependabot creating any more for this minor/major version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this dependency  will close this pr and stop dependabot creating any more for this dependency (unless you reopen the pr or upgrade to it yourself) -  @dependabot use these labels  will set the current labels as the default for future prs for this repo and language -  @dependabot use these reviewers  will set the current reviewers as the default for future prs for this repo and language -  @dependabot use these assignees  will set the current assignees as the default for future prs for this repo and language -  @dependabot use this milestone  will set the current milestone as the default for future prs for this repo and language -  @dependabot badge me  will comment on this pr with code to add a  dependabot enabled  badge to your readme  additionally  you can set the following in your dependabot [dashboard]( - update frequency (including time of day and day of week) - automerge options (never/patch/minor  and dev/runtime dependencies) - pull request limits (per update run and/or open at any time) - out-of-range updates (receive only lockfile updates  if desired) - security updates (receive only security updates  if desired)  finally  you can contact us by mentioning @dependabot.  </details>,Util,Logging,DevOps,UI
4519,fixed 4365 put html in clipboard,4365 .,Util,App,Logging,IO,UI
4520,optimize data fetching,optimize fetching data from database,Util,App,Logging,DB,Test
4533,add preselect last used export format in export to clipboard dialog,add feature to store last selected export file type  and preselect that type the next time the dialog to export to clipboard is fired.,UI,App,Logging,Util,IO
4547,do not extract file ending from urls,4544 do not extract file ending from urls,Util,NLP,App,Network,IO
4549,fixes that renaming a group did not change the group name in the interface,3189.,i18n,App,IO,Util,UI,Logging,Interpreter
4553,cleanup interfaces,some interfaces were with the access modifier public these were removed since they are redundant,Util,IO,App
4554,refactor bibentry deprecated method,refactored bibentry deprecated constructor,Test,IO,Util,App
4555,automatically created groups with field to group by as entrytype (#4539),,NLP,IO,UI,Network,i18n,Search,Util,Test,Logic,Interpreter,App,Logging
4560,delete the deprecated bibentry constructor,this is the followup for   which removed the usage of this constructor. this pr also deleted this code.,UI,Logging,App,Util,Network
4565,add uncaught exception message,added a simple dialog showing up if an uncaught exception was logged.,Logging,App
4577,don t set column sort type at startup,fix performance issues,Util,Logging,UI,Interpreter,App,IO
4587,add a variable to track the change in preview style,proposed solution for #4580:,IO,Util,Logging,App,UI
4596,mr dlib label  error handling  display confirmations,this pull request contains 4 improvements to the related articles tab:,Network,IO,Logging,Util,App
4601,convert duplicateresolverdialog to javafx,4598,Util,UI,Logging,App,IO
4602,convert new version dialog to javafx,,IO,Util,App,UI,Logging
4604,enable default cursor for new entry,4600.,UI,App,Util,Interpreter
4605,convert  show preferences  dialog to javafx,,UI,Util,App
4607,convert  from aux file  dialog to javafx,,Interpreter,App,UI,Util,IO
4608,convert  customize importer  dialog to javafx,,App,Util,Logging,UI,IO
4613,fix preview style configuration,4609.,UI,App,Util,Logging,IO
4617,convert libraryproperties to javafx,converted the library properties dialog to javafx,Util,App,Logging,IO,UI
4634,remove old code for pdf import,,IO,Network,App,Util,Test
4642,4591] add integrity check for books with edition reported as 1,4591,App,Util
4644,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer,fixes: #4641,App,IO,Network,Test,Util
4658,fix for #4628 - cant save new content selectors,4628,UI,Interpreter,App,Util
4660,4610. changed the way the groupdialog description is displayed.,fixes 4610](4610),App,Util,UI
4692,rework import inspection dialog in javafx,,App,Network,UI,Util,APM
4693,rework external changes dialog in javafx,,App,UI
4694,remove global search feature,,Util,App,Logic,Logging,i18n,UI,IO
4696,remove resolve duplicate keys dialog,,App,IO,DB,UI,Util,Logging
4697,convert  wait for save  dialog to javafx,,IO,App,UI,Logging,Util
4698,catch numberformatexception in bibtexml exporter,,Interpreter,IO,Util,Logging,App,i18n
4701,convert manage keywords dialog to javafx,,IO,Network,Util,App,Logging,UI,Interpreter
4702,improve parser warnings,based on   in which a user (rightfully) complained that the error message is not very helpful.,Util,App,Logging,IO
4707,group and reorder the main menu (tabs & icons),group and reorder the main menu (file  edit  library  quality  tools  and view tabs & icons). now it looks like on the @martinkarim s prototypes.,Logging,IO,Network,Util,App,UI,Interpreter
4708,disable rank column by default,closes 4585.,Logging,UI,IO,Util,Network,App
4711,convert  manage external file types  dialog to javafx,,Test,Util,Interpreter,i18n,DB,Logging,App,IO,UI,Network
4713,fix: bibkey generated does not handle diacritics,4709.,App,Util,Logging
4715,convert  protected terms  dialog to javafx,,Network,UI,IO,App,Util,Logging
4716,temporarily remove  customize entry types,,App,Util,IO,UI,Logging
4717,remove  plain text import  feature,,Security,App,Network,Search,Logic,Util,IO,DB,UI,Interpreter,Test,APM,Logging,i18n
4720,4703: newline format couldn t be changed,4703.,App,UI
4722,adding additional modifiers to be used in bibtex key generator,as i currently wanted to have a possibility to have  capitalized shorttitles  in my bibtex keys i reused the already existing  capitalizeformatter    titlecaseformatter  and  sentencecaseformatter  as  modifiers  to be used also for the bibtexkeygenerator.,App,Util
4727,4306] disable renaming,4306,Network,Interpreter,UI,IO,Logging,App,Util
4729,saving changes and exiting application,4728,UI,i18n,Interpreter,Util,Test,Logging,IO,Logic,App,Security,Network,APM
4730,improve toolbar icons and their layout,group and reorder the toolbar icons and add  generate bibtex keys  button. now it looks like on the @martinkarim s prototypes. <br>,Util,App
4731,fix default import format pattern,remove display array,Test,Logging,UI,Util,App
4732,4494] add key bindings,4494,App,Util
4738,adding support for input methods,4474,IO,App,UI,Interpreter,Logging,Util
4739,remove old swing-based tests,,Test,Util,IO,UI,App
4741,revert  fix: bibkey generated does not handle diacritics,reverts jabref/jabref#4713,App,Logging,Test,Util
4742,revert  revert  fix: bibkey generated does not handle diacritics,reverts jabref/jabref#4741,App,Util,Logging,Test
4744,move library specific key pattern dialog call to library menu,follow-up of #4666 and #4707: menu entry  bibtex key patterns  is calling a library specific dialog to set key patterns. the global key patterns are managed using  options  ->  preferences .,App,IO,UI,Util,Logging
4746,switch to the mariadb connector from the mysql one.,switch from  com.mysql.cj.jdbc.driver  to  org.mariadb.jdbc.driver .,Logic,DB,IO,APM,UI,i18n,Network,App,Interpreter,Util,Test,Logging
4750,code optimized and created a reusable method to get writer output,,Interpreter,App,Util,IO,Test
4759,feature: implement search filter in show preferences,add a search box in show preferences window to allow users to filter,Util,App,UI
4760,improve remote messaging,4023 (multiple instances possible) and should 4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast). surpasses #4460.,UI,IO,App,Util,Logging,Network,Interpreter
4761,enable import button only if entry selected,,IO,Util,Interpreter,Network,Logging,UI,App
4769,fix removing entries when source-code-field is out of focus,4764,App,Util,Logging,UI,IO
4779,fix illegalargumentexception when ranking entries,add names for ranking entries event so it does not generate an illegalargumentexception.,Logic,DB,Network,IO,Interpreter,Search,i18n,Test,UI,NLP,Util,Logging,App
4787,remove unused swing code,,App,Util,IO,Logging,Interpreter,UI,Network
4791,fix npe in duplicate resolver dialog,4785,UI,IO,Logging,Util,App
4792,relativizes paths to aux files,,App,UI,Util,IO
4794,fix closing of library not handling backup and autosave manager shutdown,4789,Util,UI,Logging,IO,App
4797,fix right clicking on any entry and selecting  open folder  results in the nullpointer exception,4763,Test,Util,Logic,UI,Search,Interpreter,Network,i18n,App,NLP,Logging,IO,DB
4803,improved and added documentation,while looking at the code  i observed obsolete documentation patterns which did not confine to the documentation guidelines.,Logging
4807,item count in a group updated correctly,,App,UI,Util
4815,enhanced message log,worked on  4805]( .,App,Util,Logging,Interpreter,IO,i18n,UI,Network,Test,Logic
4818,put renaming of file entries in javafx thread for cleanup,closes #4817,App,Logging,IO,Util
4822,convert autolinkfilesaction to javafx,4819.,IO,Interpreter,Util,UI,Network,Logging,App
4823,moved cleanup out of background thread to stick with the architecture…,@r0light  and i tried to resolve the build issue introduced by #4818 as a temporary solution.,Util,Test,Network,App
4835,all buttons in custom dialogs react on enter,all buttons in custom dialogs react now also on <kbd>enter</kbd>. (the default behavior <kbd>space</kbd> in javafx is not affected by this change.),Util,App,UI
4838,adds a delay to the group expansion,adds a delay to the group expansion action. the delay is currently 1 second and only expands the group.,UI,Util,IO,Interpreter,App,i18n,Logging
4839,fix parser exception when loading tex-groups with non-existing file,4735.,Network,Util,IO,Logging,App
4847,removed default constructor of fxdialogservice,fix for #4840. needs test and discussion,Logging,App,IO,Util,UI,DB,Logic
4848,fix custom name formatters,3531.,Util,Logging,App,IO,Test
4860,remove deprecated awt apple extension,3905,Util,App,IO,Logging,UI
4872,toggle enable status of menu items,,IO,App,Interpreter,UI,Logging,Util
4876,fix saving of strings,fix removing of strings,UI,Test,Util,App,Security,Interpreter,IO,Logging,Network
4884,improve snackbar dialogs for copy to clipboard menu,-  removed an unnecessary message when copying to clipboard (see  citationstyletoclipboardworker.copycitationstyletoclipboard() ),Network,IO,Util,UI,Logging,App
4885,convert externalfiletypeentryeditor to javafx,last but one swing dialog. the other is pushtoapplication.,App,Interpreter,UI,Util
4891,convert pushtoapp settings to javafx,replace runnable with backgroundthread in push,Logging,IO,Util,Interpreter,UI,Security,Network,App,DB
4892,fixed closing of the shared database login dialog if the user enters wrong authentication details - #4857,fix for the issue -  dialog close after pressing ok button #4857 - fixed closing of the shared database login dialog if the user enters wrong authentication details.,Interpreter,Logging,IO,App,Util,DB,UI,Security
4894,getting rid of swing,since we made good progress in removing swing so far  i created an architecture test to check if swing and jgoodies is still used.,Util,Interpreter,Test,UI,App,Search,Logging,IO,Network
4896,store column widths as integer,4579,UI,Util,App
4897,convert search worker to javafx,one of the few things which was still using swing.,App,Util,UI
4898,rework posteopenactions to javafx (custom entry type import),convert dialog for importing custom entry types to checklistview,DB,Logging,Network,Interpreter,UI,IO,Util,App
4904,fix some codacy code convention issues,not much to say about this,Logging,Util,IO,App
4918,fixes throwing an exception when  id  field is present in bib file,4905,App,Test,Util,IO
4926,ui preferences global modifications,ui improvements in preferences tab : general  file  network  groups and entryeditors.,UI,App
4931,improve author parsing,4864. the author class added an additional space when converting  a o  to the dotted version  a. o. .,Test,App,Util
4935,throw bibentrynotfound exception in case entry is no longer present,4932,Util,IO,Logging,App
4943,fix threading issue with opening from recent libraries,4940,DB,UI,Logging,IO,Util,App
4950,fixes remaining issues in #4844,4844,Logging,Interpreter,IO,App,Network,UI,Util
4956,bump jaxb-xjc from 2.2.4-1 to 2.3.2,bumps jaxb-xjc from 2.2.4-1 to 2.3.2.  [![dependabot compatibility score](  dependabot will resolve any conflicts with this pr as long as you don t alter it yourself. you can also trigger a rebase manually by commenting  @dependabot rebase .  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---  <details> <summary>dependabot commands and options</summary> <br />  you can trigger dependabot actions by commenting on this pr: -  @dependabot rebase  will rebase this pr -  @dependabot recreate  will recreate this pr  overwriting any edits that have been made to it -  @dependabot merge  will merge this pr after your ci passes on it -  @dependabot squash and merge  will squash and merge this pr after your ci passes on it -  @dependabot cancel merge  will cancel a previously requested merge and block automerging -  @dependabot reopen  will reopen this pr if it is closed -  @dependabot ignore this [patch|minor|major] version  will close this pr and stop dependabot creating any more for this minor/major version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this dependency  will close this pr and stop dependabot creating any more for this dependency (unless you reopen the pr or upgrade to it yourself) -  @dependabot use these labels  will set the current labels as the default for future prs for this repo and language -  @dependabot use these reviewers  will set the current reviewers as the default for future prs for this repo and language -  @dependabot use these assignees  will set the current assignees as the default for future prs for this repo and language -  @dependabot use this milestone  will set the current milestone as the default for future prs for this repo and language -  @dependabot badge me  will comment on this pr with code to add a  dependabot enabled  badge to your readme  additionally  you can set the following in your dependabot [dashboard]( - update frequency (including time of day and day of week) - automerge options (never/patch/minor  and dev/runtime dependencies) - pull request limits (per update run and/or open at any time) - out-of-range updates (receive only lockfile updates  if desired) - security updates (receive only security updates  if desired)  finally  you can contact us by mentioning @dependabot.  </details>,App,Network,IO,Logging,Interpreter,Util
4964,remove ui threadlist for maintable as it prevents sorting in maintable,4886,App,UI,Util
4965,fix downloading pdf produces html as extension,if we already have a filetype we use that instead of relying on the autodetection,UI,IO,Network,Logging,App,Interpreter,Util,Test
4970,bump jsoup to 1.12.1 and switch jsoup s stringutil for jabref s stringutil,here is a correction for #4968: it bumps jsoup from 1.11.3 to 1.12.1 and  also  it switchs jsoup s stringutil for jabref s stringutil in all files that used it.,Network,Search,Util,IO,Logging,App
4979,fix command line help text,now in the cli help text  arguments and descriptions have been rewritten for fixing  simplifying  and detailing them better.,Interpreter,Util,DB,Network,UI,Logging,App,Test,IO
4980,resize different fonts changing entry type,now jabref uses the same typography for the two menus to change entry type (and for the tooltip).,Network,Logic,UI,Util,i18n,Logging,Interpreter,App,Test,IO
4981,duplicate check on import should be run in background task #4963,created background task for the work done in org/jabref/gui/importer/importentriesviewmodel.java:68,UI,Interpreter,App,Util
4983,npe-fix for preferences/ext-prog/settings for x/browse,title should be self-explanatory  dialogservice was not initialized.,UI,Util,App
4993,fix icon size - the second,the entry-editor showed a slightly smaller icon for the generatebibtexkey-button  this bug also had an effect on the display of icon size in #4991,Logging,App,Util,i18n,UI
4996,fix the  attach file  dialog for starting on the user s main directory,now the  attach file  dialog  in the right-click menu for an entry  starts on the working directory instead of the user s main directory. it is the same behavior as when adding a file from the entry editor.,Util,App,IO
4999,fix iee fetcher,4997,Logic,Util,UI,Network,Logging,App,IO,Interpreter,i18n
5007,bibentrysource contextmenu,i was missing a context-menu in the source-editor. so i made one.  -),App,UI,Interpreter,Util,Logging,IO
5011,latex integration project,hey! this is the pull request where i will be uploading everything related to the latex integration project  which tobias mentioned in #5002.,App,IO,Util,Network,Test
5014,adding doi to test entry - 5013,one liner to have also a doi available in the entry to test the preview function.,App,Util
5024,select push app in preferences,as asked by @tobiasdiez  here is my alternative proposal  this closes #4991 by merging.,UI,App,Util
5025,add warning for empty bibtex keys in entry editor,added a warning for empty bibtex keys in entry editor.  4440,DB,App,IO,Network,Logic,Logging,Util,i18n,Interpreter,Test,Search,UI
5033,convert preferencedialog to mvvm,one of the last missing things in #3861 is the conversion of the preferencedialog and some of its tabs to mvvm. i understood that in the future jabrefpreference probably need properties  to make them bindable. but for now i think this goes beyond this pr.,IO,Util,App,UI
5040,remove  automatic bug report  title,right now users often forget to change the title to something reasonable.,App,Network,Logging,UI,IO,Util
5042,convert merge shared entries to javafx,last  big  dialog for conversion to javafx,App,UI,Util,DB
5048,preserve encoding while copy and pasting in maintable,5043.,Util,Interpreter,IO,UI,Logging,App
5054,shutdown unirest workers,just realized that our shutdown problems might also be caused by the unirest library:,App,APM,Util,UI,Network
5056,fix order of other fields,5028,App,UI,Interpreter,Util
5058,fix automaticalls set file links task not runinng,executing the created task would have been helpful 🤦‍♂,UI,App,Util,Logging,Interpreter,IO
5068,add copy linked files action to contextmneu in general tab,5066,Util,UI,App,IO
5070,refactor for loop to stream in grouptree,noticed this when doing analysis,IO,Interpreter,UI,Network,Logging,i18n,Util,App
5086,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification,5045,UI,Network,Util,Logging,App
5101,fixes ris  data field,,App,IO,Util
5103,add user interface for the tex parser tool,the goal has been to connect the back-end of the parser with the user interface:,UI,IO,App
5115,add polish language,,App,Util,Logging,Test,UI,Network,IO
5121,add option to allow for integers in field  edition  when running database in bibtex mode,,IO,Util,App,UI
5123,add search for citations in latex files (back-end and gui),here is a **latex parser tool** that reads each file line by line  parses and analyzes them for detecting different citation formats.,Logging,App,IO,UI,Util
5135,rename  latex references search,this pr is the result of a brief discussion with @siedlerchr and @tobiasdiez.,Util,App
5137,add latex citations tab to the entry editor,here is an update for the latex integration project. it adds a new tab to the entry editor (can be disabled in preferences)  and also update  entryeditor.java  to start using preferencesservice.,Util,Logging,UI,IO,App
5138,allow negation ( !   not operator) in \\begin{} conditionals,export filter layout  \begin{}  had [support for and/or operators](  this pr adds per-field negation via  !   see unit tests for example usage.,Logging,Util,IO,Test,App
5141,conversion of preferencesdialog/advancedtab  networktab and groupstab to mvvm,follow-up to #5033,Util,App,UI,Logging,IO,Interpreter
5142,fix substring exception in find unlinked files,refactor to own method and add test,Test,Util,App,IO
5148,move to extended enums for fields and entry types,,Network,App,IO,Util,Test
5150,fix for issue 4629,4629,UI,Util,App
5167,latex integration latest changes,patch for solving some issues commented in: 5155#issuecomment-517240431,IO,UI,App,Logging,Util
5168,fix fail on testperformexportforsingleentry from docbook5exportertest,fix a bug that appeared on  docbook5exportertest  ( testperformexportforsingleentry ) since the last commit in the master branch (https://github.com/jabref/jabref/commit/4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b).,Logging,Test,App,Util,IO,Network
5170,add latest changes to latexintegration branch,- change citationviewmodel to citationsdisplay.,IO,Util,App,Logging,UI,Network,Interpreter
5181,fix wrong package,,UI,App
5188,fix tooltips in citationsdisplay,this patch solves the issue detected by @calixtus in 5002#issuecomment-519985132,IO,App,UI,Util
5190,border for group color indicator and some space for tooltip,refs #5152,UI,Logging,App,Interpreter,Util
5191,5152  tooltip and icon added to group cell,5152,Network,Interpreter,App,Logging,Util,IO,Security,UI
5192,add import feature to latex citations search,this pr extends the latex citations search  allowing the import of the found entries.,IO,Interpreter,Util,App,DevOps,Network,i18n,UI,Test,Logging
5195,add citation commands to texparser,we added a few more citation commands:  autocite    autocite    blockcquote   and  textcquote .,App,Test,IO,Network,Util
5196,implement ottobib fetcher,fetcher does not return bibtex data in plain text  instead it s part of an html text area,Test,Util,Security,Interpreter,Network,IO,App,Logging
5197,with missing year value in year column,5163,Logging,Test,Network,Interpreter,Util,App,IO,UI
5200,add encoding checker for parsing latex files,we added a file encoding checker for parsing latex files.,App,IO,Test,Network,Util
5201,fix exception when adding new entry,5198,UI,App,Interpreter,Util
5203,refactor different entry types,e.g. ieeetranbstctl belongs to ieee types not standard bibtex types,UI,Util,DB,Search,Interpreter,App,Test,Network,Logging,IO,i18n
5204,separate new article and new entry action in the toolbar,the user can now quickly create a new article or add a new entry via the chooser menu,Util,App,UI,IO,Logging,Network,Interpreter
5206,bibtexextractor,followup from 4985,App,Util
5209,fix lookup entry types in enums,make master work again!!!,Util,App
5210,fix double paste on different os,4845,IO,UI,App,Util
5211,fix: database mode is always saved as biblatex,introduced in #5033,IO,Util,UI,App
5213,use utf-8 as default encoding for files,if we create journal abbrev files via the jabref  they are saved in utf-8.,UI,Logging,DevOps,Util
5214,fix diff dialog missing spaces,,Logging,UI,Util,DevOps
5215,fix bug where main file directory is not set correctly,use getname when storing the file directory key,Network,UI,Logging,Util,App,IO
5217,switch from tika-parsers to tika-core,this fixes 3421#issuecomment-524532832,IO,Util,App,Test,Network
5218,preview in entryeditor,supersedes 4976,IO,UI,App,Logging,Util
5224,fix exception when adding field formatter in  cleanup entries  dialog,this 5220.,App,UI
5229,add doi  url  eprint  field to general tab layout,4612,Util,App
5230,treat unknown fields as multi-line fields,5021. unknown fields are now treated as multi-line fields. in the future  we should provide an ui interface to specify or change properties of fields.,Util,App,Interpreter,Logging
5259,avoid erroneous materialdesigniconfactory,fix for  5245](5245),App
5264,get jabref running in eclipse,i finally figured out how to make jabref working with java 11 in eclipse.,Util,Interpreter,IO,UI,Logging,Network,App
5265,conversion of preferences / xmp and nameformatters to mvvm,follow up to #5033,UI,App
5276,add shorten doi field formatter,,Network,Util,Logging,Test,App,IO
5280,moe sync 2020-10-15,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> add tests which validate the run order of listeners on futures when the output is cancelled to test the behavior added in cl/161148771  remove cancellation propagation test  as the intent of not propagating cancellation is to make sure run order is as expected.  if we propagate cancellations  the test fails.  c8f8cbe91a5c67d9b1f3a4ee240a48a288fadc6a,App,Network,UI,Logging,Interpreter
5282,fix/field inheritance,this implements the complex biblatex rule set to solve the crossref inheritance issue #5045,App,Util,Test
5288,add checkstyle for javadoc and fix related issues,,Logic,App,IO,Logging,Test,Util
5289,wrapper classes for ui lists etc that ensure updates on javafx thread,fixes 5108](5108),UI,Util
5315,conversion of preferences/exportsorting  import  maintable and entryeditor to mvvm,follow-up to #5033,App,UI,Interpreter,Util
5325,use binding to update global state manager,,IO,Interpreter,i18n,Logging,App,UI,Util
5326,fix problem with search and switching between libraries,4846 by using bindings instead of listeners.,App,UI,i18n,IO,Util,Interpreter,Logging,Network
5328,improve group coloring and item count,5327. the problem was that  gettreetablerow.getitem()  in  viewmodeltreetablecellfactory  still returned the old item (and not the new one passed as method argument to  updateitem ).,UI,i18n,Util,Logging,Interpreter,IO,App
5330,remove javafx-font-tweak,as asked by @tobiasdiez in the gitter-chat  a seperate pr to test if the font tweak can be safely removed  as probably the dependencies were removed in javafx anyways. see https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8187147,UI,Logic,DB,Network,APM,i18n,Logging,Test,Interpreter,App,IO,Util
5338,moe sync 2020-11-30,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> public: add missing override annotations.  da5e9d98f43b039c64a62182614f74ca188cd2ce,App,IO,UI,Util,Logging
5340,fix various copy to clipboard issues,pt 1: fixing #5263 by only using the text content to be added in the right-click-copy functionality in the preview (see 5340/files#diff-b84aeae22f7f719bc60f1ae34ecb39f6),Util,App,Logging,IO,UI
5347,moe sync 2020-12-04,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> system.getproperties().getproperty => system.getproperty.  my motivation was that it s slightly easier for a nullness checker to determine that system.getproperty(standardproperty) is (generally speaking) non-null. but it turns out that java.runtime.name is not a standard property!  still  this is a slight simplification  so i guess i m submitting.  96203a3d7a76dda7190e30d58431515fd9ad4ea3  -------  <p> fix a bug in hashbimap which was causing crashes in sheets on ios.  the crash was caused by the fact  that linked-list of bientry instances inside a bucket were using @weak references  and only the first entry in the list was strongly referenced. the remaining ones were deallocated.  with this change  sheets ios is not crashing anymore.  847c0235ef0a768a4d19274a1fe8264bcbfc190a,Interpreter,Logic,IO,Network,Util,DB,Logging,UI,App
5351,fix exception when closing jabref,5348 by using javafx windows instead of awt windows.,Logging,App,IO,Util,UI
5352,bring back the context menu,as explained in  it is no longer possible to customize the context menu items  because the classes related to the text field behavior are not accessible. thus  instead i simply copied the relevant code from openjdk. pretty ugly workaround 5254 and refs https://github.com/javafxports/openjdk-jfx/issues/583.,IO,Logging,App,Util,UI
5354,moe sync 2020-12-11,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> correct a typo and some odd phrasing in the first paragraph of the javadoc for smoothratelimiter.  8d571ca36055d207635d84db4159607c511de649  -------  <p> log a warning if running under a java 7 vm.  more precisely  log a warning if lambda expressions or type annotations in our classes would produce an exception. if someone wants to use retrolambda or a similar tool to rewrite our classes  that s fine with us if it works. and our support for android is unchanged: the android toolchain rewrites lambdas and removes type annotations.  this is a step toward removing java 7 support entirely:   relnotes=introduced a warning log message when running under java 7. this warning is not _guaranteed_ to be logged when running under java 7  so please don t rely on it as your only warning about future problems. if the warning _itself_ causes you trouble  you can eliminate it by silencing the logger for  com.google.common.base.moreobjects$tostringhelper  (which is used _only_ for this warning). this warning prepares for [removing support for java 7 in 2021]( please report any problems.  0357006a920c9cf84d47901471a525da85deba34,Util,UI
5355,moe sync 2020-12-14,this code has been reviewed and submitted internally. feel free to discuss on the pr  and we can submit follow-up changes as necessary.  commits: ===== <p> prepare for release 30.1.  81e941f66865d6bece7c3f09cde513a6cc50b858,UI,Util,Interpreter,IO,Logging,Network,App
5356,show more than one group color bar,shows multiple colored bars if the entry belongs to more than one group (with color). implements #4574.,UI,Util,Logging,Interpreter,App
5360,conversion of prefs/bibtexkeygen and appearance to mvvm,follow up to #5033,IO,App,UI,Util,Logging
5361,run version worker delayed,,Logging,Util,Logic,App,IO,UI,DB
5363,show window before loading files,we now show the window first  and then load the last edited files. this does not really lead to an improvement of performance  but the user gets a quicker visual feedback.,Util,Logging,UI,Logic,DB,App,IO
5382,fix for #5369 - fallback to 0 in case stored preview cycle pos does no longer exist,fix for #5369,IO,Logging,Network,Util,App,UI
5385,reenable prevcycle,,Interpreter,UI,App,Util
5389,quick fix csl errors,waiting for the installer,Interpreter,IO,UI,App,Util,Logging,Network
5392,fix 5359: writing of editor field is duplicated,5359,IO,App,UI,Util,Interpreter,Logging
5395,fix exception when merging entries,the problem was that  sourcechanged  was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime. solution: run  sourcechanged  on the javafx thread but synchronously.,Util,Logging,UI
5410,refactor entryevents - removal part,,Interpreter,Network,UI,Logging,IO,Util,Security,App
5421,add change listener to main table to scroll to imported entry,add change listener to main table to scroll to imported entry #5383,Logging,UI,Interpreter,Util,App
5423,performance improvements for gui start up,,IO,Logging,UI,Util,App,DB,Logic
5430,upgrade to latest log4j snapshot,,APM,App,Logging
5432,fix cursor jump,5084. the entry editor was very aggressive and stole the focus from the search bar or from the main table. this lead to problems like #5084 where users overwrite the contents of the entry while doing a search. moreover  it made it impossible to navigate between entries using the arrow keys in the main table. both of these issues are fixed now.,App,UI,Util,Interpreter
5451,add option to display entry preview as tab in entry editor,adds the entry preview as a tab. 5244. also 5446. plus a bit of refactoring,Test,UI,Interpreter,Util,Logging,App,IO,Security,Network
5454,fix highlight issues for lists,5277 and 5035. the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones).,Util,App,UI,Interpreter
5470,remove unnecessary sort,----,Util,App
5471,mark oostyle as invalid if no defaultstyle,in addtion  dsplay correct layout for article and book,IO,Logging,App,Util
5472,fix highlight problem in entry preview,5069 by using markjs.,App,Logging,Util,Network,UI
5477,refactor to sorted set,**follow up pr for #5470**,App,Test,Util,Network,IO
5481,fix for issue 5463,fixed issue #5463 (5463),Util,UI,Logging,Network,App
5482,add x11 primary selection clipboard support,_related to issue #2389 (**jabref and the x window clipboard/selections**)._,App,Util,Logic,Logging,APM,IO,i18n,Network,UI
5483,fix not on fx thread error for custom entry types,5469,App,Util,DB,Logic,IO,Logging,UI
5487,amend the reference to jabrefreferences initialization,the former filename does not exist  the updated file being referred does contain the initialization of jabrefpreferences.,App,Util,APM,Network,UI
5495,fix deprecated crossref rest api parameter,5485,Search,App,Util,Network
5497,try to fix dark theme path,fix dark theme.,Interpreter,App,Logging,UI,IO,Network,Util,Test
5501,annotate most of  reflect  for nullness.,annotate most of  reflect  for nullness.  and add some documentation relevant to   relnotes=n/a,Search,App,Util,Network,IO
5513,making importing a single file easier (issue #5508),5508,App,UI,Util,Interpreter
5514,fix metadata serialization order,the save actions and/or customized entry types were not serialized alphabetically. this lead to constant changes when used with version control systems.,App,Test,IO,Util
5518,add paging support,before i implement this  i want to discuss the interfaces i created.,Test,Util,App
5519,fix xmp null error,5449. was caused by wrapping a set of fields in a treeset without specifying the comparator.,Test,UI,IO,Network,Interpreter,App,Util,Logging
5521,fix text colour in merge dialogue,fixes: #5516,IO,Util,App,Test
5525,remove empty customization warning,5332. problem was that the dialog was shown whenever the library contained customized entry types  even if the customizations were equal to the customization stored in the global preferences. a bit of refactoring/renaming along the way.,App,Network,Test,Interpreter,IO,Logging,UI,Util
5531,add tests for month issue and strings (and some minor code impr…,i wanted to dive into  and finish it. i saw that we have no tests for  month = apr  (which is rendered internally as  #apr# ). we also did not cover the examples of  in test.,IO,App,Util,Test
5533,reject  null  in  charstreams.aswriter(appendable).write(string[  ]) .,reject  null  in  charstreams.aswriter(appendable).write(string[  ]) .  this brings its behavior in line with other  writer  implementations. unfortunately  the docs don t describe this behavior:    note also that this behavior differs from the behavior of  writer.append(null)   which is to write the four characters  null.  that behavior is itself poorly documented  since the docs for  append(charsequence)  claim that it is equivalent to  out.write(csq.tostring())   which would throw npe though at least *that* is contradicted in the  @param  tag. (the difference between  write  and  append  presumably arises from inheriting  append  from the newer  appendable  api.)  relnotes= io : changed  charstreams.aswriter(appendable).write(string[  ...])  to reject a null  string .,Util,UI,App,Logging,IO
5539,comment out @elementtypesarenonnullbydefault in classes that are missing  @checkreturnvalue  for at least one location.,comment out @elementtypesarenonnullbydefault in classes that are missing  @checkreturnvalue  for at least one location.  also  standardize todos.  relnotes=n/a,Network,App,IO,Util,DB,Logging,Test,UI
5541,update to gradle 6.0 (and therefore disable build scan),enables  gradlew run  at jdk13.,Logging,App,Util,IO,UI
5544,reorderable columns in maintable for groups  uri  file and eprint,jabref did not distinguish yet between columns in maintable and fields. thats why i had to create an extrafilepseudofield-class in one of my recent prs. but this was an ugly hack.,Logging,UI,App,Util,Test
5554,make entry editor dnd behave as specified in settings,,UI,App,Logging,Util,IO,Interpreter
5556,generalize  function  and  predicate  factories to let callers specify the desired input type.,generalize  function  and  predicate  factories to let callers specify the desired input type.  relnotes= base : changed  functions.forsupplier  and  predicates.instanceof  to accept an additional type argument to specify the input type for the returned  function / predicate . the flexibility we re adding should typically not be necessary if users follow the [pecs]( principle  but it can be useful in some cases  particularly around nullness analysis. note that this change may require updates to callers  source code (to specify an additional type argument). still  it maintains _binary_ compatibility.,Util,App,UI,IO
5558,5551 - don t remove unwanted characters before first author is s…,hey,App,Logging,Util
5560,fix 5555 status popups,as discussed in #5555 this pr removes some obsolete notifications and additionally removes notifications during autosave.,App
5571,add chromium json for browser integration,this pr adds the chromium json used by the native-messaging-host system.,Logging,DB,Util,i18n,Parser,UI,Security,Search,IO,Network,App,Test,Interpreter
5578,unify month field formatting in test bib files,this finishes 5283.,IO,Test,Util,App
5581,remove freeciteimporter,freecite is no more. see https://library.brown.edu/libweb/freecite_notice.php,Network,Util,Test,App,IO,Interpreter
5582,fix typo noted by @ben-manes in https://github.com/google/guava/commit/ce4bad32a3f15ffb21cc2a13e6db4ad03f915033#r51511526.,fix typo noted by @ben-manes in   relnotes=n/a,Util,Test,Interpreter,Network,App,IO
5612,fix expected result,somehow  the result by the fetchers changed. this just adapts,Util,Test,App
5613,remove manas tungare s isbn-to-bibtex fetcher in the queue,this removes the isbn to bibtex converter from   because:,Test,App,IO,Util,Logging
5614,add option to parse new references from plain text using grobid service [solving #4826],this pr should solve 4826](4826).,Util,Network,IO,App,Test
5627,remove output of wrong abstract,not available <p />  should not be put anymore.,Search,Network,Test,Util,App,IO
5629,5615 side pane not remembering position,hi,Logging,App,IO,UI,Util
5635,when using the builder of bibentry  the entry should not be mod…,minor code quality things.,Security,Interpreter,UI,Util,Network,Test,App,Logging,IO
5640,add tests for  changed  flag,**update** do not change any functionality  but add tests.,Util,UI,Logging,Test,Network,IO,App
5641,european portuguese,portuguese language from europe was added  as it has some differences in relation to portuguese from brazil.,Util
5646,dark theme visibility fixes,there had been some visibility issues with the interface when in dark theme.,IO,Network,Util,Logging,App,UI
5655,fix library access error at basepaneltest,refs 5602,Logging,UI,Interpreter,Network,App
5659,batch remove entries,i changed the sql in  dbmsprocessor  so that multiple entries are deleted with one query instead of using a query for each entry. this was the original rationale for the refactoring i did in october.,Test,Util,App,DB
5665,improve change scanner,if a file is changed externally  jabref is doing a 3-way merge between the last saved value vs current value in jabref vs new value in file.,Util,IO,Logging,App
5666,auto file finder follows symbolic links,<!--,App,Util,IO
5667,rename  lookup fulltext  to  download fulltext,closes #3874 and surpasses #5216.,Network,UI,App,Util,IO,Logging
5670,improve column preference migration,<!--,App,Network,Logging,IO,UI,Test,Util
5671,fix copy drag and drop action,5653.,IO,Util,App
5674,fix fetcher tests,fix some wrong data,Util,Test,App
5680,add throttle to autosaveuimanager,as discussed in #5679 there are a lot of save actions performed when autosave is turned on. this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed.,Logging,Util,App
5688,show merge entries for modified entries,when an entry s content changes  the merge dialog is now displayed.,IO,UI,App,Util
5691,batch insert entries,this is a work in progress  and i finally got it to compile. it s not tested  and i still have to turn  entryaddedevent  into  entriesaddedevent  and refactor the code to let it accept that. i also may have to change the sql in  dbmsprocessor . see #5659.,Logging,IO,UI,Interpreter,App,Util
5694,bump checkstyle from 8.26 to 8.27,bumps [checkstyle]( from 8.26 to 8.27. <details> <summary>release notes</summary>  *sourced from [checkstyle s releases](  > ## checkstyle-8.27 >  </details> <details> <summary>commits</summary>  - [ 98aa588 ]( [maven-release-plugin] prepare release checkstyle-8.27 - [ 916799d ]( doc: add 8.27 releasenotes - [ 44961c0 ]( issue 7083]( fix wrapping handing  xml indentation - [ 1aa1e54 ]( issue 7083]( add media-query for small devices  use wrapper for tables  svgs  - [ 7054edc ]( revert  issue [#7288]( fix xwiki build on wercker  - [ c442c78 ]( issue [#7288]( fix xwiki build on wercker - [ cdbc25d ]( config: bump picocli from 4.0.4 to 4.1.1 - [ abc6ae5 ]( config: bump maven-enforcer-plugin from 3.0.0-m2 to 3.0.0-m3 - [ 5b718f2 ]( config: disable mac jdk11+ until [#7276]( - [ 6fbac46 ]( config: bump sevntu to 1.36.0 - additional commits viewable in [compare view]( </details> <br />  [![dependabot compatibility score](  dependabot will resolve any conflicts with this pr as long as you don t alter it yourself. you can also trigger a rebase manually by commenting  @dependabot rebase .  [//]: # (dependabot-automerge-start) if all status checks pass dependabot will automatically merge this pull request.  [//]: # (dependabot-automerge-end)  ---  <details> <summary>dependabot commands and options</summary> <br />  you can trigger dependabot actions by commenting on this pr: -  @dependabot rebase  will rebase this pr -  @dependabot recreate  will recreate this pr  overwriting any edits that have been made to it -  @dependabot merge  will merge this pr after your ci passes on it -  @dependabot squash and merge  will squash and merge this pr after your ci passes on it -  @dependabot cancel merge  will cancel a previously requested merge and block automerging -  @dependabot reopen  will reopen this pr if it is closed -  @dependabot close  will close this pr and stop dependabot recreating it. you can achieve the same result by closing it manually -  @dependabot ignore this major version  will close this pr and stop dependabot creating any more for this major version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this minor version  will close this pr and stop dependabot creating any more for this minor version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this dependency  will close this pr and stop dependabot creating any more for this dependency (unless you reopen the pr or upgrade to it yourself) -  @dependabot badge me  will comment on this pr with code to add a  dependabot enabled  badge to your readme  additionally  you can set the following in the  .dependabot/config.yml  file in this repo: - update frequency - automerge options (never/patch/minor  and dev/runtime dependencies) - out-of-range updates (receive only lockfile updates  if desired) - security updates (receive only security updates  if desired)    </details>,Logging,Util,App,IO
5702,fix package of previewlayout,this pr fixes the package of  previewlayout  since that class is used for both citationstyle-based previewes as well as for self-defined layouts (see  for details).,Logging,IO,Util,App
5705,last minute changes 5.0-beta,let s see,App,IO,Logging,Util
5715,fix springer fetcher tests,<!--,Network,Logging,Util,App,Search,IO,Test
5716,do not couple search position to sidebar width,<!--,App,Logging,UI,Util,IO
5717,fix import into currently open library,remove unnecessary parallel execution of  addtab   which 5537.,IO,UI,App,Logging,DB,Util,Logic
5724,fix multiple entries allowed in crossref (issue #5284),fixed issue #5284 where multiple entries were allowed in crossref field  whereas only one should be allowed. 5284,App,UI,Util
5730,persistent column sortorder,this pr should make the column sort order persistent. @siedlerchr [asked me]( to give it a shot  and to see if it s somehow quicker. i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern. i don t think it has much impact on the performance  compared to the current master  but i m not equipped with a profiler to test it. so it s just my subjective opinion. 😁 maybe someone else likes to test it?,UI,App,Logging,Util
5731,2868 - keep source groups selected after drag and drop,this pr fixes a bug where the selection of the source groups was lost after drag and drop (#2868). i noticed a bug in the mapping from  groupnodeviewmodel  to the corresponding  treeitem .,UI,IO,i18n,Logging,App,Util,Interpreter
5738,bugfix for multiscreen,made following changes to solve multiscreen issue 5037:,UI,Interpreter,App,Logging,i18n,Util,IO
5770,improve things arround change detection,<!--,IO,App,Logging,Util,Network,Test
5772,fix code style,code follow-up to  just small changes. i hope  there won t be other improvements necessary.,App,DB,IO,UI,Logging,Util,Logic
5773,fix springer fetcher tests,follow-up to 5715/files.,Util,Test,Network,IO,App,Logging
5774,fix medline tests,- wait between calls to avoid 403,Util,App,Test
5781,fix gui tests,5602  refs #2768.,App,UI,Test,Util,IO
5786,fix  &  on previews,<!--,App,Test
5787,update arrows,just for @siedlerchr,App,Util,UI
5789,update open openofficepanel to show buttons in three rows of three.,changed open office panel to show buttons in rows of three instead of going straight down to save space as the button expanded out to take up unnecessary horizontal space.,Test,Util,App,Security,Search,Network,DB,UI,Logic,Interpreter,Logging,APM,i18n,IO
5799,reimplement custom entry types dialog,4719,Test,Security,IO,Interpreter,Network,Util,UI,i18n,Logic,Search,App,DB,Logging
5803,add select all buttons to change dialog,when merging entries,UI,App,Util
5805,disable acm fetcher,see  for details,IO,Util,Test,App
5812,batch dbmsprocessor fields insertion,<!--,Network,Security,i18n,UI,DB,Search,App,Interpreter,Util,IO,Logic,Test,Logging
5814,initial work on dbmsprocessor batch entry insertion into entry table,<!--,App,DB
5823,fix for multiple error messages in messed up source editor,5820,Util,App,Test,UI,IO
5824,improve change detection,<!--,Util,UI,App,Logging,IO
5826,conversion of group dialog to mvvm-pattern,a first approach to convert the add/edit group dialog to the mvvm-pattern and a step forwards to implement the changes @martinkarim supposed in #4684 .,Test,Util,App
5838,improve serialization to 4877,<!--,Util,Test,IO,App
5839,fix bibtex vm for ieee (and some micro other fixes),taking the  best of   will merge after successful tests as i need it for input to students.,IO,Test,Logging,App,Logic,Util
5840,fix one google scholar test,the pdf has a title - try another publication without an available pdf,IO,Network,Util,App,Test
5841,fix missing file extension for downloaded files.,5816 by falling back to pdf as default file type.,Logging,Util,App,IO,Interpreter,Network,UI
5843,improve performance by throttling database change events,<!--,App,Util,Logging,UI,IO
5855,fix opening pdf with okular in linux (#5253),<!--,Logging,UI,IO,Util,App
5865,duplicate query parameter removed,calling the springer web search always throws an exception:,IO,Search,App,Logging,Util,Network
5868,5862.,it was indeed the throttler (at least it is working now for me),App,Logging,Util,UI
5879,fixes making paths of linked files relative (web urls will not be touched anymore),5861,App,UI,Util,Network,IO
5903,fix properly resolves orfields of required fields,addresses: #5859 and partially #5853,App,Interpreter,UI,Util
5909,mysql: allow public key retrieval,follow up to 5676,Util,App,IO,Security,UI,Logging,DB
5917,added update method to typepropertylisteners,5905,IO,Interpreter,UI,Logging,Util,App
5923,disable search when no library is opened,and fix exception when getsearchresultsize returned null,i18n,UI,App,Logging,IO,Util,Logic
5925,fix maintable not updated when changing entry type,5906,Logging,UI,App,Util,Network
5938,fix not escaping special characters in search pattern,5892,App,Test,Util
5940,5939 by creating a mutable list in opendatabaseaction,this pr fixes the problem when opening a library from the recent libraries menu. 5939,App,IO,Logging,Util,DB
5945,try to fix linux pdf opening again,5942  and fixes probably #5882,Util,App,Logging,UI,IO
5948,fixfetcher,added another possible option for checking fulltexts,Test,Network,App,Util,IO
5955,added menubuttons to integritycheckdialog,this pr adds menubuttons to the integritycheckdialog  because there was a complaint  that the filters were not very easy to find. 5275,DB,IO,Interpreter,Network,Logging,Util,UI,App,Security
5958,refactor baseaction in rightclickmenu,i started by bugfixing some missing executablebindings. it totally escalated. sorry.,Test,Util,App
5969,refactored subtile changes to optics of library properties,5604,IO,UI,Test,Network,Interpreter,Search,App,Util,DB,Security,Logging
5974,group remote database actions in menu,(https://user-images.ent.com/2141507/75386107-61ce0900-58e1-11ea-8a6c-85275549b4cd.png),Util,IO,Network,Test,Logging,Logic,i18n,UI,App,Interpreter,Search
5975,dividers,(https://user-images.ent.com/2141507/74989401-85f09c80-5440-11ea-9216-789b82884492.png),Util,UI,App,IO,Logging
5976,help menu,previous:,App,IO,Util,UI,Logging
5977,move journal abbreviations to library,previously:,UI,Util,IO,App,Logging
5979,rework tools menu,formerly:,UI,IO,App,Util,Logging
5980,use application/x-bibtex for grobid instance,new grobid server is up and running. needs special accept header.,IO,Search,Logging,App,Util,Network
5983,fixed loosing group if the most bottom one in list is dragged on itself,5968,Logging,Util,Interpreter,IO,App,UI,Network
5987,move generate bibtex keys to edit menu,previously:,IO,UI,Util,App,Logging
5989,new menu  lookup,lookup  is a core feature of jabref and should be made more prominent.,Logging,IO,UI,App,Util
5992,cleanup build file,several cleanups  see separate commit messages.,Util,App,Test,UI,Logging,Search,Network,Interpreter,i18n,IO
5993,shutdown should be fixed since v2.1.2,@tobiasdiez can you confirm that this is fixed and the code no longer needed?,Util,App,UI,APM,Network
5994,fix npe in openaccessdoi,i had an npe while checking the fetcher. this code fixes it.,Network,IO,Logging,Util,Test,App
6018,add shortscience integration,<!--,Interpreter,UI,Util,Network,IO,App,Test,Logging
6019,code: tex --> latex (in the context of parselatex),follow up to  (as discussed at 5978#discussion_r382426774).,Test,Logging,UI,Network,IO,Util,Interpreter,App
6031,translation for specialfield names in preferences,names of special fields were not translated in preferences.,UI,App
6050,fix fetcher tests using correct month,<!--,Util,App,Test
6054,fix warning display issue for entering a title made of two words,<!--,Test,App,Util
6056,remove baseaction from jabrefframe,this is a follow up to #5958 and should only be merged after that  since it includes all the commits of the other pr.,Interpreter,IO,Network,APM,Util,Search,Logging,Test,App,UI
6072,fix exception when adding save action without selected formatter,<!--,UI,App
6103,remove gui globals,<!--,IO,Network,UI,Interpreter,Logging,Util,App
6110,groups: searching for keywords field mandatory value not checked,closes #6108,Logging,i18n,Interpreter,APM,App,Util,IO,Logic,Search,Network,Test,DB,UI
6111,really create new lookup menu,see #5989,Logging,App,UI,Util,IO
6112,ux: move group filter bar to top,rationale:,Util,i18n,App,UI,Logging,IO,Interpreter
6113,improve arxiv fetcher,no longer include the version string in the  eprint  field  as wished in  also improved the arxiv identifier parser a bit.,Interpreter,Util,App,IO,DB,Logging,UI,i18n
6114,fix: exception when opening already opened files,this (really) fixes 5939,Util,IO,App,DB,Logging
6116,fix: only if  .sav  file has changes a recovery dialog is shown,when jabref is forced-closed and restarted  it should not nag about a  .sav  file.,App,DB,IO,Search,Logging,Network,UI,Test,Util,Interpreter
6117,refactor saveaction,while working on   we found  we need to refactor the  save  things to understand what s going on. ^^,IO,UI,App,Util,Logging
6118,interrupt all running tasks during shutdown,(and don t allow new tasks to be executed),Logging,IO,Network,App,UI,Util,Interpreter
6121,icons from material design icons not recognized,6078,UI,App,Util
6123,fulltext file deleted when being renamed to the name differing just b…,…y letter case,Network,App,Logging,UI,Interpreter,Util,IO
6126,minor fetcher improvements,detect google captcha div.,Search,Util,Network,Logging,App,IO
6128,fix fetcher test: citeseertest,fixes:,App,Test,Util
6129,fix setting of title (and simplify basepanel to librarytab),fixes 394,IO,Search,UI,Util,Interpreter,Network,App,Logging,Security,Test
6130,small improvements in preferences dialog,changes:,App
6135,remove obsolete usage of file in databasecontext,folllow-up to #6117,UI,App,Util,Logging,IO
6137,move  manage field names & content  to  edit,background: <blockquote class= twitter-tweet ><p lang= en  dir= ltr >oh bummer  did the new jabref remove the &quot clear field&quot  feature?</p>&mdash  liantze lim (@liantze) <a href=  >march 16  2020</a></blockquote>,UI,Logging,App,Util,IO
6139,move springer key to environment,based on the discussion of today s devcall.,Interpreter,IO,Search,Logic,Logging,Network,DB,App,APM,Util,UI,Test
6143,add aps fetcher (refactored),818  part of #2581.,Network,IO,Logging,Util,App,Test
6145,update to jdk 14,<!--,DB,IO,UI,APM,Interpreter,App,Logging,Network,Test,Search,Logic,Util
6149,edition should not start capitalize letter,- add editionchecker feature to permit edition to begin with a number,Util,App
6151,actionhelper to test for present file,this pr fixes koppor#430,NLP,Search,Network,Logic,App,Security,DB,Test,Interpreter,UI,DevOps,Logging,IO,i18n,Util
6152,allow reordering of custom entry types fields,additionally  restore the old multiline property and make it configurable.,Logging,IO,Network,UI,App,Util
6174,fix overwritting downloaded files with same name,added auto-numbering for downloaded file names  which conflict with file names in the current directory. #6068,App,Test,IO,Util
6179,truncates the link and/or the link description in the column  linked files  in main table  if too long,references: #6178,Util,IO,Logging,App,UI
6184,include  append  functionality in the  import entries dialog,needs testing. @stefan-kolb maybe? 😇,Logging,UI,App,Util,Interpreter,IO
6200,remove redundant regexp character replace,found by intellij: https://www.jetbrains.com/help/phpstorm/regexp-redundant-character-escape.html,Interpreter,Util,App
6201,update gradle wrapper from 6.3-rc-3 to 6.3,gradle 6.3 was released: https://docs.gradle.org/6.3/release-notes.html,IO,Test,Util
6203,add tooltips for all entry types for #6074,the pull request refers to issue #6074 by @systemoperator .,Util,App,UI,Logging,IO,Interpreter,Network
6204,fix some intellij findings,- fix bug in tagbar (added itself instead of newtags),Util,UI,DB,Logic,Logging,App,IO
6219,fix edition test,<!--,App,Util
6226,remove the option to configure to create .bib.bak,fixes 6092,Logging,Network,IO,UI,App,Util
6228,chipview for crossref and groups,tooltip on crossref field.,Util,Interpreter,App,Logging
6232,allow basic markup syntax custom previews,add markdownformatter using  to format markdown.,Util,Interpreter,UI,Logging,IO,App,Network,Logic,Test,i18n
6233,add disable/enable calculation of items in group,6042,UI,Interpreter,Logging,App,i18n,IO,Util
6236,add paging support,by @johahu. let s discuss how to go on here.,Util,App,Logging,Search
6239,entry editor: add more tooltips and wrap tooltips if necessary,-,i18n,IO,Logging,Test,Network,Util,UI,App,Interpreter,Parser
6240,add simple unit tests for #6207,i have split some unit tests into different methods with only one assert statement.,App,IO,Util,Test
6242,fix storing of custom jstyles,6170,Util,UI,IO,Logging,App
6245,refactor entryeditorpreferences,this pr is a follow up to #6171,Network,i18n,UI,Util,Logic,Security,Test,IO,Interpreter,Logging,App
6247,reduce the number depencencies introduced by markdown renderer,fixes 6246,Parser,Util,App
6248,number of items found in importentriesdialog,this pr finishes the abandoned pr from cloudfenrir (closes #5740).,Util,UI,Interpreter,App
6258,fix inspire fetcher,use application/x-bibtex header,Search,Interpreter,Util,Logging,IO,i18n,Logic,Test,Security,UI,NLP,DB,App,DevOps,Network
6264,showing correct icon on main table linked files column,<!--,DB,IO,i18n,Util,Security,Logging,Test,Logic,Network,UI,Interpreter,Parser,App,Search
6268,improve calculation of matched entries upon change,instead of recalculating the number of matched entries for every group (which means  #groups * #entries  operations) now a change triggers a more intelligent re-calculation which needs at maximum  #groups  operations. this gives a huge boost and makes editing entries smooth even for large databases with many groups.,Logging,Util,Interpreter,UI,App
6269,fix import into current library issuing wrong message,this change 6266 in which an erroneous message  import canceled  is displayed when importing into the current library. this fix was accomplished by modifying the parameter of the extends clause of the importentriesdialog class to have a return type of boolean rather than void and making setresultconverter return false rather than null.,IO,UI,Util,Interpreter,Network,Test,i18n,Logging,App,Logic,Parser
6270,improve performance,second round of performance improvements.,IO,Logging,Util,Network,UI,App,Test
6272,ris import takes the wrong date and duplicates abstract,6065,Test,Network,IO,App
6283,refine checkstyle rules,i was a bit annoyed that i had to comment on code style at code reviews. bots should take care of this.,App,Test,DevOps,IO,Util,Network,Logic
6287,ui consistency - bibtexstringeditordialog rework,follow up to #5737 . took me only about four and a half months to figure that out. thanks @tobiasdiez 😜 : node.lookup did not work  as the textfield node was not present at the time a edit cell was created.,UI,Interpreter,Util,App
6289,fix xmpexportertest,hotfix for xmpexportertest not working.,Test,IO,Util,App
6290,fix selecting custom export for copy to clipboard with uppercase file ext,6285,App,Util
6296,backward compatibility for 4.3.1,this pr should allow people in the future to return to jabref 4.3.1 after using 5.0  if they want to keep using an old version without support or development.,Logging,UI,App,Util
6298,reduce memory footprint,<!--,App,Search,Security,UI,Test,Network,DB,Util,DevOps,NLP,IO,Logic,i18n,Interpreter,Logging
6310,remove cache of auto completion results,<!--,Network,Interpreter,Logging,Test,App,Util,IO,Logic,UI,i18n
6315,make wrap fields also visible in entry editor,4373,IO,App,Network,i18n,Security,Logic,Util,Logging,Interpreter,Test,DevOps,NLP,APM,UI,DB
6316,improve performance massively by fixing a stupid binding mistake,<!--,App,Interpreter,Util,Logging,UI
6332,improve performance for loading files,- performance improvements around groups,Test,Logging,App,Search,Interpreter,IO,Util,UI,Network
6333,check duplicate doi,result of #latemob session with @skufer322.,UI,Test,Util,App,IO
6345,fix export to clipboard dialog icon,6286,APM,Interpreter,IO,Util,i18n,DB,Test,App,Logic,UI,Logging,Network
6365,bump java-diff-utils from 4.5 to 4.7,bumps [java-diff-utils]( from 4.5 to 4.7. <details> <summary>changelog</summary> <p><em>sourced from <a href=  >java-diff-utils s changelog</a>.</em></p> <blockquote> <h2>[4.7]</h2> <h3>changed</h3> <ul> <li>minor bug fixes</li> <li>optional include equal parts of original and revised data</li> <li><strong>api</strong> change: removed diffexception completely</li> <li>added possibility to <strong>process diffs</strong> to for instance show whitespace characters</li> </ul> <h2>[4.4] – 2019-11-06</h2> <h3>changed</h3> <ul> <li>java-diff-utils is now a multi module project. the main project java-diff-utils now comes without any dependencies.</li> <li>started reimplementation of unified diff tools</li> <li>exchange <code>0 += 1</code> for <code>0 = 1</code> in unifieddiffutils</li> <li>preview of new unified diff reader / writer. this is not yet feature complete but passes the tests of the old version. <ul> <li>feel free to issue some change requests for the api.</li> </ul> </li> <li>introduces linenormalizer extension point to e.g. change html code encoding. (issue <a href=  >#41</a>)</li> </ul> <h2>[4.0] – 2019-01-09</h2> <h3>changed</h3> <ul> <li>moved to organisation <strong>java-diff-utils</strong></li> <li>changed groupid to <strong>io.github.java-diff-utils</strong> and artifact id to <strong>java-diff-utils</strong></li> </ul> <h2>[3.0] – 2018-10-18</h2> <h3>added</h3> <ul> <li>introduced a process listener to diff algorithms. for long running diffs one could implement some progress information.</li> <li>automatic module name for jdk 9 and higher usage</li> </ul> <h3>changed</h3> <ul> <li>changed generation of inline diffes  if there are different linefeeds within one diff  then these are excluded from the diff block.</li> </ul> <h3>removed</h3> <ul> <li>due to licensing issues delta.java and diffalgorithm.java were removed.</li> </ul> <h2>[2.2] – 2017-11-09</h2> <h3>added</h3> <ul> <li>released at maven central</li> <li>included checkstyle source code conventions</li> <li>allow configurable splitting of lines to define the blocks to compare (words  characters  phrases).</li> </ul> </tr></table>  (truncated) </blockquote> </details> <details> <summary>commits</summary> <ul> <li><a href=  ><code>ba4bd7f</code></a> [maven-release-plugin] prepare release java-diff-utils-parent-4.7</li> <li><a href=  ><code>ea8d442</code></a> fixes <a href=  >#75</a></li> <li><a href=  ><code>fbb51d2</code></a></li> <li><a href=  ><code>5781cc5</code></a></li> <li><a href=  ><code>37310e1</code></a> working on issue <a href=  >#75</a></li> <li><a href=  ><code>ccfc402</code></a> update changelog.md</li> <li><a href=  ><code>1e7d96e</code></a> merge origin/master</li> <li><a href=  ><code>f0fc883</code></a> first try of implementing issue <a href=  >#42</a></li> <li><a href=  ><code>3bc40a1</code></a> merge pull request <a href=  >#76</a> from sullis/junit-5.6.2</li> <li><a href=  ><code>29de84c</code></a> junit 5.6.2</li> <li>additional commits viewable in <a href=  >compare view</a></li> </ul> </details> <br />   [![dependabot compatibility score](  dependabot will resolve any conflicts with this pr as long as you don t alter it yourself. you can also trigger a rebase manually by commenting  @dependabot rebase .  [//]: # (dependabot-automerge-start) if all status checks pass dependabot will automatically merge this pull request.  [//]: # (dependabot-automerge-end)  ---  <details> <summary>dependabot commands and options</summary> <br />  you can trigger dependabot actions by commenting on this pr: -  @dependabot rebase  will rebase this pr -  @dependabot recreate  will recreate this pr  overwriting any edits that have been made to it -  @dependabot merge  will merge this pr after your ci passes on it -  @dependabot squash and merge  will squash and merge this pr after your ci passes on it -  @dependabot cancel merge  will cancel a previously requested merge and block automerging -  @dependabot reopen  will reopen this pr if it is closed -  @dependabot close  will close this pr and stop dependabot recreating it. you can achieve the same result by closing it manually -  @dependabot ignore this major version  will close this pr and stop dependabot creating any more for this major version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this minor version  will close this pr and stop dependabot creating any more for this minor version (unless you reopen the pr or upgrade to it yourself) -  @dependabot ignore this dependency  will close this pr and stop dependabot creating any more for this dependency (unless you reopen the pr or upgrade to it yourself) -  @dependabot badge me  will comment on this pr with code to add a  dependabot enabled  badge to your readme  additionally  you can set the following in the  .dependabot/config.yml  file in this repo: - update frequency - automerge options (never/patch/minor  and dev/runtime dependencies) - out-of-range updates (receive only lockfile updates  if desired) - security updates (receive only security updates  if desired)    </details>,Logging,UI,DevOps,Util
6368,fix various dark theme issues,related issues: #5522   #5699,Util,Logging,App,UI,IO
6371,disable the generate button if the id field is empty,6370,UI,Util,Logging,App
6377,6357: file directory,bug was introduced in  sorry @calixtus for suspecting you 👼.,Test,App,Network,Util,IO
6379,fix library sort order get lost,this pr 6091,App,Util
6381,added a download checkbox to the import dialog,when importing entries  users now have a checkbox available to download,Test,DB,i18n,App,IO,Logging,Logic,UI,Interpreter,Util,Network,APM
6386,fix jstyle was invalid with default section at the start,6303,Test,App,Network,Util,IO
6389,fix underscore character being omitted from file name in recent libraries list,fixes: #6383,App,IO,UI
6402,fix action helper when no library is open,this 6430 an exception when opening the view menu with an empty library,IO,UI,App,Util
6406,restore some missing keyboard shortcuts,6403,IO,Logging,UI,Util,App
6407,fixed an issue where a new entry is not shown in the library if a filter/search is active,6297,APM,UI,Logging,Util,i18n,Security,DB,Logic,Interpreter,Network,App,IO
6419,fix pasting on mac and linux,pr #6313 caused the double pasting issue on macos (see #4699),App,IO,Logging,Util,UI,Interpreter
6423,keep group pane size when resizing window (#6180),<!--,i18n,Logic,UI,DB,App,Network,Logging,Interpreter,IO,Util,APM
6426,sorting custom entry fields that contain numerical values,@mootezsaad  and i have worked together and this pull request 6349,App,Util
6427,add truncate as a bibtex key modifier,<!--,Util,Test,App
6434,fix clear year and month field when converting to biblatex,<!--,IO,DB,App,Util,Network,Logic,Test,i18n,APM,Interpreter,UI,Logging
6436,cleanup dead code,cleaned some locs left from jabref 3.x (found during #6381),UI,Util,Logging,IO,App
6437,fixed entry duplication on file download,this fixes an issue introduced in #6381 that resulted in two identical fulltext-file entries when downloading a fulltext file via the context menu of an online link.,IO,UI,Logging,Util,Interpreter,App,Network
6440,add support for jumping in ordered author list by typing letters,<!--,IO,Interpreter,Util,App,UI,Logging
6443,implement task progress indicator (and dialog) in the toolbar,<!--,Util,IO,App,Logging,UI
6444,add concise message when saveexception happen,add concise message when saveexception happen. to fix 6127,Logging,Util,UI,IO,App
6450,dimitra 6349,@calixtus  i think you forgot to merge the modified branch in master,App,Util
6452,enforce leftcurly rule,this is a follow-up to 6283.,Logging,Util,App,Interpreter
6469,fix bracket collisions,<!--,Test,Logging,App,Util
6475,fixed #6472 that multiple background task popups stacked over each other,<!--,Util,Logging,App,UI,IO
6478,fix libre office connection and other progress dialogs,6477,Logging,IO,Util,Network,App,UI,Logic,i18n,Interpreter
6479,fixes generated bibtex key and display of institute authors,<!--,App,Util
6489,refactor bibtexkeypatternpreferences,follow-up to #6245,App,IO,UI,Util,Network,Logging
6504,enable users to simultaneously search all searchbasedfetchers,this pr enables users can send queries to all e-libraries simultaneously through the  websearchpane .,UI,Util,App,IO
6505,easybind revision part two,<!--,UI,Interpreter,Util,Logging,IO,App,Network
6508,fixes missing library properties context menu on library tab,fixes issue #6485 to implement context menu on library tabs,IO,Util,Logging,App,UI
6509,refactor externalprefs,follow up to #6489,IO,Test,App,Network,Util,Interpreter,Logging,DB,UI
6511,return true in action helper if file is online link,otherwise it will be interpreted as path which obiously fails,Util,App,IO,UI
6513,fix fetcher help links,<!--,Test,Util,IO,App
6516,add some javadoc and fix the preview update issue,<!--,UI,IO,Logging,App,Interpreter,Util
6518,refactor main table preferences,follow up to #6509,UI,App,Util
6519,catch inaccessibleobjectexception,catch inaccessibleobjectexception otherwise jabref becomes unusable in some occasions.,Util,i18n,App,Logging,UI
6524,add markdown checks (and fix some markdown issues),we have markdown files  where [linting issues]( and wrong links could be contained. this pr adds a check for it. and also fixes issues of it.,Network,Logging,Util,App,Search,Test
6531,allow entrytype as sorting criterion,fixes https://discourse.jabref.org/t/export-sort-by-entry-type/2122/1,Util,IO,UI,App
6545,rename bibtexkey,as discussed in the devcall  bibtexkey should now be renamed to citationkey,Util,App,IO,Interpreter,UI,Logging
6552,fix author formatter for unchanged names,<!--,App,Util
6554,fix group hit counter calculation preferences,closes #6244,IO,App,Util,UI,Logging,Search,Interpreter,Test,Network
6558,use letters to acess recent libraries in menu,<!--,UI,App,IO
6567,fix exception for unlinked files,<!--,Test,Network,App,Util,IO
6578,fix xmp exctrator not returning empty optional,6577,App,Util,IO
6586,validates the file path of a texgroup and fixes texgroup s  library has been modified by another program,6420.,UI,Test,IO,Network,i18n,Util,Logging,App,Search,Interpreter
6587,fix some fetcher tests,refs #6369,App,Util,Test
6590,fix ris doi import,use doi parse and only add valid dois,App,IO,Util
6603,fixed an issue where entry preview tab has no name in drop down list.,6591,Interpreter,App,UI,Util,IO
6608,fix downloaded files moved to citation key dir,6589,Test,Util,IO,App
6635,change  duplicates  window to recall size/position,the  possible duplicate entries  window now remembers its size and position throughout a session (6582]( this was done by adding a dialogwindowstate class to the gui utils. this class stores the size and position of the dialog window. the statemanager class was modified to store this object. it is retrieved whenever a new duplicateresolverdialog object is created to get the previous size and position and is updated whenever the user proceeds through the dialog options. the dialogwindowstate class can be re-used if this feature is needed for other dialog windows.,UI,Util,App
6637,fixes issue where unix crashes when inotify is full,previously  the program was crashing for unix users when inotify had reached its max file limit. since the only way to fix this seems to be to close applications or to edit privileged system files  the proposed solution is to notify the user of the issue and give them the option of continuing usage of the application. 6073,App,Logging,Util,IO
6641,medra doi fetcher implementation.,6602,IO,Test,Search,Network,Util,App
6642,fix for exception thrown if no delimiters were specified,assigned default values for delimiters to fix the exception thrown,App,IO,UI,Util
6664,add collection of comp sci bibliographies fetcher,6638,Util,Test,Network,Search,App
6665,unconfigure buttons first before reconficuring them,the last update to controlsfx seems to have introduced the requirement of unconfiguring buttons first before reconfiguring them.,App,Logging,Util,i18n,UI
6682,rework search bar,![picturemessage_3ata4qts chg](https://user-images.ent.com/50491877/87246991-42c7b200-c451-11ea-9a4d-2f5e11be92e8.png),Logic,App,i18n,Util,UI,IO,Logging
6683,getagency moved from doi to doifetcher,the method  getagency  has been moved from  doi  back to  doifetcher .,Logging,IO,Network,Util,App
6687,add testing interface  including a set of capabilities to tests for,add capability tests for the fetchers to determine whether they support the tested capability.,Interpreter,Network,App,Util,IO,Logging,Search
6689,enable merging of bibdatabases,this pr adds a method to the bibdatabases that allows instances to be merged with other instances.,Logging,App,IO,Test,Util
6693,fixed issue 6692,6692  renamed listbind to bindcontent where it was used,App,Util,UI,IO,Interpreter,Logging
6706,readability for citation key patterns,<!--,Test,App,Util
6723,delete link after download,6588.,App,Network,Util,Interpreter,Logging,IO,UI
6725,add css customisation,this pr continues the abandoned pr #6036,Security,App,UI,i18n,Logging,Util,Test,Search,IO,Network,Interpreter
6729,enable springerfetchertest running on ci using a dedicated key,i created another key for springer. the key is separate to our main key to avoid hitting request limits for this key. this pr enables testing springernature using our github workflows.,Logging,Util,Search,Interpreter,Test,IO,Security,UI,Network,App
6731,add instructions how to work with fetchers,this pr tries to summarize of how to work with fetchers locally.,IO,Util
6740,fix copy pasting and delete via menu or key,add hack for osx.,IO,Util,Interpreter,Logging,UI,App
6746,fix entry gets deleted after aux import,set changed flag on clone also for misc entry type  because otherwise it equals the default entry type and no change is triggered which results in the entry not beeing written to the database on save,App,Util,Network,IO,Test,Logging
6747,[6574] added support for biblatex-software,added change to changelog,App,Logging,Test,Network,Util,Interpreter,IO,UI
6749,improve handling of annotation processor in eclipse,i played around a bit with jabref in vs code  and encountered a problem with the annotation processing. it was quite easy to fix by putting the files generated by the annotation processor in the  src/gen  folder.,Logic,UI,Search,Util,App,IO,Logging,Interpreter,i18n,Test,Network
6750,fix order of fields in bib file,the fields are no longer serialized in alphabetic order. this was introduced in 6152.,Util,IO,App,Test
6760,fix html chars formatter for percent sign,6753,App,Test
6761,remember last choice of download files in import dialog,<!--,Util,Logging,UI,Network,IO,App
6768,merge identical group color indicators,6175,Interpreter,Logging,UI,App,Util
6771,shared database synchronized by focuschangedevent,this pr is related to #6663 and partly #4461.,Util,App
6779,refactor file preferences,this pr is going to refactor some parts of the code in relationship with the filepreferences. it s going to be rather big again  since filepreferences and other preferences objects are not clearly distinguishable and this will take probably some time for me to contemplate how to resort them.,Logging,Network,Util,IO,Interpreter,App,UI
6780,fix biblatex software test,fixed small issue about forgotten biblatex test.,App,Util,Test
6781,fix aps and sciencedirect fetcher,this pr fixes two fetchers (refs 6369):,App,Util,Network,IO,Test
6788,fix cleanup field formatters not working when enabled,6787,App,UI
6790,fix more fetchers,this pr fixes fetchers (refs #6369):,App,IO,Search,Network,Util
6792,change code style in typedbibentry,in another context  i stumbled upon typedbibentry. i fixed some typos and simplified the constructor code. (no optionals as parameters),App,Util
6795,fix cleanup formatters to avoid race conditions,follow up ref 6788#pullrequestreview-475866233,Search,Test,App,Logging,Security,Interpreter,Network,IO,Util
6798,new doi added by arxiv,this refs 6369,Test,Util,App,Network,IO
6799,feature/enable lucene query parsing,this pr enables the conversion of user queries  formulated in a simplified lucene syntax (see adr 0014)  into complex search queries for fetchers. refs 456.,IO,Util,Search,Network,Logging,App
6805,feature/add ui for query parsing,this pr is a follow-up of 6799 ]( and adds the related changes to the ui code.,UI,App,Util
6807,fixed typo in buildinfo,fixes typo in key. at least intellij minded.,IO,Util
6808,refactor edit action,6293,Logging,IO,Util,App,UI
6809,6705   added icon for multiple identifiers,added icon for multiple identifiers,Util,UI,App
6816,remove checkstyle hack. 8.36 got released,checkstyle 8.36 was released - including java14 support:  thus  no hack necessary any more.,App,UI,Util,Interpreter
6820,follow up fix for copy paste,6293,Logging,App,UI,IO
6825,architecture fix by re-sorting the classes,<!--,Test,IO,App
6833,fix/use format conversion for all imports,this pr adds conversion of entries into the desired format for all imports.,Util,Logging,App
6835,fix file update monitor shutdown,follow up from #6118,App,Logging,IO,Util
6847,feature/use unkown fields as default fields,this pr adds the unknown fielded terms as default phrases.,Util,App,Search
6850,find unlinked files : redefine keyboard shortcut,following pr #6849  redefine the keyboard shortcut from  find unlinked files  to  search for unlinked local files .,App
6853,sort-in root classes into packages (architecture),follw-up to 6825.,Util,Logic,APM,Network,IO,App,Logging,i18n,UI
6858,fix icon issue,6834,Interpreter,UI,Logging,Util,Network,IO
6871,fixed  copy key and link,copy key and link  from right-click menu creates a string that is not a url. it includes the url  but it also includes the key.,App,Logging,Util,UI,IO
6872,add multi-sentence title formatting to sentence case and title case,fixes 6759,Test,Util
6875,complete rebranding of  bibtexkey  as  citationkey,<!--,Util,Search,Network,Test,IO,App
6879,fix pasting in codearea under mac,codearea does not implement textinputcontrol,Network,Interpreter,Test,Search,Logging,Security,i18n,Util,DB,IO,UI,Logic,App
6893,fixes bugs in the  regex  cite key pattern modifier,<!--,Test
6897,doi matching in duplicate check,6707,Interpreter,Test,IO,Util,Logging,App
6918,fixes tests remaining from bibtexkey to citationkey rebranding,refs #6875,Logging,App,UI,Util
6920,improve parsing of short dois,6880,Util,Network,App,Logging
6928,changed default value of  search and store files relative to bibtex file  to true,6863,Search,Network,App,Util,Logging,IO
6933,fix remove actions for entry types in the editor,6906,UI,App,Util,Logging
6938,fix for some unicode characters in citation keys,<!--,App,Interpreter,Util
6941,fix: in entry types editor selected field is not removed after first click,6934,UI,Interpreter,IO,Util,Network,Logging,App,Test
6945,fix a fetcher test for the shortdoiservice,<!--,Network,IO,App
6960,corrected shortcut,6867,App,Util,UI
6968,remove  online  prefix in the expected file urls to fix springer fetcher tests,this addresses two of the errors in the fetcher tests as run by the ci (see #6369). examples for the failures are [here]( and [here](https://github.com/jabref/jabref/runs/1185667289?check_suite_focus=true#step:6:118).,Network,App,Util,Test
6969,mark medra test as fetcher test,i noticed that the unit tests were failing and that medra was not categorized as fetcher,Util,Test,App
6973,rewrite guidelines to java 15,follow up to 6929#issuecomment-697946619,Util,Search,Interpreter,IO,Test,UI,App,Network,Logging,Logic,i18n
6975,fix inspire fetcher and short doi fetcher tests,arxiv test is failing with the search phrase  because both queries return the same result.,Test,IO,Util
6976,fix  irregularly losing ability to edit data in biblatex source tab,6936 is about the source tab (bibtex source) losing the ability to be editable ( this happens because  codearea  can be disabled  but there is no code path that re-enables it.,Util,UI,Interpreter,Logging,IO,App
6977,adapt the short doi regex,it now accepts dois with only three characters. this fixes an error in the shortendoiformattertest as run by the ci (see #6369)  for example [here](https://github.com/jabref/jabref/runs/1185667289?check_suite_focus=true#step:6:426).,Util,App,Network,Test,Logging
6980,fix/arxiv test,adapt arxiv phrase test by choosing another query and splitting the test into two tests.,Test,IO,Util,App,Network
6982,fixed incorrect color of identity column header,6796,UI,IO,i18n,Interpreter,Network,Util,Search,Logging,Logic,App,Test
6989,merge parsing of bracketed patterns,<!--,Test,Util,App
6990,fix doi fetcher and add documentation on fetcher trust levels,~~follow-up to~~ this reverts  ~~in order to add documentation on our decisions taken in 2018.~~. that pr added a workaround to thing introduced in https://github.com/jabref/jabref/commit/15c7981b23d46b06da9b7b468d42fc179e01d3ec.,UI,Interpreter,IO,Util,Test,App,Network,Logging
6992,jstor fetcher,added fetcher for jstor.org,App,Network,Search,IO,Util,Test
6996,add reviewdog as checkstyle,motivation: many new contributors seem to ignore or don t see the failing github checks,IO,Interpreter,Logging,UI,App,Util
7007,support for exporting to yaml format,- support for exporting to yaml   6974,Util,App,IO,Logging,Network
7009,removed menu entry for  manage external file types,6991,Logging,Util,UI,App,IO
7014,add selection of  all entries  group on start-up,<!--,UI,Util,Test,App
7025,add cleanup for copying over physcial review article id as the page n…,7019,IO,UI,App,Util,Test,Interpreter,Search,Logging,Network,Security
7026,improve error handling on grobid server connection issues,hi,Util,Network,Logging,Search,IO,App
7039,add short date formatter,add formatter that can format the month field to use the shorthand abbreviation .,Util,App,Logging,IO,Test
7040,fix shared database tests,fix fieldchangeevent delta computation,IO,Test,App,Util
7043,add online-link detection to filefieldparser,<!--,Network,Util,IO,App
7056,add support for microsoft edge browser in windows and linux builds,fixes https://github.com/jabref/jabref-browser-extension/issues/238,Util,Logging,DB,IO,Logic,Interpreter,Network,App,Search,UI,Test
7073,fixes exception in preview using regexp search and regexp search without specified field,<!--,Test,App
7077,fix preview settings not saved due to l10n,introduce internal name for finding layout,Network,Logging,UI,Util,App,IO
7078,special field code maintenance,just some refactoring in preparation for the basel java se-class,UI,App,Util,IO,Logging,Interpreter
7079,feature/add abstract field to complex search,this pr adds the abstract field as a fielded term for complex queries and implements it for the existing complex search fetchers that support abstract field based filtering.,App,Search,Util
7082,feature/enable paginated fetchers,this pr adds complex search query support for paginated fetchers.,App,Logging,Util,Interpreter,IO,Test,Network,Search,UI
7093,refine default preview,this applies the quick fix proposed at  to implement the full functionality a longer thought on previews is requried.,Util,App,IO,Logging,UI,Network
7095,fixed setting title of saved new library,follow up to #6129,App,Logging,IO,DB,Util,UI
7097,update antlr task + gradle,6431,Test,Network,UI,App,IO,Interpreter,Logging,Search,Util,DB
7115,fixes npe on opening grouppanel,7114,i18n,Logging,Interpreter,Util,IO,UI,App
7116,fix saving in codearea without leaving the field,refactor  globals,Util,Logging,App,UI,Interpreter,IO
7119,improve library loading ux,when jabref opens a library  it opens a file  runs the database parser  and after everything is done  creates a new tab in the frame with the contents of the open database.,DB,App,Logging,Util,UI,IO
7121,extraction of globals.prefs.put and .get,this pr aims to extract the calls to globals.prefs.put and .get out of the jabref codebase in preparation for some architectural healing,App,IO,UI,Util,Logging
7124,enable automated cross library search using a cross library query lan…,this pr adds the capabilities to perform certain aspects of literature studies.,UI,DevOps,App,Logging,Util,IO
7125,fix binding issue for the regex and case sensitive search buttons,this pr fixes the issue related to the regex and case sensitive search buttons disappearing if the search bar is not empty. this addresses the issue raised by @k3kaw8pnf7mkmdsmphz27 in 7123.,Logic,i18n,Util,IO,App,UI,Logging
7126,change format for study definition to yaml,this pr replaces the previous use of a  .bib  file for the study definition file with a  .yml  (yaml) file.,DevOps,Network,Logging,Util,Test,IO,App
7131,fixing glyph icon colors in search bar in dark mode,##<!--,Test,Network,i18n,Logging,Search,Util,Logic,UI,IO,DevOps,App
7132,fix document viewer not showing first page,turned out it was an off by one error.,Util,UI,App,Logging,IO
7133,add githandler mock to crawler test to fix npe,this pr fixes the issue with the githandler npe for the crawlertest.java on the ci server that does not have any git credentials configured,Logging,IO,App,Network,Util,DevOps,Test,UI
7145,add idbasedsearchfetcher to jstor,as discussed in 6627#issuecomment-733514445,App,Network,IO,Search,Util
7150,update to libre office 7.0.3,remove custom lib merging,Util,IO,Logging,Logic,i18n,App
7154,fix remembering password for sql db,6869,App,Interpreter,UI
7157,remove jython,i stumbled across the jython dependency and wondered if its still necessary,App,IO,Util,UI,Logging,DB,Logic
7170,fixed setting of tab title in wrong thread,not on fx thread with shared database,UI,IO,App,Util,Logging
7173,updates to colored group indicator for cited entries,<!--,Util,Logging,App,UI,IO
7174,fixed context menu of linked files not updated,5777,Util,UI,App
7178,fix newly added entry not synced to db,7176,Util,App,DB,Logging
7179,disable slr in ui until #7126 is merged,this pr addresses the issue of integrating the slr feature in the planned release version without #7126 by disabling it.,Logging,App,Util,UI,IO
7185,improvements for entry preview (in the context of #7083 and in addition to #7093),improvements for integrity and coherence of the entry preview (in the context of #7083  in addition to #7093),UI,App,IO,Util,Network,Logging
7210,updates to institution citation keys,<!--,Test,Util,App
7224,fix clipboardmanager <-> prefs ordering,7200,App,Logging,IO,UI,APM,Network,Interpreter,Util
7225,fix some fetcher test,this pr fixes some of the failing fetcher tests specified in #6369.,Test,Util,App,Logging
7229,disable acm  google scholar  jstor,we cannot get the acm fetcher working (#5804) nor the google scholar (#7075). jstor has a traffic limit. thus  we disabled them.,App,Util
7232,add a more descriptive path when directory cannot be found,<!--,IO,UI,Logging,Network,App,Util
7240,add traditional chinese,7237,Util
7243,fix normalize pages formatter not replacing dashes,7239,Logging,DB,IO,Logic,Network,Util,UI,i18n,Test,Interpreter,DevOps,App
7260,improved detection of long doi s within text,fixes a checkstyle issue of #7257.,Util,Test
7269,only disable  move to file dir when path equals,fix equals in path method,App,IO,Util,Test,UI,Network
7271,simplify lo connection and fix threading errors,simplify lo connection,i18n,IO,UI,Logic,Logging,Util,App
7279,replace <p> in localization by \n,triggered by   i saw that we did not cover the  runtimeexceptions  by test cases. this pr adds them.,Util,App,UI,Test
7286,add some special fields as default columns,so that users find these features more easily.,Logging,UI,IO,Network,Util,App
7290,fix for issue 7287,<!--,Network,IO,Interpreter,App,Util,DevOps,Logging,DB,UI
7292,fixed exception about missing custom css file,7177  java exception when trying to open the preferences with missing custom theme,Network,Logging,IO,Util,UI,App,Interpreter
7296,fix typo in conversion for small pi,<!--,Util
7301,suggestions for changes in caching latex free authors,<!--,App,Util
7302,added keyboard shortcuts (clear/set read status),<!--,App
7312,add javafx version number + update javafx to 15.01,remove java 9 check classes,UI,Logging,IO,App,Util
7338,fix expansion of bracketed expressions in regexpbasedfilefinder,<!--,App,Test,IO,Util
7347,fix handling of url in file field,~~one test introduced in #7043 raises an exception on windows  because  :  is not allowed as path separator.~~,App,Util,Test,IO,Network
7348,disable certain fetcher tests on ci,disable googlescholar and jstor. (refs #7229),Util,App,IO,Network,Test
7350,feature/implement complex queries,this pr introduces querytransformers for creating structured and fielded queries in the cross-library query language and transforming them into the library-specific query language.,App,Logging,IO,Network,Util,Search
7352,fixes regex (again) in previewviewer,<!--,UI,Logging,Util,App,Network
7355,fix harvard exporter by changing authorsformatter,the layout files were still using the old formatter chaining for authors and therefore were responsible for removing braces,Logic,Util,DB,UI,Interpreter,Test,Network,IO,Logging,DevOps,App
7357,export urldate to msoffice,7354,App,Util
7358,export full month name instead of number in ms office,follow up fix from #7354,Util,Network,App
7368,add migration to special field,this pr migrates all occurrences of special field values in the keywords into their respective special fields.,Logging,IO,Test,UI,Interpreter,App,Util
7373,fix exception if no azureinstrumentationkey is available,follow-up to #6990  where the empty string is set at  build.properties  if no data is availble. especially:,Util,App,Network,UI,APM
7377,trigger websearch using enter,improves the ux of the web search by triggering it if the enter key is pressed while the search field is focused.,UI,App
7379,fix  alt + keyboard shortcuts do not work,<!--,Util,App,UI,Logging,IO
7384,grand unified preferences dialog,long announced  long expected  long declared vaporware  but here it comes. the grand unified preferences dialog project.,Util,Logging,App,UI,IO
7412,fixes the auto-update problem with texgroups on ubuntu linux and makes the detection of file modifications more reliable,fixes  in #7173.,Network,Logging,UI,App,Test,IO,Util
7417,added keyboard shortcut for merging entries,7414,Util,App
7421,add selection copy to preview window,6962,Logging,Util,App,UI,Network
7425,fix typos,will take a long time until it will be eventually merged. there  some non-related typo fixed were fixed. this pr extract these fixes into a separate pr.,Search,Logging,App,Util
7426,fix ccsb and doaj,this aligns the implementation to the documentation.,Search,Test,Util
7438,fixes the issue  non valid number as font size results in an uncaught exception.,<!--,Util,UI,App
7440,zbmath fetcher,add zbmath to the public databases which can be chosen when updating an entry with bibliographic information from the web. see 7437.,Util,Search,App,Network
7443,fix citation keys unintentionally being overwritten on import,7420,Util,IO,Logic,Test,Search,Network,i18n,App,Logging,UI,Interpreter,DB
7455,unmerge lo citations,implemented  unmerge citations  in the openoffice/libreoffice,Test,IO,Network,DB,Logging,App,Util,Interpreter,UI,Logic
7471,fixed validation before typing in new entry dialog #7020,do not show an error message if there is no error,Interpreter,UI,Util,App
7484,improve user friendliness of automatically linked files,<!--,App,UI,Util
7486,#6057 improve startup time,#6057  check string is number with regex instead of throwing exception. it will improve start time because when i have 3000+ entries it throws about ~170.000 numberformatexception,App,Util
7494,simplify biblatex entry type form,6730,UI,Interpreter,Util,App
7496,fixed switching off autocomplete on specific fields,this fixes issue described in #7320. even though user could choose fields on which autocomplete should not work it had no actual effect.,Util,App,Test
7507,fixed columns shrink in width when enlarging the jabref window,<!--,UI,IO,Test,App,Logging,Util,Interpreter,Network
7508,fix: fix content selector for custom fields,<!--,App,Util,Interpreter,UI
7518,change export to save,<!--,UI,App
7534,dd2480 2021 group 22 fix for issue 7452,<!--,App,Test,Util,UI,IO,Network
7542,add simple unit tests,i have added some simple unit tests that will increase code coverage / branch coverage.,Test,IO,Util
7543,add simple unit tests,i have added some simple unit tests that will increase code coverage / branch coverage.,Test,Util,App
7544,add simple unit tests,i have added some simple unit tests that will increase code coverage / branch coverage.,Util,Network,Interpreter,App,Test,IO,Logging,UI,Search
7545,add simple unit tests,i have added some simple unit tests that will increase code coverage / branch coverage.,Util,App,Test
7548,fixed missing trigger for linked file operations,7525,Interpreter,App,UI,Logging,Util
7549,add ability to insert arxivid,#2292  pasted  arxivid  creates new bibentry,IO,UI,Logging,Util,App
7551,fix for issue 6487: opening bibtex file (doubleclick) from folder with spaces not working,6487,Logging,UI,IO,Test,App,Network
7552,ui: fix for group icon,<!--,UI,App,Interpreter,Util
7558,allow identical group names,<!--,Util,Search,Logging,IO,Network,Test,UI,App,Interpreter
7568,optimize saving,#7265 changed to simpledateformatter it doesn t throw a lot of exception,App,Util
7569,custom doi base address fix,as mentioned in,Util,Logging,IO,Network,UI,App
7571,refactor simple unit tests,<!--,Test,Interpreter,Util,App,Security,DB,IO,Network,UI,Logging,Search
7573,fix column sort order gets overwritten,7524,IO,App,Logging,UI,Util,Network
7579,add unit tests for org.jabref.gui classes,test coverage for org.jabref.gui package is rather low (8%). this pull request adds unit tests to 3 classes under the gui package  increasing their respective line coverage from 0% to 100%. they contribute to issue #6207.,Util,App,UI,Test
7580,delete bug fix,<!--,App,UI,IO,Interpreter,Util,Logging
7581,refactoring and addition of unit tests,this pull request includes new unit tests for three classes which increases their line/statement coverage.,App,Logging,Util,Test,Interpreter,Search,Network,UI,IO
7600,fix numberformatexception in bracketedpattern,<!--,Util,Test,App
7602,adds progress count to possible duplicates dialog,7366,App,UI,Util
7636,add more unit tests to three gui classes,this pull request replaces #7635 (closed/not merged)  and it contributes to issue #6207  which is to add more unit tests to the project   in this case specifically in the gui package using test doubles.,Util,IO,App
7638,add more unit tests,<!--,App,Test,Util
7639,fix for issue 5850: journal abbreviations in utf-8 not recognized,5850,Interpreter,Search,App,Test,IO,Network,Util,Logging
7652,fix for issue 7633: unable to download arxiv pdfs if title contains curly brackets,fix 7633](7633),Interpreter,Util,App
7655,fix#7195 partly opacity of disabled icon-buttons,7195,Search,IO,App,Logging,Network,Test,Util,Security,UI,Interpreter
7656,7016 toggle of special fields does not work for sorted entries,7016,Util,Search,UI,Network,Security,IO,Logging,App,Test,Interpreter
7657,fix sslhandshake exception by using bypass,7616,IO,Interpreter,Logging,Network,Util,App,Security
7663,fixes jabref#7660 unable to download some arxiv links if the  eprint  field is missing,7660,Util,App,Interpreter,IO,Network,Test,Logging,Search
7664,fix for issue 7641: wrong path to texstudio,<!--,IO,Logging,Interpreter,App,Network,Util
7671,migration of timestamp,this pr moves the migration of the timestamp field from a postopenmigration to mutually exclusive cleanup actions.,Util,Test,App
7672,fix threading cleanup in performsearch,7606,IO,Util,Logging,UI,Interpreter,App
7674,fixes jabref#7305: the rfc fetcher is not compatible with the draftfix for issue 7305,7305,App,Util,Network
7675,fix cleanup run on wrong entry when fetching from doi,6267,Util,Logging,App
7677,ms office xml: export month name,fixes https://discourse.jabref.org/t/export-month-as-text-not-number/2685,Util,App
7683,make key for sciencedirect configurable,this pr aligns the key handling code of sciencedirect to the one of other fetchers.,Util,IO,Network,App,Logging
7684,fix sciencedirect fetcher,for the test pdf  the json structure does not contain the full text any more. one has to use other meta data. this pr does that,IO,Util,Logging,App,Network
7685,add and extend unit tests,<!--,Test,App,Util
7686,fix arxiv fetcher tests,arxiv does not use     but   . fixed in the test.,Network,IO,App,Interpreter,Util,Search,Logging
7687,refactoring existing unit tests,<!--,Util,IO,Interpreter,Network,App,Search,Logging,Test
7693,refactoring existing unit tests,<!--,Interpreter,App,Util,Logging,Test,Search,IO,Network,UI
7694,add and extend unit tests,<!--,Util,UI,IO,Search,Test,Network,Interpreter,Logging,App
7696,add simple unit tests,<!--,Test,Util
7697,refactor nobibtexfieldcheckertest to increase mutation coverage,this pull request contributes to issue #6207  which is to add more unit tests or improve existing ones. i used pitest to compute the mutation coverage and found that some conditions were not covered in the unit test and some conditions tested were redundant because they would not be reached.  following are the changes:,App,Test,Util
7698,added doiduplicationcheckertest to increase coverage,this pull request contributes to issue #6207  which is to add more unit tests or improve existing ones. i used pitest to compute the line and mutation coverage. since doiduplicationchecker did not have its unit test (its method was being tested in other test classes)  i added the test to increase both coverages.,Util,App,Test
7700,refactoring existing unit tests into parametrized tests,this pull request contributes to issue #6207  which is to add more unit tests or improve existing ones.,Util,Test
7702,fix for issue 6197: do not store downloaded file if it is already attached,<!--,Test,UI,App,IO,Logging,Util
7705,added preset for new entry keybindings and reintroduced defaults,added preset for new entry keybindings on public demand.,UI,IO,Test,Util,App
7708,select the entry which has smaller dictonary order when merge,<!--,UI,Util,App
7709,fix for issue 6966: open all files of multiple entries,6966,Util,App,IO,UI
7711,fix: make fields sorted by lexicographical order,<!--,Util,UI,App
7714,fix for issue 4682 : restructuring the side pane structure having additional functionality and merging the remove group menus,rearrange side pane structure having add button moved to the bottom of the side pane and merging the remove group menus.,Logging,UI,IO,App,Interpreter,i18n,Util
7727,refs for issue 5464: entry preview as tab: full change only takes effect after restart of program,<!--,Logging,App,UI,IO,Util
7733,fix for issue 5804: rewrite acm fetcher,<!--,IO,App,Util,Network
7734,support fall back fields in citation key generation,<!--,APM,Search,IO,Network,Util,App,Test
7749,fix checkstyle in unit test,<!--,Util,Test
7767,add unit test for abbreviateannotationname() to fileannotationtest.java,add unit test to fileannotationtest.java to cover previously uncovered method abbreviateannotationname().,Util,Test
7769,add unit test for serializeall() to bibentrywritertest.java,add unit test to bibentrywritertest.java in order to cover previously uncovered method serializeall().,IO,App,Util,Test
7772,step0 : start model/openoffice  logic/openoffice/style,<!--,Logic,Logging,App,UI,i18n,IO,Util
7775,fix ris importer follow up,<!--,Util,IO,App
7797,added auto-key-generation task to task-progress,auto-key-generation tasks are now shown in the list of background tasks,Util,i18n,IO,Logic,UI,Test,Interpreter,Logging,App
7808,implemented a select all button for the library import function (issue #7786),7768,Util,Interpreter,App,UI
7812,fix annotation + package of acmportalparsertest,acmportalparsertest  was in the wrong package. test connects to an external service  therefore annotated with fetchertest,Test,APM,App,Network,Util,IO
